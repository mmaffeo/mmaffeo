//
//  Copyright (c) 2009 Bobcat Company as an unpublished work.
//  All Rights Reserved.
//
//  The information contained herein is confidential property of Bobcat Company.
//  The use, copying, transfer or disclosure of such information is prohibited except
//  by express written agreement with Bobcat Company.
//
//  Code Generated by Simulink Real-Time Workshop
//
//  Simulink model                       : Chart


#ifndef RTW_HEADER_Chart_h_
#define RTW_HEADER_Chart_h_
#include <string.h>
#include <stddef.h>
#ifndef Chart_COMMON_INCLUDES_
# define Chart_COMMON_INCLUDES_
#include "rtwtypes.h"
#include "rtw_continuous.h"
#include "rtw_solver.h"
#endif                                 // Chart_COMMON_INCLUDES_

#include "Chart_types.h"

// Macros for accessing real-time model data structure
#ifndef rtmGetErrorStatus
# define rtmGetErrorStatus(rtm)        ((rtm)->errorStatus)
#endif

#ifndef rtmSetErrorStatus
# define rtmSetErrorStatus(rtm, val)   ((rtm)->errorStatus = (val))
#endif

// user code (top of header file)
#include <stdbool.h>

// Block states (auto storage) for system '<Root>'
typedef struct {
  struct {
    uint_T is_c3_Chart:3;              // '<Root>/Chart'
    uint_T is_active_c3_Chart:1;       // '<Root>/Chart'
  } bitsForTID0;
} DW_Chart_T;

// External inputs (root inport signals with auto storage)
typedef struct {
  uint8_T test;                        // '<Root>/state_Inverter'
  uint8_T requested_State;             // '<Root>/requested_State'
  uint16_T requested_Speed;            // '<Root>/requested_Speed'
} ExtU_Chart_T;

// External outputs (root outports fed by signals with auto storage)
typedef struct {
  uint16_T cmdInverter;                // '<Root>/cmdInverter'
} ExtY_Chart_T;

// Real-time Model Data Structure
struct tag_RTM_Chart_T {
  const char_T *errorStatus;
};

// Block states (auto storage)
extern DW_Chart_T Chart_DW;

#ifdef __cplusplus

extern "C" {

#endif

  // External inputs (root inport signals with auto storage)
  extern ExtU_Chart_T Chart_U;

  // External outputs (root outports fed by signals with auto storage)
  extern ExtY_Chart_T Chart_Y;

#ifdef __cplusplus

}
#endif

#ifdef __cplusplus

extern "C" {

#endif

  // Model entry point functions
  extern void Chart_initialize(void);
  extern void Chart_step(void);

#ifdef __cplusplus

}
#endif

// Real-time Model object
#ifdef __cplusplus

extern "C" {

#endif

  extern RT_MODEL_Chart_T *const Chart_M;

#ifdef __cplusplus

}
#endif

//-
//  The generated code includes comments that allow you to trace directly
//  back to the appropriate location in the model.  The basic format
//  is <system>/block_name, where system is the system number (uniquely
//  assigned by Simulink) and block_name is the name of the block.
//
//  Note that this particular code originates from a subsystem build,
//  and has its own system numbers different from the parent model.
//  Refer to the system hierarchy for this subsystem below, and use the
//  MATLAB hilite_system command to trace the generated code back
//  to the parent model.  For example,
//
//  hilite_system('testmodel2017b/Subsystem/Chart')    - opens subsystem testmodel2017b/Subsystem/Chart
//  hilite_system('testmodel2017b/Subsystem/Chart/Kp') - opens and selects block Kp
//
//  Here is the system hierarchy for this model
//
//  '<Root>' : 'testmodel2017b/Subsystem'
//  '<S1>'   : 'testmodel2017b/Subsystem/Chart'


//-
//  Requirements for '<Root>': Chart

#endif                                 // RTW_HEADER_Chart_h_

//
//  [EOF]


#ifndef _CDATA_H_
#define _CDATA_H_

/*****************************************************************************\
This module defines the constant data structures available in the database.

This file is auto-generated by read_CD2.pl.

Built from:
  database\ED1287_MXGateway.sadb
  key: MX_GATEWAY
\*****************************************************************************/

#include "stdint.h"

typedef struct CONSTANT_DATA_s{
uint8_t  MAJOR_VERSION_NUMBER;                              //Do not move 0x10200                                                                       
uint8_t  MINOR_VERSION_NUMBER;                              //Do not move 0x10201                                                                       
uint16_t CONSTANT_DATA_DEFAULT;                             //Do not move 0x10202                                                                       
uint8_t  PIN_1_1;                                           //Do not move 0x10204                                                                       
uint8_t  BOBCAT_SERIAL_NUMBER1;                             
uint8_t  BOBCAT_SERIAL_NUMBER2;                             
uint8_t  BOBCAT_SERIAL_NUMBER3;                             
uint8_t  BOBCAT_SERIAL_NUMBER4;                             
uint8_t  BOBCAT_SERIAL_NUMBER5;                             
uint8_t  BOBCAT_SERIAL_NUMBER6;                             
uint8_t  BOBCAT_SERIAL_NUMBER7;                             
uint8_t  BOBCAT_SERIAL_NUMBER8;                             
uint8_t  BOBCAT_SERIAL_NUMBER9;                             
uint8_t  BOBCAT_SERIAL_NUMBER10;                            
uint8_t  BOBCAT_SERIAL_NUMBER11;                            
uint8_t  BOBCAT_SERIAL_NUMBER12;                            
uint8_t  BOBCAT_SERIAL_NUMBER13;                            
uint8_t  BOBCAT_SERIAL_NUMBER14;                            
uint8_t  BOBCAT_SERIAL_NUMBER15;                            
uint8_t  BOBCAT_SERIAL_NUMBER16;                            
uint8_t  BOBCAT_SERIAL_NUMBER17;                            
uint8_t  BOBCAT_SERIAL_NUMBER18;                            
uint8_t  BOBCAT_SERIAL_NUMBER19;                            
uint8_t  PIN_2_1;                                           //Do not move 0x10218                                                                       
uint8_t  BOBCAT_SERIAL_NUMBER2_1;                           
uint8_t  BOBCAT_SERIAL_NUMBER2_2;                           
uint8_t  BOBCAT_SERIAL_NUMBER2_3;                           
uint8_t  BOBCAT_SERIAL_NUMBER2_4;                           
uint8_t  BOBCAT_SERIAL_NUMBER2_5;                           
uint8_t  BOBCAT_SERIAL_NUMBER2_6;                           
uint8_t  BOBCAT_SERIAL_NUMBER2_7;                           
uint8_t  BOBCAT_SERIAL_NUMBER2_8;                           
uint8_t  BOBCAT_SERIAL_NUMBER2_9;                           
uint8_t  BOBCAT_SERIAL_NUMBER2_10;                          
uint8_t  BOBCAT_SERIAL_NUMBER2_11;                          
uint8_t  BOBCAT_SERIAL_NUMBER2_12;                          
uint8_t  BOBCAT_SERIAL_NUMBER2_13;                          
uint8_t  BOBCAT_SERIAL_NUMBER2_14;                          
uint8_t  BOBCAT_SERIAL_NUMBER2_15;                          
uint8_t  BOBCAT_SERIAL_NUMBER2_16;                          
uint8_t  BOBCAT_SERIAL_NUMBER2_17;                          
uint8_t  BOBCAT_SERIAL_NUMBER2_18;                          
uint8_t  BOBCAT_SERIAL_NUMBER2_19;                          
uint8_t  DEALER_NAME_1;                                     //Do not move 0x1022C                                                                       
uint8_t  DEALER_NAME_2;                                     
uint8_t  DEALER_NAME_3;                                     
uint8_t  DEALER_NAME_4;                                     
uint8_t  DEALER_NAME_5;                                     
uint8_t  DEALER_NAME_6;                                     
uint8_t  DEALER_NAME_7;                                     
uint8_t  DEALER_NAME_8;                                     
uint8_t  DEALER_NAME_9;                                     
uint8_t  DEALER_NAME_10;                                    
uint8_t  DEALER_NAME_11;                                    
uint8_t  DEALER_NAME_12;                                    
uint8_t  DEALER_NAME_13;                                    
uint8_t  DEALER_NAME_14;                                    
uint8_t  DEALER_NAME_15;                                    
uint8_t  DEALER_NAME_16;                                    
uint8_t  DEALER_NAME_17;                                    
uint8_t  DEALER_NAME_18;                                    
uint8_t  DEALER_NAME_19;                                    
uint8_t  DEALER_NAME_20;                                    
uint8_t  DEALER_NAME_21;                                    
uint8_t  DEALER_NAME_22;                                    
uint8_t  DEALER_NAME_23;                                    
uint8_t  DEALER_NAME_24;                                    
uint8_t  DEALER_NAME_25;                                    
uint8_t  DEALER_NUMBER_1;                                   //Do not move 0x10245                                                                       
uint8_t  DEALER_NUMBER_2;                                   
uint8_t  DEALER_NUMBER_3;                                   
uint8_t  DEALER_NUMBER_4;                                   
uint8_t  DEALER_NUMBER_5;                                   
uint8_t  DEALER_NUMBER_6;                                   
uint8_t  DEALER_NUMBER_7;                                   
uint8_t  DEALER_NUMBER_8;                                   
uint8_t  DEALER_NUMBER_9;                                   
uint8_t  DEALER_NUMBER_10;                                  
uint8_t  DEALER_NUMBER_11;                                  
uint8_t  DEALER_NUMBER_12;                                  
uint8_t  DEALER_NUMBER_13;                                  
uint8_t  DEALER_NUMBER_14;                                  
uint8_t  DEALER_NUMBER_15;                                  
uint8_t  DEALER_NUMBER_16;                                  
uint8_t  DEALER_NUMBER_17;                                  
uint8_t  DEALER_NUMBER_18;                                  
uint8_t  DEALER_NUMBER_19;                                  
uint8_t  DEALER_NUMBER_20;                                  
uint8_t  DEALER_NUMBER_21;                                  
uint8_t  DEALER_NUMBER_22;                                  
uint8_t  DEALER_NUMBER_23;                                  
uint8_t  DEALER_NUMBER_24;                                  
uint8_t  DEALER_NUMBER_25;                                  
uint16_t UNUSED;                                            
uint16_t UNUSED1;                                           
uint16_t UNUSED2;                                           
uint16_t UNUSED3;                                           
uint16_t UNUSED4;                                           
uint16_t UNUSED5;                                           
uint16_t UNUSED6;                                           
uint16_t UNUSED7;                                           
uint16_t UNUSED8;                                           
uint8_t  OPTION_EMEA_CONTROLS_OPTION_A;                     //Do not move 0x10270 - Readback only                                                       
uint8_t  OPTION_EMEA_CONTROLS_OPTION_B;                     //Do not move 0x10271 - Readback only                                                       
uint8_t  OPTION_EMEA_CONTROLS_OPTION_C;                     //Do not move 0x10272 - Readback only                                                       
uint8_t  AUX2_FLOW_LOW_OPTION;                              //Do not move 0x10273                                                                       
uint8_t  AUX2_FLOW_MED_OPTION;                              //Do not move 0x10274                                                                       
uint8_t  AUX2_FLOW_HI_OPTION;                               //Do not move 0x10275                                                                       
uint16_t UNUSED9;                                           
uint16_t UNUSED10;                                          
uint16_t UNUSED11;                                          
uint16_t UNUSED12;                                          
uint16_t CDATA_MAP_TABLE_VERSION;                           
uint8_t  AIR_FILTER_FUNCTION;                               //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED13;                                          
uint16_t AIR_FILTER_DEBOUNCE_NORMAL;                        
uint16_t AIR_FILTER_DEBOUNCE_NOT_CONNECTED;                 
uint16_t AIR_FILTER_DEBOUNCE_PLUGGED;                       
uint8_t  AIR_FILTER_PLUGGED_WEIGHT;                         
uint8_t  AIR_FILTER_UNPLUGGED_WEIGHT;                       
uint16_t UNUSED14;                                          
uint16_t UNUSED15;                                          
uint16_t UNUSED16;                                          
uint8_t  HYD1_FILTER_FUNCTION;                              //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED17;                                          
uint16_t HYD1_FILTER_DEBOUNCE_NORMAL;                       
uint16_t HYD1_FILTER_DEBOUNCE_NOT_CONNECTED;                
uint16_t HYD1_FILTER_DEBOUNCE_PLUGGED;                      
uint16_t HYD_FILTER_DELAY;                                  
uint16_t UNUSED18;                                          
uint16_t UNUSED19;                                          
uint16_t UNUSED20;                                          
uint8_t  LOADSENSE_FUNCTION;                                //0 = Functional, 255 = Non-functional                                                      
uint8_t  LOADSENSE_REFERENCE;                               
uint16_t LOADSENSE_GAIN;                                    
uint16_t LOADSENSE_OFFSET;                                  
uint16_t LOADSENSE_VOLTS_GAIN;                              //fixdt(0,16,9)                                                                             
uint8_t  LOADSENSE_OORL;                                    
uint8_t  LOADSENSE_OORH;                                    
uint8_t  LOADSENSE_DB;                                      
uint8_t  LOADSENSE_FILTER_GAIN;                             
uint16_t UNUSED21;                                          
uint16_t UNUSED22;                                          
uint16_t UNUSED23;                                          
uint16_t UNUSED24;                                          
uint16_t UNUSED25;                                          
uint16_t UNUSED26;                                          
uint16_t UNUSED27;                                          
uint16_t UNUSED28;                                          
uint16_t UNUSED29;                                          
uint16_t UNUSED30;                                          
uint8_t  CONSOLE_FUNCTION;                                  //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED31;                                          
uint16_t CONSOLE_OORL;                                      
uint16_t CONSOLE_PRESENT_LOW;                               
uint16_t CONSOLE_PRESENT_HIGH;                              
uint16_t CONSOLE_OORH;                                      
uint16_t CONSOLE_DEBOUNCE_OORL;                             
uint16_t CONSOLE_DEBOUNCE_ABSENT;                           
uint16_t CONSOLE_DEBOUNCE_PRESENT;                          
uint16_t CONSOLE_DEBOUNCE_OORH;                             
uint16_t CONSOLE_ICON_FLASH_RATE;                           
uint16_t UNUSED32;                                          
uint16_t UNUSED33;                                          
uint16_t UNUSED34;                                          
uint16_t UNUSED35;                                          
uint16_t UNUSED36;                                          
uint16_t UNUSED37;                                          
uint8_t  SENSOR_SUPPLY1_FUNCTION;                           //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED38;                                          
uint16_t SENSOR_SUPPLY1_OORL;                               
uint16_t SENSOR_SUPPLY1_OORH;                               
uint16_t SENSOR_SUPPLY1_DEBOUNCE_OORL;                      
uint16_t SENSOR_SUPPLY1_DEBOUNCE_NORMAL;                    
uint16_t SENSOR_SUPPLY1_DEBOUNCE_OORH;                      
uint16_t UNUSED39;                                          
uint16_t UNUSED40;                                          
uint8_t  SENSOR_SUPPLY2_FUNCTION;                           //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED41;                                          
uint16_t SENSOR_SUPPLY2_OORL;                               
uint16_t SENSOR_SUPPLY2_OORH;                               
uint16_t SENSOR_SUPPLY2_DEBOUNCE_OORL;                      
uint16_t SENSOR_SUPPLY2_DEBOUNCE_NORMAL;                    
uint16_t SENSOR_SUPPLY2_DEBOUNCE_OORH;                      
uint16_t SENSOR_SUPPLY2_GAIN;                               //fixdt(0,16,16)                                                                            
uint16_t UNUSED42;                                          
uint8_t  VBATTERY_FUNCTION;                                 //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED43;                                          
uint16_t VBATTERY_GAIN;                                     //fixdt(0,16,12)                                                                            
uint8_t  VOLTAGE_HYSTERESIS;                                //fixdt(0,8,4)                                                                              
uint8_t  VBATTERY_FILTER_GAIN;                              
uint8_t  VBATTERY_FILTER_DISPLAY_GAIN;                      
uint8_t  VBATTERY_OORL;                                     
uint8_t  VBATTERY_EXTREMELY_LOW;                            
uint8_t  VBATTERY_LOW;                                      
uint8_t  VBATTERY_HIGH;                                     
uint8_t  VBATTERY_EXTREMELY_HIGH;                           
uint16_t VBATTERY_DEBOUNCE_OORL;                            
uint16_t VBATTERY_DEBOUNCE_LOW;                             
uint16_t VBATTERY_DEBOUNCE_NORMAL;                          
uint16_t VBATTERY_DEBOUNCE_HIGH;                            
uint16_t VBATTERY_DEBOUNCE_EXTREMELY_LOW;                   
uint16_t VBATTERY_DEBOUNCE_EXTREMELY_HIGH;                  
uint8_t  VBATTERY_TABLE_GAUGE_VER;                          
uint8_t  UNUSED44;                                          
uint16_t UNUSED45;                                          
uint16_t UNUSED46;                                          
uint16_t UNUSED47;                                          
uint8_t  ENGINE_SPEED_FUNCTION;                             //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED48;                                          
uint16_t ENGINE_SPEED_RUNNING;                              
uint16_t ENGINE_SPEED_NOT_RUNNING;                          
uint16_t ENGINE_SPEED_NO_SIGNAL;                            
uint16_t ENGINE_SPEED_HIGH;                                 
uint16_t ENGINE_SPEED_EXTREMELY_HIGH;                       
uint16_t ENGINE_SPEED_OUT_OF_RANGE;                         
uint8_t  ENGINE_RPM_FACTOR;                                 
uint8_t  ENGINE_SPEED_FILTER_FAST_VALUE;                    
uint8_t  ENGINE_SPEED_FILTER_SLOW_VALUE;                    
uint8_t  EOP_NO_ENGINE_SPEED_SIGNAL_VALUE;                  
uint8_t  FLYWHEEL_TEETH;                                    
uint8_t  UNUSED49;                                          
uint16_t ENGINE_SPEED_DEBOUNCE_NO_SIGNAL;                   
uint16_t ENGINE_SPEED_DEBOUNCE_NORMAL;                      
uint16_t ENGINE_SPEED_DEBOUNCE_HIGH;                        
uint16_t ENGINE_SPEED_DEBOUNCE_EXTREMELY_HIGH;              
uint16_t ENGINE_SPEED_DEBOUNCE_SHUTDOWN;                    
uint16_t ENGINE_SPEED_DEBOUNCE_OUT_OF_RANGE;                
uint8_t  IDLE_TIME_FUNCTION;                                
uint8_t  UNUSED50;                                          
uint16_t IDLE_DEBOUNCE_ACTIVE;                              
uint16_t ECU_MIN_ENGINE_SPEED_LOW;                          
uint16_t ECU_MIN_ENGINE_SPEED_HIGH;                         
uint16_t ECU_MAX_ENGINE_SPEED_LOW;                          
uint16_t ECU_MAX_ENGINE_SPEED_HIGH;                         
uint16_t UNUSED51;                                          
uint16_t UNUSED52;                                          
uint16_t UNUSED53;                                          
uint16_t UNUSED54;                                          
uint16_t UNUSED55;                                          
uint16_t UNUSED56;                                          
uint16_t UNUSED57;                                          
uint16_t UNUSED58;                                          
uint16_t UNUSED59;                                          
uint16_t UNUSED60;                                          
uint8_t  STARTER_FUNCTION;                                  //0 = Functional, 255 = Non-functional                                                      
uint8_t  STARTER_FEEDBACK_FUNCTION;                         //0 = Functional, 255 = Non-functional                                                      
uint16_t STARTER_DEBOUNCE_ERROR_OFF;                        
uint16_t STARTER_DEBOUNCE_ERROR_ON;                         
uint16_t STARTER_DEBOUNCE_NORMAL;                           
uint16_t UNUSED61;                                          
uint16_t UNUSED62;                                          
uint16_t UNUSED63;                                          
uint16_t UNUSED64;                                          
uint8_t  FUEL_PRIMARY_FUNCTION;                             //0 = Functional, 255 = Non-functional                                                      
uint8_t  FUEL_PRIMARY_FEEDBACK_FUNCTION;                    //0 = Functional, 255 = Non-functional                                                      
uint8_t  FUEL_PRIMARY_TIMING_VERSION;                       
uint8_t  UNUSED65;                                          
uint16_t FUEL_PRIMARY_DEBOUNCE_NORMAL;                      
uint16_t FUEL_PRIMARY_DEBOUNCE_ERROR_OFF;                   
uint16_t FUEL_PRIMARY_DEBOUNCE_ERROR_ON;                    
uint8_t  FUEL_SECONDARY_FUNCTION;                           
uint8_t  FUEL_SECONDARY_FEEDBACK_FUNCTION;                  
uint16_t FUEL_SECONDARY_TIMER;                              
uint16_t FUEL_SECONDARY_AFBK_GAIN;                          //fixdt(0,16,8)                                                                             
uint16_t FUEL_SECONDARY_DEBOUNCE_SHORT_TO_GROUND;           
uint16_t FUEL_SECONDARY_DEBOUNCE_OPEN_CIRCUIT;              
uint16_t FUEL_SECONDARY_DEBOUNCE_SHORT_TO_BATTERY;          
uint16_t FUEL_RESOLUTION_TIMER;                             
uint8_t  FUEL_PRIMARY_ON_SECONDARY_FAILURE;                 
uint8_t  UNUSED66;                                          
uint16_t UNUSED67;                                          
uint16_t UNUSED68;                                          
uint16_t UNUSED69;                                          
uint8_t  HYD_EXCHANGE_FUNCTION;                             //Do not move 0x10390                                                                       
uint8_t  HYD_EXCHANGE_FEEDBACK_FUNCTION;                    //0 = Functional, 255 = Non-functional                                                      
uint16_t HYD_EXCHANGE_DEBOUNCE_ERROR_OFF;                   
uint16_t HYD_EXCHANGE_DEBOUNCE_ERROR_ON;                    
uint16_t UNUSED70;                                          
uint16_t UNUSED71;                                          
uint16_t UNUSED72;                                          
uint16_t UNUSED73;                                          
uint16_t UNUSED74;                                          
uint16_t UNUSED75;                                          
uint16_t UNUSED76;                                          
uint16_t UNUSED77;                                          
uint16_t UNUSED78;                                          
uint16_t UNUSED79;                                          
uint16_t UNUSED80;                                          
uint16_t UNUSED81;                                          
uint16_t UNUSED82;                                          
uint8_t  AUTOIDLE_FUNCTION;                                 //Do not move 0x103B0                                                                       
uint8_t  AUTOIDLE_ARMBAR_DELAY;                             
uint16_t AUTOIDLE_PRESSURE_ON;                              
uint16_t AUTOIDLE_PRESSURE_OFF;                             
uint16_t UNUSED83;                                          
uint8_t  AUTOIDLE_LOW_IDLE_START;                           
uint8_t  UNUSED84;                                          
uint16_t LOW_IDLE_COMMAND;                                  
uint8_t  AUTOIDLE_IDLE_DELAY;                               
uint8_t  UNUSED85;                                          
uint16_t UNUSED86;                                          
uint16_t UNUSED87;                                          
uint8_t  UNUSED88;                                          
uint8_t  UNUSED89;                                          
uint16_t UNUSED90;                                          
uint16_t UNUSED91;                                          
uint16_t UNUSED92;                                          
uint16_t UNUSED93;                                          
uint16_t UNUSED94;                                          
uint16_t UNUSED95;                                          
uint8_t  ECT_FUNCTION;                                      //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED96;                                          
uint16_t ECT_OORL;                                          
uint16_t ECT_COLD;                                          
uint16_t ECT_HIGH;                                          
uint16_t ECT_EXTREMELY_HIGH;                                
uint16_t ECT_OORH;                                          
uint16_t ECT_DEBOUNCE_OORL;                                 
uint16_t ECT_DEBOUNCE_COLD;                                 
uint16_t ECT_DEBOUNCE_NORMAL;                               
uint16_t ECT_DEBOUNCE_HIGH;                                 
uint16_t ECT_DEBOUNCE_EXTREMELY_HIGH;                       
uint16_t ECT_DEBOUNCE_SHUTDOWN;                             
uint16_t ECT_DEBOUNCE_OORH;                                 
uint8_t  ECT_FILTER_GAIN;                                   
uint8_t  ECT_INPUT_TABLE_VERSION;                           
uint8_t  ECT_OUTPUT_TABLE_VERSION;                          
uint8_t  ECT_TABLE_GAUGE_VERSION;                           
uint8_t  _spacer0_[2];                                      
uint16_t ECT_SHUTDOWN;                                      
uint16_t UNUSED97;                                          
uint16_t UNUSED98;                                          
uint16_t UNUSED99;                                          
uint16_t UNUSED100;                                         
uint16_t UNUSED101;                                         
uint16_t UNUSED102;                                         
uint16_t UNUSED103;                                         
uint8_t  HOT_FUNCTION;                                      //0 = Functional, 255 = Non-functional Do not move 0x10400                                  
uint8_t  UNUSED104;                                         
uint16_t HOT_OORL;                                          
uint16_t HOT_COLD;                                          
uint16_t HOT_HIGH;                                          
uint16_t HOT_EXTREMELY_HIGH;                                
uint16_t HOT_OORH;                                          
uint16_t HOT_SWITCH_EXTREMELY_HIGH;                         
uint16_t HOT_DEBOUNCE_OORL;                                 
uint16_t HOT_DEBOUNCE_COLD;                                 
uint16_t HOT_DEBOUNCE_NORMAL;                               
uint16_t HOT_DEBOUNCE_HIGH;                                 
uint16_t HOT_DEBOUNCE_EXTREMELY_HIGH;                       
uint16_t HOT_DEBOUNCE_SHUTDOWN;                             
uint16_t HOT_DEBOUNCE_OORH;                                 
uint8_t  HOT_FILTER_GAIN;                                   
uint8_t  HOT_TABLE_VERSION;                                 
uint8_t  HOT_TABLE_GAUGE_VERSION;                           
uint8_t  UNUSED105;                                         
uint16_t TEMPERATURE_HYSTERESIS;                            
uint16_t UNUSED106;                                         
uint16_t UNUSED107;                                         
uint16_t UNUSED108;                                         
uint16_t UNUSED109;                                         
uint16_t UNUSED110;                                         
uint16_t UNUSED111;                                         
uint16_t UNUSED112;                                         
uint8_t  EOP_FUNCTION;                                      //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED113;                                         
uint16_t EOP_OORL;                                          
uint16_t EOP_OORH;                                          
uint16_t EOP_SWITCH_LOW;                                    
uint16_t EOP_DEBOUNCE_OORL;                                 
uint16_t EOP_DEBOUNCE_SHUTDOWN;                             
uint16_t EOP_DEBOUNCE_EXTREMELY_LOW;                        
uint16_t EOP_DEBOUNCE_LOW;                                  
uint16_t EOP_DEBOUNCE_NORMAL;                               
uint16_t EOP_DEBOUNCE_OORH;                                 
uint8_t  EOP_FILTER_VALUE;                                  
uint8_t  EOP_TABLE_VERSION;                                 
uint8_t  EOP_TABLE_GAUGE_VERSION;                           
uint8_t  EOP_TABLE_WARNING_VERSION;                         
uint8_t  EOP_TABLE_SHUTDOWN_VERSION;                        
uint8_t  EOP_FAULT_DETECTION_FUNCTION;                      //0 = Functional, 255 = Non-functional                                                      
uint16_t PRESSURE_HYSTERESIS;                               
uint16_t EOP_SWITCH_PRESSURE_VALUE;                         //psi                                                                                       
uint16_t EOP_SWITCH_GAUGE_VALUE;                            //0.4% per bit                                                                              
uint16_t OFFSET_POT_ALTERNATE_CAL_DELAY;                    
uint16_t OFFSET_POT_CAL_DEADBAND_LOW;                       
uint16_t OFFSET_POT_CAL_DEADBAND_HIGH;                      
uint16_t OFFSET_POT_CENTER_RATIO;                           
uint8_t  UNUSED114;                                         
uint8_t  OFFSET_POT_FUNCTION;                               
uint16_t OFFSET_POT_OORH;                                   
uint16_t OFFSET_POT_OORL;                                   
uint8_t  OFFSET_POT_OOR_DB;                                 
uint8_t  UNUSED115;                                         
uint16_t OFFSET_POT_RATIO_GAIN;                             
uint8_t  OFFSET_POT_DEADBAND;                               
uint8_t  UNUSED116;                                         
uint16_t UNUSED117;                                         
uint16_t UNUSED118;                                         
uint16_t UNUSED119;                                         
uint16_t UNUSED120;                                         
uint16_t UNUSED121;                                         
uint16_t UNUSED122;                                         
uint8_t  OFFSET_FUNCTION;                                   //0 = Functional, 255 = Non-functional                                                      
uint8_t  OFFSET_DLX_ADJ_FUNCTION;                           //0 = Functional, 255 = Non-functional                                                      
uint16_t OFFSET_AFBK_GAIN;                                  //fixdt(0,16,8)                                                                             
uint16_t OFFSET_IFBK_GAIN;                                  //fixdt(0,16,16)                                                                            
uint16_t OFFSET_NON_ZERO_CURRENT;                           //fixdt(0,16,12)                                                                            
uint16_t OFFSET_NON_ZERO_DUTY;                              //fixdt(0,16,16)                                                                            
uint16_t OFFSET_OVERCURRENT;                                //fixdt(0,16,12)                                                                            
uint16_t OFFSET_KP;                                         //fixdt(0,16,15)                                                                            
uint16_t OFFSET_KI;                                         //fixdt(0,16,15)                                                                            
uint16_t OFFSET_DEBOUNCE_OPEN_CIRCUIT;                      
uint16_t OFFSET_DEBOUNCE_OVERCURRENT;                       
uint16_t OFFSET_DEBOUNCE_SHORT_TO_BATTERY;                  
uint16_t OFFSET_DEBOUNCE_SHORT_TO_GROUND;                   
uint16_t OFFSET_PWM_FREQ;                                   
uint8_t  OFFSET_OUTPUT_TABLE_VERSION;                       
uint8_t  UNUSED123;                                         
uint8_t  OFFSET_2ND_AUX_TABLE_VERSION;                      //Not Used                                                                                  
uint8_t  OFFSET_2ND_AUX_FUNCTION;                           //Not Used                                                                                  
uint8_t  OFFSET_BIDIRECTIONAL_CONTROL;                      //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED124;                                         
uint16_t OFFSET_CRACKPOINT_CURRENT;                         //fixdt(0,16,12) EMEA Controls Only                                                         
uint16_t UNUSED125;                                         
uint16_t UNUSED126;                                         
uint16_t UNUSED127;                                         
uint16_t UNUSED128;                                         
uint16_t UNUSED129;                                         
uint16_t UNUSED130;                                         
uint16_t UNUSED131;                                         
uint8_t  GLOW_PLUG_PREHEAT_FUNCTION;                        //0 = Functional, 255 = Non-functional                                                      
uint8_t  GLOW_PLUG_PREHEAT_FEEDBACK_FUNCTION;               //0 = Functional, 255 = Non-functional                                                      
uint8_t  GLOW_PLUG_AFTERGLOW_FUNCTION;                      //0 = Functional, 255 = Non-functional                                                      
uint8_t  GLOW_PLUG_OFF_WITH_LOW_BATTERY;                    
uint8_t  GLOW_PLUG_CRANKING_FUNCTION;                       //0 = Functional, 255 = Non-functional                                                      
uint8_t  GLOW_PLUG_PREHEAT_COUNTER;                         
uint16_t GLOW_PLUG_WAIT_TIME_LEVEL3;                        
uint16_t GLOW_PLUG_WAIT_TIME_LEVEL2;                        
uint16_t GLOW_PLUG_WAIT_TIME_LEVEL1;                        
uint16_t GLOW_PLUG_WAIT_TIME_LEVEL0;                        
uint16_t GLOW_PLUG_PREHEAT_TIME_LEVEL3;                     
uint16_t GLOW_PLUG_PREHEAT_TIME_LEVEL2;                     
uint16_t GLOW_PLUG_PREHEAT_TIME_LEVEL1;                     
uint16_t GLOW_PLUG_PREHEAT_TIME_LEVEL0;                     
uint16_t GLOW_PLUG_AFTERGLOW_TIME_LEVEL3;                   
uint16_t GLOW_PLUG_AFTERGLOW_TIME_LEVEL2;                   
uint16_t GLOW_PLUG_AFTERGLOW_TIME_LEVEL1;                   
uint16_t GLOW_PLUG_AFTERGLOW_TIME_LEVEL0;                   
uint16_t GLOW_PLUG_TEMP_LEVEL3;                             
uint16_t GLOW_PLUG_TEMP_LEVEL2;                             
uint16_t GLOW_PLUG_TEMP_LEVEL1;                             
uint16_t GLOW_PLUG_TEMP_LEVEL0;                             
uint16_t GLOW_PLUG_DEBOUNCE_NORMAL;                         
uint16_t GLOW_PLUG_DEBOUNCE_ERROR_ON;                       
uint16_t GLOW_PLUG_DEBOUNCE_ERROR_OFF;                      
uint16_t GLOW_PLUG_DEBOUNCE_CRANK;                          
uint8_t  GLOW_PLUG_ECU_COUNTDOWN_FUNCTION;                  //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED132;                                         
uint8_t  GLOW_PLUG_ECU_TEMP_VERSION;                        
uint8_t  GLOW_PLUG_ECU_TIME_VERSION;                        
uint16_t UNUSED133;                                         
uint16_t UNUSED134;                                         
uint16_t UNUSED135;                                         
uint16_t UNUSED136;                                         
uint16_t UNUSED137;                                         
uint16_t UNUSED138;                                         
uint16_t UNUSED139;                                         
uint8_t  LIGHTS_FUNCTION;                                   //0 = Functional, 255 = Non-functional                                                      
uint8_t  LIGHTS_FEEDBACK_FUNCTION;                          //0 = Functional, 255 = Non-functional                                                      
uint8_t  LIGHTS_RELAY_FEEDBACK_FUNCTION;                    //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED140;                                         
uint16_t LIGHTS_DEBOUNCE_ERROR_ON;                          
uint16_t LIGHTS_DEBOUNCE_ERROR_OFF;                         
uint16_t POWER_DOWN_LIGHT_HOLD_TIME;                        
uint16_t LIGHTS_DEBOUNCE_NORMAL;                            
uint16_t UNUSED141;                                         
uint16_t UNUSED142;                                         
uint16_t UNUSED143;                                         
uint16_t UNUSED144;                                         
uint16_t UNUSED145;                                         
uint16_t UNUSED146;                                         
uint16_t UNUSED147;                                         
uint16_t UNUSED148;                                         
uint16_t UNUSED149;                                         
uint16_t UNUSED150;                                         
uint8_t  HYD_ENABLE_CRANK_DELAY;                            
uint8_t  HYD_ENABLE_FEEDBACK_FUNCTION;                      //0 = Functional, 255 = Non-functional                                                      
uint16_t HYD_ENABLE_AFBK_GAIN;                              //fixdt(0,16,8)                                                                             
uint16_t HYD_ENABLE_IFBK_GAIN;                              //fixdt(0,16,16)                                                                            
uint16_t HYD_ENABLE_OVERCURRENT;                            //fixdt(0,16,12)                                                                            
uint16_t HYD_ENABLE_NON_ZERO_CURRENT;                       //fixdt(0,16,12)                                                                            
uint16_t HYD_ENABLE_NON_ZERO_DUTY;                          //fixdt(0,16,16)                                                                            
uint16_t HYD_ENABLE_DEBOUNCE_SHORT_TO_GROUND;               
uint16_t HYD_ENABLE_DEBOUNCE_SHORT_TO_BATTERY;              
uint16_t HYD_ENABLE_DEBOUNCE_OPEN_CIRCUIT;                  
uint16_t HYD_ENABLE_DEBOUNCE_OVERCURRENT;                   
uint16_t HYD_ENABLE_MAX_VOLTS;                              //fixdt(0,16,8)                                                                             
uint16_t UNUSED151;                                         
uint16_t UNUSED152;                                         
uint16_t UNUSED153;                                         
uint16_t UNUSED154;                                         
uint16_t UNUSED155;                                         
uint8_t  FUEL_LEVEL_FUNCTION;                               //0 = Functional, 255 = Non-functional                                                      
uint8_t  FUEL_LEVEL_GAUGE_VERSION;                          
uint8_t  FUEL_LEVEL_SENDER_VERSION;                         
uint8_t  UNUSED156;                                         
uint16_t FUEL_LEVEL_OORL;                                   
uint16_t FUEL_LEVEL_LOW;                                    
uint16_t FUEL_LEVEL_OORH;                                   
uint16_t FUEL_LEVEL_DEBOUNCE_NORMAL;                        
uint16_t FUEL_LEVEL_DEBOUNCE_OORL;                          
uint16_t FUEL_LEVEL_DEBOUNCE_LOW;                           
uint16_t FUEL_LEVEL_DEBOUNCE_OORH;                          
uint8_t  FUEL_LEVEL_FILTER_SLOW_VALUE;                      
uint8_t  FUEL_LEVEL_FILTER_FAST_VALUE;                      
uint8_t  FUEL_RESET_VALUE;                                  
uint8_t  FUEL_WARN_FUNCTION;                                //0 = Functional, 255 = Non-functional                                                      
uint16_t FUEL_WARN_DELTA;                                   
uint16_t FUEL_WARN_TIMEOUT;                                 
uint8_t  FUEL_LEVEL_LOW_DISPLAY_TEXT;                       //0 = Display "FUEL" on low fuel code, 255 = Display M0909                                  
uint8_t  UNUSED157;                                         
uint16_t UNUSED158;                                         
uint16_t UNUSED159;                                         
uint8_t  SWITCHED_POWER_RELAY_FUNCTION;                     //0 = Functional, 255 = Non-functional                                                      
uint8_t  SWITCHED_POWER_RELAY_FEEDBACK_FUNCTION;            //0 = Functional, 255 = Non-functional                                                      
uint16_t SWITCHED_POWER_RELAY_DEBOUNCE_NORMAL;              
uint16_t SWITCHED_POWER_RELAY_DEBOUNCE_ERROR_ON;            
uint16_t SWITCHED_POWER_RELAY_DEBOUNCE_ERROR_OFF;           
uint16_t SWITCHED_POWER_RELAY_DEBOUNCE_SHUTDOWN;            
uint16_t UNUSED160;                                         
uint16_t UNUSED161;                                         
uint16_t PANEL_SHUTDOWN_DEBOUNCE;                           
uint8_t  PANEL_BACKLIGHT_ON_LEVEL;                          
uint8_t  PANEL_BACKLIGHT_OFF_LEVEL;                         
uint8_t  ICON_BACKLIGHT_ON_LEVEL;                           
uint8_t  ICON_BACKLIGHT_OFF_LEVEL;                          
uint8_t  PANEL_SHUTDOWN_FUNCTION;                           
uint8_t  _spacer1_[1];                                      
uint16_t ICON_FLASH_RATE;                                   
uint16_t PANEL_DEBOUNCE_MISSING;                            
uint16_t DISPLAY_SERVICE_CLOCK_TIME;                        
uint16_t DISPLAY_SERVICE_CLOCK_ALARM_TIME;                  
uint16_t DISPLAY_SHUTDOWN_TIME;                             
uint16_t BUTTON_DEBOUNCE_ERROR_ON;                          
uint8_t  AUTO_DISPLAY_FAULT_FUNCTION;                       
uint8_t  UNUSED162;                                         
uint16_t AUTO_DISPLAY_FAULT_DEBOUNCE_ACTIVE;                
uint16_t KEY_MULTIPLE_DEBOUNCE;                             
uint16_t KEYLESS_MULTIPLE_DEBOUNCE;                         
uint16_t UNUSED163;                                         
uint16_t UNUSED164;                                         
uint16_t UNUSED165;                                         
uint16_t PRECISION_REF_NOMINAL_VALUE;                       
uint8_t  LET_ALL_MESSAGES_THROUGH;                          
uint8_t  EXTERNAL_TERMINATOR;                               //0 = ON, 1 = OFF                                                                           
uint8_t  INTERNAL_TERMINATOR;                               //0 = ON, 1 = OFF                                                                           
uint8_t  UNUSED166;                                         
uint16_t SYSTEM_NOMINAL_VOLTAGE;                            //fixdt(0,16,8)                                                                             
uint8_t  SHUTDOWN_FUNCTION;                                 //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED167;                                         
uint16_t UNUSED168;                                         
uint16_t UNUSED169;                                         
uint16_t UNUSED170;                                         
uint16_t AUXPOT_CAL_DEADBAND_LOW;                           
uint16_t AUXPOT_CAL_DEADBAND_HIGH;                          
uint16_t AUXPOT_CENTER_RATIO;                               
uint8_t  AUXPOT_FUNCTION;                                   
uint8_t  UNUSED171;                                         
uint16_t AUXPOT_OORH;                                       
uint16_t AUXPOT_OORL;                                       
uint8_t  AUXPOT_OOR_DB;                                     
uint8_t  UNUSED172;                                         
uint16_t AUXPOT_RATIO_GAIN;                                 
uint8_t  AUXPOT_DEADBAND;                                   
uint8_t  UNUSED173;                                         
uint16_t UNUSED174;                                         
uint16_t UNUSED175;                                         
uint16_t UNUSED176;                                         
uint16_t UNUSED177;                                         
uint16_t UNUSED178;                                         
uint16_t UNUSED179;                                         
uint16_t UNUSED180;                                         
uint8_t  AUX_FUNCTION;                                      //Do not move 0x105A0  0 = Functional, 1 = EMEA Controls, 3 = SIRIUS2, 255 = Non-functional 
uint8_t  UNUSED181;                                         
uint16_t AUX_PWM_FREQ;                                      
uint8_t  UNUSED182;                                         
uint8_t  AUX_ADJ_FLOW_FUNCTION;                             
uint8_t  AUX_RELEASE_FUNCTION;                              
uint8_t  UNUSED183;                                         
uint16_t AUX_FULL_ON_AUX3;                                  //fixdt(0,16,12)                                                                            
uint16_t AUX_FULL_ON_AUX2;                                  //fixdt(0,16,12)                                                                            
uint16_t AUX_FULL_ON_AUX1;                                  //fixdt(0,16,12)                                                                            
uint16_t AUX_AFBK_GAIN;                                     //fixdt(0,16,8)                                                                             
uint16_t AUX_IFBK_GAIN;                                     //fixdt(0,16,16)                                                                            
uint16_t AUX_NON_ZERO_CURRENT;                              //fixdt(0,16,12)                                                                            
uint16_t AUX_NON_ZERO_DUTY;                                 //fixdt(0,16,16)                                                                            
uint16_t AUX_OVERCURRENT;                                   //fixdt(0,16,12)                                                                            
uint16_t AUX_KP;                                            //fixdt(0,16,15)                                                                            
uint16_t AUX_KI;                                            //fixdt(0,16,15)                                                                            
uint16_t AUX_DEBOUNCE_OPEN_CIRCUIT;                         
uint16_t AUX_DEBOUNCE_OVERCURRENT;                          
uint16_t AUX_DEBOUNCE_SHORT_TO_BATTERY;                     
uint8_t  UNUSED184;                                         
uint8_t  AUX_HIGH_FLOW;                                     //Do not move 0x105C3                                                                       
uint16_t AUX_DEBOUNCE_SHORT_TO_GROUND;                      
uint8_t  UNUSED185;                                         
uint8_t  AUX1_OUTPUT_TABLE_VERSION;                         
uint8_t  AUX2_OUTPUT_TABLE_VERSION;                         
uint8_t  AUX3_OUTPUT_TABLE_VERSION;                         
uint16_t AUX_DETENT_HOLD_TIME;                              
uint16_t AUX_DETENT_FLASH_TIME;                             
uint16_t AUX_DETENT_CYCLE_TIME;                             
uint16_t AUX_RELEASE_TIME;                                  
uint16_t AUX_CONFIRM_TIME;                                  
uint8_t  AUX_DISPLAY_MODE;                                  //255 = Normal, 0 = Sirius 2                                                                
uint8_t  UNUSED186;                                         
uint16_t AUX_CRACKPOINT_CURRENT;                            //fixdt(0,16,12) EMEA Controls only - from Aux3 table                                       
uint16_t UNUSED187;                                         
uint16_t UNUSED188;                                         
uint16_t UNUSED189;                                         
uint16_t UNUSED190;                                         
uint16_t SECONDARY_DEBOUNCE_MISSING;                        
uint8_t  SECONDARY_FUNCTION;                                //0 = Functional, 255 = Non-functional                                                      
uint8_t  ANGLEBLADE_FUNCTION;                               //Do not move 0x105E3                                                                       
uint8_t  SECONDARY_HOURMETER_UPDATE_FUNCTION;               
uint8_t  UNUSED191;                                         
uint16_t UNUSED192;                                         
uint16_t UNUSED193;                                         
uint16_t UNUSED194;                                         
uint16_t UNUSED195;                                         
uint16_t UNUSED196;                                         
uint8_t  ALTERNATOR_FUNCTION;                               //0 = Functional, 255 = Non-functional                                                      
uint8_t  ALTERNATOR_LOW;                                    
uint16_t ALTERNATOR_DEBOUNCE_NORMAL;                        
uint16_t ALTERNATOR_DEBOUNCE_LOW;                           
uint16_t ALTERNATOR_ALARM_ENGINE_SPEED;                     
uint8_t  ALTERNATOR_HIGH;                                   
uint8_t  UNUSED197;                                         
uint16_t ALTERNATOR_DEBOUNCE_HIGH;                          
uint16_t UNUSED198;                                         
uint16_t UNUSED199;                                         
uint8_t  TWOSPEED_FUNCTION;                                 //Do not move 0x10600                                                                       
uint8_t  TWOSPEED_BEEP_FUNCTION;                            
uint16_t TWOSPEED_AFBK_GAIN;                                //fixdt(0,16,8)                                                                             
uint16_t TWOSPEED_DEBOUNCE_SHORT_TO_GROUND;                 
uint16_t TWOSPEED_DEBOUNCE_SHORT_TO_BATTERY;                
uint16_t TWOSPEED_DEBOUNCE_OPEN_CIRCUIT;                    
uint16_t TWOSPEED_MAX_VOLTS;                                //fixdt(0,16,8)                                                                             
uint16_t UNUSED200;                                         
uint16_t UNUSED201;                                         
uint8_t  TRACKTENSION_FUNCTION;                             //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED202;                                         
uint16_t UNUSED203;                                         
uint8_t  UNUSED204;                                         
uint8_t  UNUSED205;                                         
uint16_t UNUSED206;                                         
uint16_t UNUSED207;                                         
uint16_t UNUSED208;                                         
uint16_t UNUSED209;                                         
uint16_t UNUSED210;                                         
uint8_t  AUTOSHIFT_FUNCTION;                                //Do not move 0x10620                                                                       
uint8_t  AUTOSHIFT_TRAVEL_DELAY;                            //320 msec for standard machines, 410 msec for track tensioning                             
uint16_t AUTOSHIFT_FILTER_GAIN;                             
int16_t  AUTOSHIFT_PHIGH_TEMP1;                             
int16_t  AUTOSHIFT_PHIGH_TEMP2;                             
uint16_t AUTOSHIFT_PHIGH1;                                  
uint16_t AUTOSHIFT_PHIGH2;                                  
int16_t  AUTOSHIFT_PLOW_TEMP1;                              
int16_t  AUTOSHIFT_PLOW_TEMP2;                              
uint16_t AUTOSHIFT_PLOW1;                                   
uint16_t AUTOSHIFT_PLOW2;                                   
uint16_t UNUSED211;                                         
uint16_t UNUSED212;                                         
uint8_t  LOAD_MOMENT_FUNCTION;                              //Do not move 0x10638  0 = Sensor, 1 = Switch                                               
uint8_t  LOAD_MOMENT_FILTER_GAIN;                           
uint16_t LOAD_MOMENT_GAIN;                                  
uint16_t LOAD_MOMENT_OFFSET;                                
uint16_t LOAD_MOMENT_VOLTS_GAIN;                            //fixdt(0,16,8)                                                                             
uint8_t  LOAD_MOMENT_ERROR_DB;                              //100 msec counts                                                                           
uint8_t  LOAD_MOMENT_NORMAL_DB;                             //100 msec counts                                                                           
uint16_t LOAD_MOMENT_ON;                                    //For switch, A2D value to turn on alarm. For sensor, pressure (bar) to turn on alarm.      
uint16_t LOAD_MOMENT_OFF;                                   //For switch, A2D value to turn off alarm. For sensor, pressure (bar) to turn off alarm.    
uint8_t  LOAD_MOMENT_OORL;                                  //Volts x 10                                                                                
uint8_t  LOAD_MOMENT_OORH;                                  //Volts x 10                                                                                
uint16_t LOAD_MOMENT_DEBOUNCE_OORL;                         //100 msec counts                                                                           
uint16_t LOAD_MOMENT_DEBOUNCE_OORH;                         //100 msec counts                                                                           
uint16_t LOAD_MOMENT_DEBOUNCE_NORMAL;                       //100 msec counts                                                                           
uint8_t  LOAD_MOMENT_ENABLE_INPUT;                          //0 = (AIN11), 1 = Sirius2(DIN9), 255 = NonFunctional                                       
uint8_t  UNUSED213;                                         
uint16_t KEY_DEBOUNCE_OFF;                                  
uint16_t KEYLESS_START_DEBOUNCE_MISSING;                    
uint16_t KEYPAD_ENTER_TIME;                                 
uint8_t  LOCK_BRIGHTNESS;                                   
uint8_t  KEYPAD_BRIGHTNESS;                                 
uint8_t  MASTER_PWD_0;                                      
uint8_t  MASTER_PWD_1;                                      
uint8_t  MASTER_PWD_2;                                      
uint8_t  MASTER_PWD_3;                                      
uint8_t  MASTER_PWD_4;                                      
uint8_t  MASTER_PWD_5;                                      
uint8_t  MASTER_PWD_6;                                      
uint8_t  MASTER_PWD_7;                                      
uint8_t  MASTER_PWD_8;                                      
uint8_t  MASTER_PWD_9;                                      
uint8_t  OWNER_PWD_0;                                       
uint8_t  OWNER_PWD_1;                                       
uint8_t  OWNER_PWD_2;                                       
uint8_t  OWNER_PWD_3;                                       
uint8_t  OWNER_PWD_4;                                       
uint8_t  OWNER_PWD_5;                                       
uint8_t  OWNER_PWD_6;                                       
uint8_t  OWNER_PWD_7;                                       
uint8_t  OWNER_PWD_8;                                       
uint8_t  OWNER_PWD_9;                                       
uint16_t UNUSED214;                                         
uint16_t UNUSED215;                                         
uint16_t UNUSED216;                                         
uint16_t UNUSED217;                                         
uint16_t UNUSED218;                                         
uint16_t UNUSED219;                                         
uint16_t UNUSED220;                                         
uint16_t UNUSED221;                                         
uint16_t UNUSED222;                                         
uint16_t UNUSED223;                                         
uint8_t  RFID_KEY_FUNCTION;                                 //0 = Functional, 255 = Non-functional                                                      
uint8_t  RFID_KEY_TIMEOUT;                                  
uint8_t  RFID_KEY_RETRY_TIME;                               
uint8_t  UNUSED224;                                         
uint16_t RFID_KEY_SERV_TIMEOUT;                             
uint8_t  RFID_KEY_SERV_HOLD_TIME;                           
uint8_t  RFID_KEY_ERRDISP_TIME;                             
uint16_t UNUSED225;                                         
uint16_t UNUSED226;                                         
uint16_t UNUSED227;                                         
uint16_t UNUSED228;                                         
uint8_t  DELUXE_GEN5_FUNCTION;                              //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED229;                                         
uint16_t DELUXE_PANEL_DEBOUNCE_MISSING;                     
uint8_t  SERVICE_DEFAULT_HOURS_TABLE_VERSION;               
uint8_t  SERVICE_DEFAULT_ICON_TABLE_VERSION;                
uint8_t  SERVICE_DEFAULT_TEXT_TABLE_VERSION;                
uint8_t  UNUSED230;                                         
uint16_t UNUSED231;                                         
uint16_t UNUSED232;                                         
uint16_t UNUSED233;                                         
uint16_t UNUSED234;                                         
uint8_t  UNUSED235;                                         
uint8_t  UNUSED236;                                         
uint8_t  UNUSED237;                                         
uint8_t  UNUSED238;                                         
uint8_t  UNUSED239;                                         
uint8_t  UNUSED240;                                         
uint8_t  UNUSED241;                                         
uint8_t  UNUSED242;                                         
uint8_t  UNUSED243;                                         
uint8_t  UNUSED244;                                         
uint8_t  UNUSED245;                                         
uint8_t  VITAL_DEFAULT_ICON_TABLE_VERSION;                  
uint8_t  VITAL_DEFAULT_UNITS_TABLE_VERSION;                 
uint8_t  VITAL_DEFAULT_WARNING_TABLE_VERSION;               
uint8_t  VITAL_DEFAULT_SHUTDOWN_TABLE_VERSION;              
uint8_t  UNUSED246;                                         
uint16_t UNUSED247;                                         
uint16_t UNUSED248;                                         
uint16_t UNUSED249;                                         
uint16_t UNUSED250;                                         
uint16_t UNUSED251;                                         
uint16_t UNUSED252;                                         
uint16_t UNUSED253;                                         
uint16_t UNUSED254;                                         
uint16_t UNUSED255;                                         
uint16_t UNUSED256;                                         
uint16_t UNUSED257;                                         
uint16_t UNUSED258;                                         
uint16_t UNUSED259;                                         
uint16_t UNUSED260;                                         
uint16_t UNUSED261;                                         
uint16_t UNUSED262;                                         
uint8_t  DEPTH_CHECK_FUNCTION;                              //Do not move 0x106D0                                                                       
uint8_t  WARNING_BEEP_LENGTH;                               //10 msec                                                                                   
uint8_t  CHIRP_ON_LENGTH;                                   //10 msec                                                                                   
uint8_t  CHIRP_OFF_LENGTH;                                  //10 msec                                                                                   
uint16_t UNUSED263;                                         
uint16_t UNUSED264;                                         
uint16_t UNUSED265;                                         
uint16_t UNUSED266;                                         
uint16_t UNUSED267;                                         
uint16_t UNUSED268;                                         
uint16_t UNUSED269;                                         
uint16_t UNUSED270;                                         
uint16_t UNUSED271;                                         
uint16_t UNUSED272;                                         
uint16_t UNUSED273;                                         
uint16_t UNUSED274;                                         
uint16_t UNUSED275;                                         
uint16_t UNUSED276;                                         
uint8_t  THROTTLE_PRIMARY_FUNCTION;                         //0 = Functional, 255 = Non-functional                                                      
uint8_t  THROTTLE_PRIMARY_FILTER_GAIN;                      
uint8_t  THROTTLE_FAULT_DERATE;                             
uint8_t  THROTTLE_PRIMARY_TABLE_VERSION;                    
uint16_t THROTTLE_PRIMARY_OORL;                             
uint16_t THROTTLE_PRIMARY_OORH;                             
uint16_t THROTTLE_PRIMARY_DEBOUNCE_NORMAL;                  
uint16_t THROTTLE_PRIMARY_DEBOUNCE_OORL;                    
uint16_t THROTTLE_PRIMARY_DEBOUNCE_OORH;                    
uint16_t THROTTLE_PRIMARY_RATIO_MULTIPLIER;                 
uint16_t THROTTLE_PRI_OUTPUT_LOW;                           
uint16_t THROTTLE_PRI_OUTPUT_HIGH;                          
uint16_t UNUSED277;                                         
uint16_t UNUSED278;                                         
uint16_t UNUSED279;                                         
uint16_t UNUSED280;                                         
uint16_t UNUSED281;                                         
uint16_t THROTTLE_PRI_RATIO_LOW;                            
uint16_t THROTTLE_PRI_RATIO_HIGH;                           
uint16_t UNUSED282;                                         
uint16_t UNUSED283;                                         
uint16_t THROTTLE_PRI_OUT_LOW;                              
uint16_t THROTTLE_PRI_OUT_HIGH;                             
uint16_t UNUSED284;                                         
uint16_t UNUSED285;                                         
uint8_t  THROTTLE_TYPE;                                     //1 = Actuator, 2 = Hydraulic, 3 = ECU, 4 = CAN, 255 = Manual                               
uint8_t  UNUSED286;                                         
uint16_t THROTTLE_DEBOUNCE_MISSING;                         
uint16_t UNUSED287;                                         
uint16_t UNUSED288;                                         
uint16_t UNUSED289;                                         
uint16_t UNUSED290;                                         
uint16_t UNUSED291;                                         
uint16_t UNUSED292;                                         
uint16_t UNUSED293;                                         
uint8_t  HVAC_RELAY_FUNCTION;                               //0 = Functional, 255 = Non-functional                                                      
uint8_t  HVAC_RELAY_FEEDBACK_FUNCTION;                      
uint16_t UNUSED294;                                         
uint16_t HVAC_RELAY_DEBOUNCE_ERROR_OFF;                     
uint16_t HVAC_RELAY_DEBOUNCE_ERROR_ON;                      
uint16_t UNUSED295;                                         
uint16_t UNUSED296;                                         
uint16_t UNUSED297;                                         
uint16_t UNUSED298;                                         
uint8_t  ECU_FUNCTION;                                      //0 = Functional, 255 = Non-functional                                                      
uint8_t  ECU_STAGE_V_FUNCTION;                              //0 = Functional, 255 = Non-functional                                                      
uint16_t ECU_HOLD_DEBOUNCE_ERROR_ON;                        
uint16_t ECU_DEBOUNCE_MISSING_ENGINE_NOT_RUNNING;           
uint16_t ECU_DEBOUNCE_MISSING_ENGINE_RUNNING;               
uint16_t ECU_DM1_DELAY;                                     
uint16_t ECU_DEBOUNCE_WAIT_TO_START;                        
uint16_t UNUSED299;                                         
uint16_t UNUSED300;                                         
uint16_t UNUSED301;                                         
uint16_t UNUSED302;                                         
uint16_t UNUSED303;                                         
uint16_t UNUSED304;                                         
uint16_t UNUSED305;                                         
uint16_t UNUSED306;                                         
uint16_t UNUSED307;                                         
uint16_t UNUSED308;                                         
uint16_t UNUSED309;                                         
uint16_t UNUSED310;                                         
uint16_t UNUSED311;                                         
uint16_t UNUSED312;                                         
uint16_t UNUSED313;                                         
uint16_t UNUSED314;                                         
uint16_t UNUSED315;                                         
uint16_t UNUSED316;                                         
uint16_t UNUSED317;                                         
uint16_t UNUSED318;                                         
uint16_t UNUSED319;                                         
uint16_t UNUSED320;                                         
uint16_t UNUSED321;                                         
uint16_t UNUSED322;                                         
uint16_t UNUSED323;                                         
uint16_t UNUSED324;                                         
uint16_t UNUSED325;                                         
uint16_t UNUSED326;                                         
uint16_t UNUSED327;                                         
uint16_t UNUSED328;                                         
uint16_t UNUSED329;                                         
uint16_t UNUSED330;                                         
uint16_t UNUSED331;                                         
uint8_t  UNUSED332;                                         
uint8_t  UNUSED333;                                         
uint16_t UNUSED334;                                         
uint16_t UNUSED335;                                         
uint16_t UNUSED336;                                         
uint16_t UNUSED337;                                         
uint16_t UNUSED338;                                         
uint16_t UNUSED339;                                         
uint16_t UNUSED340;                                         
uint16_t UNUSED341;                                         
uint16_t UNUSED342;                                         
uint16_t UNUSED343;                                         
uint16_t UNUSED344;                                         
uint16_t UNUSED345;                                         
uint16_t UNUSED346;                                         
uint16_t UNUSED347;                                         
uint8_t  UNUSED348;                                         
uint8_t  UNUSED349;                                         
uint8_t  UNUSED350;                                         
uint8_t  UNUSED351;                                         
uint8_t  UNUSED352;                                         
uint8_t  UNUSED353;                                         
uint8_t  UNUSED354;                                         
uint8_t  UNUSED355;                                         
uint8_t  UNUSED356;                                         
uint8_t  UNUSED357;                                         
uint16_t UNUSED358;                                         
uint16_t UNUSED359;                                         
uint16_t DERATE_ENGINE_SPEED_HIGH_OFFSET;                   
uint16_t DERATE_ENGINE_SPEED_DEBOUNCE_HIGH;                 
uint16_t DERATE_ENGINE_SPEED_DEBOUNCE_SHUTDOWN;             
uint8_t  UNUSED360;                                         
uint8_t  UNUSED361;                                         
uint16_t UNUSED362;                                         
uint16_t UNUSED363;                                         
uint16_t UNUSED364;                                         
uint16_t UNUSED365;                                         
uint16_t UNUSED366;                                         
uint16_t UNUSED367;                                         
uint16_t UNUSED368;                                         
uint16_t UNUSED369;                                         
uint16_t UNUSED370;                                         
uint16_t UNUSED371;                                         
uint16_t UNUSED372;                                         
uint16_t UNUSED373;                                         
uint16_t UNUSED374;                                         
uint16_t UNUSED375;                                         
uint16_t UNUSED376;                                         
uint16_t UNUSED377;                                         
uint16_t UNUSED378;                                         
uint16_t UNUSED379;                                         
uint16_t UNUSED380;                                         
uint16_t UNUSED381;                                         
uint16_t UNUSED382;                                         
uint16_t UNUSED383;                                         
uint16_t UNUSED384;                                         
uint16_t UNUSED385;                                         
uint16_t UNUSED386;                                         
uint16_t UNUSED387;                                         
uint16_t UNUSED388;                                         
uint16_t UNUSED389;                                         
uint16_t UNUSED390;                                         
uint16_t UNUSED391;                                         
uint16_t UNUSED392;                                         
uint8_t  DELUXE_GEN5_5_FUNCTION;                            //0 = Functional, 255 = Non-functional                                                      
uint8_t  DELUXE_CAN_VERSION;                                
uint16_t JOG_SHUTTLE_DEBOUNCE_MISSING;                      
uint16_t DELUXE_G55_COMM_DEBOUNCE_NOT_RUNNING;              
uint16_t DELUXE_G55_COMM_DEBOUNCE_RUNNING;                  
uint8_t  DELUXE_G55_PHONE_LIMITED_FUNCTION;                 
uint8_t  UNUSED393;                                         
uint16_t UNUSED394;                                         
uint16_t UNUSED395;                                         
uint16_t UNUSED396;                                         
uint16_t UNUSED397;                                         
uint16_t UNUSED398;                                         
uint16_t UNUSED399;                                         
uint16_t UNUSED400;                                         
uint16_t UNUSED401;                                         
uint16_t UNUSED402;                                         
uint16_t UNUSED403;                                         
uint16_t UNUSED404;                                         
uint16_t UNUSED405;                                         
uint16_t UNUSED406;                                         
uint16_t UNUSED407;                                         
uint16_t UNUSED408;                                         
uint16_t UNUSED409;                                         
uint16_t UNUSED410;                                         
uint16_t UNUSED411;                                         
uint16_t UNUSED412;                                         
uint16_t UNUSED413;                                         
uint16_t UNUSED414;                                         
uint16_t UNUSED415;                                         
uint16_t UNUSED416;                                         
uint16_t UNUSED417;                                         
uint16_t UNUSED418;                                         
uint16_t UNUSED419;                                         
uint16_t UNUSED420;                                         
uint16_t UNUSED421;                                         
uint16_t UNUSED422;                                         
uint16_t UNUSED423;                                         
uint16_t UNUSED424;                                         
uint16_t UNUSED425;                                         
uint16_t UNUSED426;                                         
uint16_t UNUSED427;                                         
uint16_t UNUSED428;                                         
uint16_t UNUSED429;                                         
uint16_t UNUSED430;                                         
uint16_t UNUSED431;                                         
uint16_t UNUSED432;                                         
uint16_t UNUSED433;                                         
uint16_t UNUSED434;                                         
uint16_t UNUSED435;                                         
uint16_t UNUSED436;                                         
uint16_t UNUSED437;                                         
uint16_t UNUSED438;                                         
uint16_t UNUSED439;                                         
uint16_t UNUSED440;                                         
uint16_t UNUSED441;                                         
uint16_t UNUSED442;                                         
uint16_t UNUSED443;                                         
uint16_t UNUSED444;                                         
uint8_t  AUX_RATE_LIMIT_FUNCTION;                           
uint8_t  UNUSED445;                                         
uint16_t AUX_RATE_LIMIT_CRACKPOINT;                         //fixdt(0,16,12)                                                                            
uint16_t AUX_RATE_LIMIT_MAX_ENG_SPD;                        
uint16_t AUX_RATE_LIMIT_MIN_ENG_SPD;                        
int32_t  AUX_RATE_LIMIT_CRACKPOINT_RATE;                    //fixdt(1,32,12) Rate limiting until crack point is reached (A/s)                           
int32_t  AUX_RATE_LIMIT_NORMAL_RATE;                        //fixdt(1,32,12) Rate limiting after crackpoint is reached (A/s)                            
uint16_t UNUSED446;                                         
uint16_t UNUSED447;                                         
uint16_t UNUSED448;                                         
uint16_t UNUSED449;                                         
uint16_t UNUSED450;                                         
uint16_t UNUSED451;                                         
uint16_t UNUSED452;                                         
uint16_t UNUSED453;                                         
uint8_t  HYD_BYPASS_FUNCTION;                               //0 = Functional, 255 = Non-functional                                                      
uint8_t  HYD_BYPASS_CRANK_DELAY;                            
uint8_t  HYD_BYPASS_FEEDBACK_FUNCTION;                      
uint8_t  UNUSED454;                                         
uint16_t HYD_BYPASS_AFBK_GAIN;                              //fixdt(0,16,8)                                                                             
uint16_t HYD_BYPASS_IFBK_GAIN;                              //fixdt(0,16,16)                                                                            
uint16_t HYD_BYPASS_OVERCURRENT;                            //fixdt(0,16,12)                                                                            
uint16_t HYD_BYPASS_NON_ZERO_CURRENT;                       //fixdt(0,16,12)                                                                            
uint16_t HYD_BYPASS_NON_ZERO_DUTY;                          //fixdt(0,16,16)                                                                            
uint16_t HYD_BYPASS_DEBOUNCE_SHORT_TO_GROUND;               
uint16_t HYD_BYPASS_DEBOUNCE_SHORT_TO_BATTERY;              
uint16_t HYD_BYPASS_DEBOUNCE_OPEN_CIRCUIT;                  
uint16_t HYD_BYPASS_DEBOUNCE_OVERCURRENT;                   
uint16_t HYD_BYPASS_MAX_VOLTS;                              //fixdt(0,16,8)                                                                             
uint16_t UNUSED455;                                         
uint16_t UNUSED456;                                         
uint16_t UNUSED457;                                         
uint16_t UNUSED458;                                         
uint8_t  WORKGROUP_FUNCTION;                                //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED459;                                         
uint8_t  RACD_FUNCTION;                                     
uint8_t  STAUX_FUNCTION;                                    
uint8_t  TABLE_GATEWAY_J1939_ID_VERSION;                    
uint8_t  TABLE_GATEWAY_J1939_MASK_VERSION;                  
uint8_t  TABLE_GATEWAY_DIRECTION_VERSION;                   
uint8_t  UNUSED460;                                         
uint16_t UNUSED461;                                         
uint16_t UNUSED462;                                         
uint16_t UNUSED463;                                         
uint16_t UNUSED464;                                         
uint8_t  HYD_RESPONSE_FUNCTION;                             //0 = Functional, 255 = Non-functional                                                      
uint8_t  HYD_RESPONSE_INPUT_TABLE_VERSION;                  
uint8_t  HYD_RESPONSE_OUTPUT1_TABLE_VERSION;                
uint8_t  HYD_RESPONSE_OUTPUT2_TABLE_VERSION;                
uint8_t  HYD_RESPONSE_OUTPUT3_TABLE_VERSION;                
uint8_t  HYD_RESPONSE_OUTPUT4_TABLE_VERSION;                
uint16_t HYD_RESPONSE_AFBK_GAIN;                            //fixdt(0,16,8)                                                                             
uint16_t HYD_RESPONSE_IFBK_GAIN;                            //fixdt(0,16,16)                                                                            
uint16_t HYD_RESPONSE_NON_ZERO_CURRENT;                     //fixdt(0,16,12)                                                                            
uint16_t HYD_RESPONSE_NON_ZERO_DUTY;                        //fixdt(0,16,16)                                                                            
uint16_t HYD_RESPONSE_OVERCURRENT;                          //fixdt(0,16,12)                                                                            
uint16_t HYD_RESPONSE_KP;                                   //fixdt(0,16,15)                                                                            
uint16_t HYD_RESPONSE_KI;                                   //fixdt(0,16,15)                                                                            
uint16_t HYD_RESPONSE_DEBOUNCE_OPEN_CIRCUIT;                
uint16_t HYD_RESPONSE_DEBOUNCE_OVERCURRENT;                 
uint16_t HYD_RESPONSE_DEBOUNCE_SHORT_TO_BATTERY;            
uint16_t HYD_RESPONSE_DEBOUNCE_SHORT_TO_GROUND;             
uint16_t HYD_RESPONSE_PWM_FREQ;                             
uint16_t UNUSED465;                                         
uint8_t  ECO_MODE_FUNCTION;                                 //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED466;                                         
uint16_t ECO_MODE_THROTTLE_REDUCTION;                       
uint16_t UNUSED467;                                         
uint16_t UNUSED468;                                         
uint16_t UNUSED469;                                         
uint16_t UNUSED470;                                         
uint16_t UNUSED471;                                         
uint16_t UNUSED472;                                         
uint16_t EOT_HIGH;                                          
uint16_t EOT_EXTREMELY_HIGH;                                
uint16_t UNUSED473;                                         
uint16_t UNUSED474;                                         
uint16_t UNUSED475;                                         
uint16_t UNUSED476;                                         
uint16_t UNUSED477;                                         
uint16_t UNUSED478;                                         
uint8_t  CAN_THROTTLE_FUNCTION;                             //0 = Functional, 255 = Non-functional                                                      
uint8_t  CAN_THROTTLE_REVERSE;                              //0 = Functional, 255 = Non-functional                                                      
uint16_t CAN_THROTTLE_DEBOUNCE_FAILURE;                     //# of 100 msec counts                                                                      
uint16_t CAN_THROTTLE_ERROR_MAX;                            //% x 10                                                                                    
uint16_t CAN_THROTTLE_CAL_EXTENDED_DEFAULT;                 
uint16_t CAN_THROTTLE_CAL_RETRACTED_DEFAULT;                
uint16_t CAN_THROTTLE_CAL_DIAG_TIME;                        
uint16_t CAN_THROTTLE_CAL_MAX;                              
uint16_t CAN_THROTTLE_CAL_MIN;                              
uint16_t CAN_THROTTLE_CAL_RANGE_NOM;                        
uint16_t CAN_THROTTLE_CAL_RANGE_TOL;                        
uint16_t CAN_THROTTLE_CAL_DEADBAND;                         
uint16_t UNUSED479;                                         
uint16_t UNUSED480;                                         
uint16_t UNUSED481;                                         
uint16_t UNUSED482;                                         
uint16_t UNUSED483;                                         
uint8_t  HP_MATCH_FUNCTION;                                 //0 = Functional, 255 = Non-functional                                                      
uint8_t  ECU_DISPLACEMENT;                                  //49 (1) = 1.8L, 50 (2) = 2.4L                                                              
uint8_t  ECU_REGION_1;                                      //76 (L) = NA, 77 (M) = EU                                                                  
uint8_t  ECU_REGION_2;                                      //69 (E) = NA, 68 (D) = EU                                                                  
uint8_t  ECU_APP;                                           //69 (E) = EXCAVATOR                                                                        
uint8_t  MACHINE_HP;                                        //0 = 33HP(1.8L), 49HP(2.4L); 1 = 42HP(2.4L); 5 = E85                                       
uint8_t  MATCH_DERATE_PERCENT;                              
uint8_t  IGNORE_1485_FAULT;                                 
uint8_t  MXGTW_ECU_DERATE_RPM_VERSION;                      
uint8_t  MXGTW_ECU_DERATE_TORQUE_VERSION;                   
uint8_t  DERATE_METHOD;                                     
uint8_t  UNUSED484;                                         
uint16_t UNUSED485;                                         
uint16_t FUEL_TEMP_DEBOUNCE_HEAT_SOAK;                      //100 msec counts                                                                           
uint8_t  FUEL_TEMP_FUNCTION;                                //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED486;                                         
uint16_t FUEL_TEMP_HIGH;                                    //°F + 40                                                                                  
uint16_t FUEL_TEMP_EXTREMELY_HIGH;                          //°F + 40                                                                                  
uint16_t FUEL_TEMP_SHUTDOWN;                                //°F + 40                                                                                  
uint16_t FUEL_TEMP_DEBOUNCE_NORMAL;                         //100 msec counts                                                                           
uint16_t FUEL_TEMP_DEBOUNCE_HIGH;                           //100 msec counts                                                                           
uint16_t FUEL_TEMP_DEBOUNCE_EXTREMELY_HIGH;                 //100 msec counts                                                                           
uint16_t FUEL_TEMP_DEBOUNCE_SHUTDOWN;                       //100 msec counts                                                                           
uint8_t  DUMP_VALVE_FUNCTION;                               //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED487;                                         
uint16_t DUMP_VALVE_AFBK_GAIN;                              //fixdt(0,16,8)                                                                             
uint16_t DUMP_VALVE_IFBK_GAIN;                              //fixdt(0,16,16)                                                                            
uint16_t DUMP_VALVE_NON_ZERO_CURRENT;                       //fixdt(0,16,12)                                                                            
uint16_t DUMP_VALVE_OVERCURRENT;                            //fixdt(0,16,12)                                                                            
uint16_t DUMP_VALVE_NON_ZERO_DUTY;                          //fixdt(0,16,16)                                                                            
uint16_t DUMP_VALVE_DEBOUNCE_SHORT_TO_GROUND;               
uint16_t DUMP_VALVE_DEBOUNCE_SHORT_TO_BATTERY;              
uint16_t DUMP_VALVE_DEBOUNCE_OPEN_CIRCUIT;                  
uint16_t DUMP_VALVE_DEBOUNCE_OVERCURRENT;                   
uint16_t DUMP_VALVE_KP;                                     //fixdt(0,16,15)                                                                            
uint16_t DUMP_VALVE_KI;                                     //fixdt(0,16,15)                                                                            
uint16_t DUMP_VALVE_ON_CURRENT;                             //fixdt(0,16,12)                                                                            
uint16_t UNUSED488;                                         
uint16_t UNUSED489;                                         
uint16_t UNUSED490;                                         
uint8_t  EOT_FUNCTION;                                      
uint8_t  UNUSED491;                                         
uint16_t EOT_LOW;                                           
uint16_t EOT_EXTREMELY_LOW;                                 
uint16_t EOT_DEBOUNCE_NORMAL;                               
uint16_t EOT_DEBOUNCE_LOW;                                  
uint16_t EOT_DEBOUNCE_EXTREMELY_LOW;                        
uint16_t EOT_TEMPERATURE_HYSTERESIS;                        
uint16_t UNUSED492;                                         
uint8_t  TC_PROTECT_FUNCTION;                               //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED493;                                         
uint16_t TC_PROTECT_DEBOUNCE_ENABLE;                        
uint16_t TC_PROTECT_THROTTLE_LOW;                           
uint16_t TC_PROTECT_THROTTLE_EXT_LOW;                       
uint16_t TC_PROTECT_THROTTLE_DIFFERENCE;                    
uint16_t TC_PROTECT_THROTTLE_DEBOUNCE_LOW_EVENT;            
uint16_t TC_PROTECT_THROTTLE_DEBOUNCE_EXT_LOW_EVENT;        
uint16_t TC_PROTECT_EOP_LOW;                                
uint8_t  FACTORY_TURBO_PRIME_FUNCTION;                      //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED494;                                         
uint16_t FACTORY_TURBO_PRIME_DEBOUNCE_DISABLE_FUEL;         //10 msec                                                                                   
uint32_t FACTORY_TURBO_PRIME_HOUR_ENABLE;                   //5 sec                                                                                     
uint16_t FACTORY_TURBO_PRIME_DEBOUNCE_WAIT;                 //10 msec                                                                                   
uint16_t UNUSED495;                                         
uint16_t UNUSED496;                                         
uint16_t UNUSED497;                                         
uint8_t  PBVALVE_FUNCTION;                                  
uint8_t  PBVALVE_FEEDBACK_FUNCTION;                         
uint8_t  PBVALVE_RELAY_FEEDBACK_FUNCTION;                   
uint8_t  UNUSED498;                                         
uint16_t PBVALVE_DEBOUNCE_ERROR_ON;                         
uint16_t PBVALVE_DEBOUNCE_ERROR_OFF;                        
uint16_t PBVALVE_DEBOUNCE_NORMAL;                           
uint16_t UNUSED499;                                         
uint16_t UNUSED500;                                         
uint16_t UNUSED501;                                         
uint8_t  KEYLESS_ENTRY_FUNCTION;                            
uint8_t  UNUSED502;                                         
uint16_t KEYLESS_ENTRY_WAIT_TIMEOUT;                        
uint16_t KEYLESS_ENTRY_DETECTED_TIMEOUT;                    
uint16_t KEYLESS_ENTRY_VALID_TIMEOUT;                       
uint16_t KEYLESS_ENTRY_DEBOUNCE_MISSING;                    
uint16_t DOOR_LOCK_PULSE_LENGTH;                            //Note: Keep a few hundred msec higher than the lock pulse length on secondary              
uint16_t KEYLESS_ENTRY_FLASH_RATE;                          
uint16_t UNUSED503;                                         
uint8_t  SECOND_AUX_FUNCTION;                               
uint8_t  SECOND_AUX_FEEDBACK_FUNCTION;                      
uint16_t SECOND_AUX_AFBK_GAIN;                              //fixdt(0,16,8)                                                                             
uint16_t SECOND_AUX_IFBK_GAIN;                              //fixdt(0,16,16)                                                                            
uint16_t SECOND_AUX_OVERCURRENT;                            //fixdt(0,16,12)                                                                            
uint16_t SECOND_AUX_NON_ZERO_CURRENT;                       //fixdt(0,16,12)                                                                            
uint16_t SECOND_AUX_NON_ZERO_DUTY;                          //fixdt(0,16,16)                                                                            
uint16_t SECOND_AUX_DEBOUNCE_SHORT_TO_GROUND;               
uint16_t SECOND_AUX_DEBOUNCE_SHORT_TO_BATTERY;              
uint16_t SECOND_AUX_DEBOUNCE_OPEN_CIRCUIT;                  
uint16_t SECOND_AUX_DEBOUNCE_OVERCURRENT;                   
uint16_t SECOND_AUX_MAX_VOLTS;                              //fixdt(0,16,8)                                                                             
uint16_t SECOND_AUX_SWITCH_DEBOUNCE;                        
uint16_t SECOND_AUX_OFFSET_DISP_TIME;                       
uint8_t  UNUSED504;                                         
uint8_t  UNUSED505;                                         
uint16_t UNUSED506;                                         
uint16_t UNUSED507;                                         
uint8_t  FAST_TRAVEL_FUNCTION;                              //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED508;                                         
uint16_t FAST_TRAVEL_THROTTLE_LIMIT;                        
uint16_t FAST_TRAVEL_THROTTLE_DELAY;                        //100msec                                                                                   
uint16_t UNUSED509;                                         
uint16_t UNUSED510;                                         
uint16_t UNUSED511;                                         
uint16_t UNUSED512;                                         
uint16_t UNUSED513;                                         
uint8_t  STARTER_AUTOMATED_FUNCTION;                        
uint8_t  UNUSED514;                                         
uint16_t STARTER_AUTOMATED_DEBOUNCE_ACTIVATE;               
uint8_t  GTW_STARTER_AUTOMATED_OIL_TEMP_VERSION;            
uint8_t  GTW_STARTER_AUTOMATED_RPM_ENGAGE_LEVEL_VERSION;    
uint8_t  _spacer2_[4];                                      
uint8_t  GTW_STARTER_AUTOMATED_RPM_DISENGAGE_LEVEL_VERSION; 
uint8_t  _spacer3_[1];                                      
uint8_t  GTW_STARTER_AUTOMATED_MAX_TIME_VERSION;            
uint8_t  _spacer4_[1];                                      
uint16_t ENGINE_START_DELAY_OFF_TIME;                       
uint8_t  EMEA_CONSOLE_CRANK_INHIBIT;                        //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED515;                                         
uint16_t ENGINE_START_DELAY_RPM_NO_SIGNAL;                  
uint16_t ENGINE_START_DELAY_DEBOUNCE_RPM_NO_SIGNAL;         
uint16_t UNUSED516;                                         
uint16_t UNUSED517;                                         
uint16_t UNUSED518;                                         
uint16_t UNUSED519;                                         
uint16_t UNUSED520;                                         
uint16_t UNUSED521;                                         
uint16_t UNUSED522;                                         
uint16_t UNUSED523;                                         
uint16_t UNUSED524;                                         
uint16_t UNUSED525;                                         
uint16_t UNUSED526;                                         
uint16_t UNUSED527;                                         
uint16_t UNUSED528;                                         
uint16_t UNUSED529;                                         
uint8_t  PCODE_FUNCTION;                                    
uint8_t  PCODE_ECU_SPNTABLE_VERSION;                        
uint8_t  PCODE_ECU_ASCIIPCODETABLE_VERSION;                 
uint8_t  UNUSED530;                                         
uint16_t UNUSED531;                                         
uint16_t UNUSED532;                                         
uint16_t UNUSED533;                                         
uint16_t UNUSED534;                                         
uint8_t  RIGHT_POT_FUNCTION;                                
uint8_t  LEFT_POT_FUNCTION;                                 
uint8_t  EMEA_CONTROLS_OPTION_A;                            
uint8_t  EMEA_CONTROLS_OPTION_B;                            
uint8_t  EMEA_CONTROLS_OPTION_C;                            
uint8_t  EMEA_CONTROLS_REVERSE;                             //255 = Rexroth Joysticks;  0 = Kawasaki Joysticks                                          
uint16_t EMEA_CONTROLS_HOLD_TIME;                           //10 msec                                                                                   
uint16_t EMEA_CONTROLS_DISPLAY_TIME;                        //100 msec                                                                                  
uint16_t EMEA_POT_CAL_DEADBAND_LOW;                         
uint16_t EMEA_POT_CAL_DEADBAND_HIGH;                        
uint16_t EMEA_CONTROLS_FLASH_TIME;                          //10 msec                                                                                   
uint16_t EMEA_CONTROLS_REMINDER_TIME;                       //10 msec                                                                                   
uint8_t  EMEA_CONTROLS_DISPLAY_MODE;                        //0 = Functional, 255 = Non-functional                                                      
uint8_t  EMEA_ELECTRIC_VERSION;                             //255 = Not Electric                                                                        
uint16_t UNUSED535;                                         
uint16_t UNUSED536;                                         
uint16_t UNUSED537;                                         
uint16_t UNUSED538;                                         
uint16_t UNUSED539;                                         
uint16_t UNUSED540;                                         
uint16_t UNUSED541;                                         
uint16_t UNUSED542;                                         
uint16_t UNUSED543;                                         
uint8_t  AUX2_FLOW_TABLE_VERSION;                           
uint8_t  UNUSED544;                                         //0 = Functional, 255 = Non-functional                                                      
uint16_t AUX2_CRACKPOINT_CURRENT;                           //fixdt(0,16,12)                                                                            
uint16_t AUX2_MAX_FLOW_CURRENT;                             //fixdt(0,16,12)                                                                            
uint8_t  AUX2_FLOW_LOW_FUNCTION;                            //0 = Functional, 255 = Non-functional                                                      
uint8_t  AUX2_FLOW_MED_FUNCTION;                            //0 = Functional, 255 = Non-functional                                                      
uint8_t  AUX2_FLOW_HI_FUNCTION;                             //0 = Functional, 255 = Non-functional                                                      
uint8_t  UNUSED545;                                         
uint16_t AUX2_LOW_FLOW_PERCENT;                             //fixdt(0,16,16)                                                                            
uint16_t AUX2_MED_FLOW_PERCENT;                             //fixdt(0,16,16)                                                                            
uint16_t AUX2_HI_FLOW_PERCENT;                              //fixdt(0,16,16)                                                                            
uint8_t  UNUSED546;                                         
uint8_t  UNUSED547;                                         
}CONSTANT_DATA_t;

#define SIZE_OF_CDATA_MAP 138
#define SIZE_OF_MXGTW_VBATTERYGAUGE 81
#define SIZE_OF_MXGTW_FUEL_PULL_TIME 43
#define SIZE_OF_MXGTW_ECTSNDINPUT 341
#define SIZE_OF_MXGTW_ECTSNDOUTPUT 341
#define SIZE_OF_MXGTW_ECTGAUGE 341
#define SIZE_OF_MXGTW_HOTSND 341
#define SIZE_OF_MXGTW_HOTGAUGE 341
#define SIZE_OF_MXGTW_EOPSND 151
#define SIZE_OF_MXGTW_EOPGAUGE 151
#define SIZE_OF_MXGTW_EOPWARN 51
#define SIZE_OF_MXGTW_EOPSHUTDOWN 51
#define SIZE_OF_MXGTW_OFFSET 161
#define SIZE_OF_MXGTW_ECU_GLOW_TEMP 16
#define SIZE_OF_MXGTW_FUELGAUGE 256
#define SIZE_OF_MXGTW_FUELSND 256
#define SIZE_OF_MXGTW_AUXHYD1 161
#define SIZE_OF_MXGTW_AUXHYD2 161
#define SIZE_OF_MXGTW_AUXHYD3 161
#define SIZE_OF_MXGTW_SERVICE_DEFAULT_HOURS 6
#define SIZE_OF_MXGTW_SERVICE_DEFAULT_ICON 6
#define SIZE_OF_MXGTW_SERVICE_DEFAULT_TEXT 6
#define SIZE_OF_MXGTW_VITAL_DEFAULT_ICON 6
#define SIZE_OF_MXGTW_VITAL_DEFAULT_UNITS 6
#define SIZE_OF_MXGTW_VITAL_DEFAULT_WARNING 6
#define SIZE_OF_MXGTW_VITAL_DEFAULT_SHUTDOWN 6
#define SIZE_OF_MXGTW_GATEWAY_J1939_ID 30
#define SIZE_OF_MXGTW_GATEWAY_J1939_MASK 30
#define SIZE_OF_MXGTW_GATEWAY_DIRECTION 30
#define SIZE_OF_MXGTW_HYD_RESPONSE_IN 26
#define SIZE_OF_MXGTW_HYD_RESPONSE_OUT1 26
#define SIZE_OF_MXGTW_HYD_RESPONSE_OUT2 26
#define SIZE_OF_MXGTW_HYD_RESPONSE_OUT3 26
#define SIZE_OF_MXGTW_HYD_RESPONSE_OUT4 26
#define SIZE_OF_MXGTW_OFFSET_AUX 161
#define SIZE_OF_MXGTW_ECU_GLOW_TIME 16
#define SIZE_OF_MXGTW_ECU_DERATE_RPM 20
#define SIZE_OF_MXGTW_STARTER_AUTOMATED_OIL_TEMP 10
#define SIZE_OF_MXGTW_STARTER_AUTOMATED_RPM_ENGAGE_LEVEL 10
#define SIZE_OF_MXGTW_STARTER_AUTOMATED_RPM_DISENGAGE_LEVEL 10
#define SIZE_OF_MXGTW_STARTER_AUTOMATED_MAX_TIME 10
#define SIZE_OF_MXGTW_ECU_DERATE_TORQUE 20
#define SIZE_OF_MXGTW_AUX2_FLOW 101
#define SIZE_OF_GTW_PCODE_ECU_ASCIIPCODE 230
#define SIZE_OF_GTW_PCODE_ECU_SPNLOOKUP 230
#endif //#ifndef _CDATA_H_

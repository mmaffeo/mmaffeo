//
//  Copyright (c) 2009 Bobcat Company as an unpublished work.
//  All Rights Reserved.
//
//  The information contained herein is confidential property of Bobcat Company.
//  The use, copying, transfer or disclosure of such information is prohibited except
//  by express written agreement with Bobcat Company.
//
//  Code Generated by Simulink Real-Time Workshop
//
//  Simulink model                       : MX_Gtwy_Control


#include "mod_Inputs.h"

// Include model header file for global data
#include "MX_Gtwy_Control.h"
#include "MX_Gtwy_Control_private.h"

// Named constants for Chart: '<S276>/LP_Fitler_Adj_Gain'
#define MX_Gtwy_Contr_IN_LP_FILTER_k1me ((uint8_T)2U)
#define MX_Gtwy_Control_IN_INITIAL_effc ((uint8_T)1U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_a4gb ((uint8_T)0U)

// Named constants for Chart: '<S70>/Filter'
#define MX_Gtwy_Contr_IN_NON_FUNCTIONAL ((uint8_T)2U)
#define MX_Gtwy_Contro_IN_COUNTER_BASED ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_DEBOUNCE_eamc ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_NOT_CONNECTED ((uint8_T)2U)
#define MX_Gtwy_Control_IN_NORMAL_npfp ((uint8_T)1U)
#define MX_Gtwy_Control_IN_NORMAL_npfpv ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OFF_hijv    ((uint8_T)1U)
#define MX_Gtwy_Control_IN_ON_ozev     ((uint8_T)2U)
#define MX_Gtwy_Control_IN_PLUGGED     ((uint8_T)3U)
#define MX_Gtwy_Control_IN_PLUGGED_f4q4 ((uint8_T)2U)
#define MX_Gtwy_Control_IN_TIME_BASED  ((uint8_T)3U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_kjtk ((uint8_T)0U)

// Named constants for Chart: '<S103>/Aux_Pot'
#define MX_Gtwy_Con_IN_Wait_For_New_Cal ((uint8_T)3U)
#define MX_Gtwy_Contr_IN_NOT_IN_NEUTRAL ((uint8_T)2U)
#define MX_Gtwy_Contro_IN_debounce_OORH ((uint8_T)5U)
#define MX_Gtwy_Contro_IN_debounce_OORL ((uint8_T)6U)
#define MX_Gtwy_Control_IN_Base_Active ((uint8_T)1U)
#define MX_Gtwy_Control_IN_Initialize  ((uint8_T)1U)
#define MX_Gtwy_Control_IN_NORMAL_aqhd ((uint8_T)1U)
#define MX_Gtwy_Control_IN_Neutral     ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OORH        ((uint8_T)3U)
#define MX_Gtwy_Control_IN_OORL        ((uint8_T)4U)
#define MX_Gtwy_Control_IN_Rod_Active  ((uint8_T)3U)
#define MX_Gtwy_Control_IN_Supply_Fault ((uint8_T)1U)
#define MX_Gtwy_Control_IN_Supply_OK   ((uint8_T)2U)
#define MX_Gtwy_Control_IN_WaitForPress ((uint8_T)2U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof ((uint8_T)0U)

// Named constants for Chart: '<S104>/Aux_Pot'
#define MX_Gtw_IN_Wait_For_New_Cal_lpp3 ((uint8_T)4U)
#define MX_Gtwy_Co_IN_WaitForPress_nt2k ((uint8_T)3U)
#define MX_Gtwy_Con_IN_Joystick_Powerup ((uint8_T)2U)
#define MX_Gtwy_Control_IN_CAN_Fault   ((uint8_T)1U)
#define MX_Gtwy_Control_IN_CAN_OK      ((uint8_T)2U)
#define MX_Gtwy_Control_ONE_SECOND     ((uint8_T)100U)

// Named constants for Chart: '<S73>/Delay'
#define MX_Gtwy_Cont_IN_Wait_for_active ((uint8_T)3U)
#define MX_Gtwy_Control_IN_Active      ((uint8_T)1U)
#define MX_Gtwy_Control_IN_Delay       ((uint8_T)2U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_d22v ((uint8_T)0U)

// Named constants for Chart: '<S74>/Console_Sensor'
#define MX_Gtwy_Con_IN_DEBOUNCE_PRESENT ((uint8_T)1U)
#define MX_Gtwy_Cont_IN_DEBOUNCE_ABSENT ((uint8_T)2U)
#define MX_Gtwy_Contro_IN_DEBOUNCE_d4yu ((uint8_T)1U)
#define MX_Gtwy_Control_IN_ABSENT      ((uint8_T)1U)
#define MX_Gtwy_Control_IN_NORMAL_obpf ((uint8_T)1U)
#define MX_Gtwy_Control_IN_OORH_gasm   ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OORL_lgpm   ((uint8_T)3U)
#define MX_Gtwy_Control_IN_OORL_lgpmz  ((uint8_T)2U)
#define MX_Gtwy_Control_IN_PRESENT     ((uint8_T)2U)
#define MX_Gtwy_Control_IN_STATE       ((uint8_T)2U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t ((uint8_T)0U)
#define MX_Gtwy__IN_NON_FUNCTIONAL_os4i ((uint8_T)1U)

// Named constants for Chart: '<S75>/ErrorDetection'
#define MX_Gtwy_Co_IN_OUT_OF_RANGE_HIGH ((uint8_T)3U)
#define MX_Gtwy_Con_IN_NO_COMMUNICATION ((uint8_T)2U)
#define MX_Gtwy_Con_IN_OUT_OF_RANGE_LOW ((uint8_T)4U)
#define MX_Gtwy_Cont_IN_DEBOUNCE_NORMAL ((uint8_T)1U)
#define MX_Gtwy_Cont_IN_FUNCTIONAL_fiok ((uint8_T)1U)
#define MX_Gtwy_Contr_IN_DEBOUNCE_nypxw ((uint8_T)2U)
#define MX_Gtwy_Contr_IN_EXTREMELY_HIGH ((uint8_T)2U)
#define MX_Gtwy_Contr_IN_NORMAL_kyfevd5 ((uint8_T)3U)
#define MX_Gtwy_Contr_IN_SHUTDOWN_nw1j4 ((uint8_T)4U)
#define MX_Gtwy_Contro_IN_DEBOUNCE_nypx ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_NORMAL_kyfevd ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_SHUTDOWN_nw1j ((uint8_T)2U)
#define MX_Gtwy_Control_IN_COLD        ((uint8_T)1U)
#define MX_Gtwy_Control_IN_ECU         ((uint8_T)1U)
#define MX_Gtwy_Control_IN_HIGH        ((uint8_T)3U)
#define MX_Gtwy_Control_IN_HIGH_hpoa   ((uint8_T)2U)
#define MX_Gtwy_Control_IN_INIT        ((uint8_T)1U)
#define MX_Gtwy_Control_IN_NORMAL_kyfe ((uint8_T)2U)
#define MX_Gtwy_Control_IN_NORMAL_kyfev ((uint8_T)4U)
#define MX_Gtwy_Control_IN_OORH_lmti   ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OORL_bpaf   ((uint8_T)2U)
#define MX_Gtwy_Control_IN_SENSOR      ((uint8_T)3U)
#define MX_Gtwy_Control_IN_SHUTDOWN    ((uint8_T)5U)
#define MX_Gtwy_IN_NON_FUNCTIONAL_hnhyi ((uint8_T)1U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2 ((uint8_T)0U)
#define MX_Gtwy__IN_EXTREMELY_HIGH_ac0d ((uint8_T)1U)
#define MX_Gtwy__IN_NON_FUNCTIONAL_hnhy ((uint8_T)2U)

// Named constants for Chart: '<S163>/Pot'
#define MX_Gtw_IN_Wait_For_New_Cal_jhju ((uint8_T)3U)
#define MX_Gtwy_C_IN_debounce_OORH_bppb ((uint8_T)5U)
#define MX_Gtwy_C_IN_debounce_OORL_baej ((uint8_T)6U)
#define MX_Gtwy_Con_IN_Base_Active_nuch ((uint8_T)1U)
#define MX_Gtwy_Cont_IN_Rod_Active_boyw ((uint8_T)3U)
#define MX_Gtwy_Contr_IN_Supply_OK_mzcm ((uint8_T)2U)
#define MX_Gtwy_Control_IN_ACTIVE_nu34 ((uint8_T)1U)
#define MX_Gtwy_Control_IN_Inactive    ((uint8_T)2U)
#define MX_Gtwy_Control_IN_Inhibit     ((uint8_T)1U)
#define MX_Gtwy_Control_IN_InitDelay   ((uint8_T)1U)
#define MX_Gtwy_Control_IN_NORMAL_nwda ((uint8_T)1U)
#define MX_Gtwy_Control_IN_Neutral_mw51 ((uint8_T)2U)
#define MX_Gtwy_Control_IN_Normal      ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OORH_nd0n   ((uint8_T)3U)
#define MX_Gtwy_Control_IN_OORL_liz5   ((uint8_T)4U)
#define MX_Gtwy_Control_IN_SupplyFault ((uint8_T)1U)
#define MX_Gtwy_Control_ONE_SECOND_omgv ((uint8_T)50U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x ((uint8_T)0U)
#define MX_Gtwy_IN_Wait_For_Cal_Attempt ((uint8_T)2U)
#define MX_Gtwy__IN_NOT_IN_NEUTRAL_alyp ((uint8_T)2U)

// Named constants for Chart: '<S169>/Right_Pot'
#define MX_Gtw_IN_Wait_For_New_Cal_dzyf ((uint8_T)3U)
#define MX_Gtwy_C_IN_debounce_OORH_abjr ((uint8_T)5U)
#define MX_Gtwy_C_IN_debounce_OORL_gtjq ((uint8_T)6U)
#define MX_Gtwy_Co_IN_Supply_Fault_mt5d ((uint8_T)1U)
#define MX_Gtwy_Co_IN_WaitForPress_lmmj ((uint8_T)2U)
#define MX_Gtwy_Con_IN_Base_Active_bhhn ((uint8_T)1U)
#define MX_Gtwy_Cont_IN_Initialize_h1pp ((uint8_T)1U)
#define MX_Gtwy_Cont_IN_Rod_Active_esf2 ((uint8_T)3U)
#define MX_Gtwy_Contr_IN_Supply_OK_nhl1 ((uint8_T)2U)
#define MX_Gtwy_Control_IN_NORMAL_c0wi ((uint8_T)1U)
#define MX_Gtwy_Control_IN_Neutral_o5nl ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OORH_jkoi   ((uint8_T)3U)
#define MX_Gtwy_Control_IN_OORL_arko   ((uint8_T)4U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_ndhe ((uint8_T)0U)
#define MX_Gtwy__IN_NOT_IN_NEUTRAL_has4 ((uint8_T)2U)

// Named constants for Chart: '<S175>/ErrorDetection'
#define MX_Gt_IN_DEBOUNCE_EXTREMELY_LOW ((uint8_T)1U)
#define MX_Gt_IN_OUT_OF_RANGE_HIGH_jp15 ((uint8_T)3U)
#define MX_Gtw_IN_NO_COMMUNICATION_ksuk ((uint8_T)2U)
#define MX_Gtw_IN_OUT_OF_RANGE_LOW_n05d ((uint8_T)4U)
#define MX_Gtwy_C_IN_EXTREMELY_LOW_mkqb ((uint8_T)2U)
#define MX_Gtwy_Cont_IN_SHUTDOWN_a1gun4 ((uint8_T)4U)
#define MX_Gtwy_Contr_IN_SHUTDOWN_a1gun ((uint8_T)2U)
#define MX_Gtwy_Contro_IN_COMMUNICATING ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_DEBOUNCE_n0jr ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_EXTREMELY_LOW ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_SHUTDOWN_a1gu ((uint8_T)3U)
#define MX_Gtwy_Control_IN_ECU_FUNCTION ((uint8_T)1U)
#define MX_Gtwy_Control_IN_ECU_obok    ((uint8_T)1U)
#define MX_Gtwy_Control_IN_INIT_pb2u   ((uint8_T)1U)
#define MX_Gtwy_Control_IN_LOW         ((uint8_T)2U)
#define MX_Gtwy_Control_IN_NORMAL_jvma ((uint8_T)2U)
#define MX_Gtwy_Control_IN_NORMAL_jvmau ((uint8_T)3U)
#define MX_Gtwy_Control_IN_OORH_arpe   ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OORL_dd3t   ((uint8_T)2U)
#define MX_Gtwy_Control_IN_SENSOR_fbj5 ((uint8_T)3U)
#define MX_Gtwy_IN_DEBOUNCE_NORMAL_nxye ((uint8_T)1U)
#define MX_Gtwy_IN_NON_FUNCTIONAL_cpdob ((uint8_T)1U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_iool ((uint8_T)0U)
#define MX_Gtwy__IN_NON_FUNCTIONAL_cpdo ((uint8_T)2U)

// Named constants for Chart: '<S79>/Eco_Mode'
#define MX_Gtwy_Control_IN_Deluxe_G55  ((uint8_T)1U)
#define MX_Gtwy_Control_IN_Init        ((uint8_T)1U)
#define MX_Gtwy_Control_IN_Normal_gl5b ((uint8_T)2U)
#define MX_Gtwy_Control_IN_Off         ((uint8_T)2U)
#define MX_Gtwy_Control_IN_Off_n0qy    ((uint8_T)1U)
#define MX_Gtwy_Control_IN_On          ((uint8_T)3U)
#define MX_Gtwy_Control_IN_On_e5h5     ((uint8_T)2U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_px0u ((uint8_T)0U)

// Named constants for Chart: '<S80>/EngineSpeed'
#define MX_Gtw_IN_NO_COMMUNICATION_p4qg ((uint8_T)2U)
#define MX_Gtwy_Co_IN_OUT_OF_RANGE_kvq1 ((uint8_T)2U)
#define MX_Gtwy_Contr_IN_NO_SIGNAL_i3pr ((uint8_T)2U)
#define MX_Gtwy_Contr_IN_SHUTDOWN_eq2x0 ((uint8_T)2U)
#define MX_Gtwy_Contro_IN_DEBOUNCE_gayh ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_NORMAL_pxxxis ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_SHUTDOWN_eq2x ((uint8_T)5U)
#define MX_Gtwy_Control_IN_ECU_cvui    ((uint8_T)1U)
#define MX_Gtwy_Control_IN_HIGH_hyvb   ((uint8_T)2U)
#define MX_Gtwy_Control_IN_NORMAL_pxxx ((uint8_T)2U)
#define MX_Gtwy_Control_IN_NORMAL_pxxxi ((uint8_T)3U)
#define MX_Gtwy_Control_IN_NO_SIGNAL   ((uint8_T)4U)
#define MX_Gtwy_Control_IN_OUT_OF_RANGE ((uint8_T)3U)
#define MX_Gtwy_Control_IN_SENSOR_eivs ((uint8_T)2U)
#define MX_Gtwy_IN_EXTREMELY_HIGH_d52gl ((uint8_T)2U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn ((uint8_T)0U)
#define MX_Gtwy__IN_EXTREMELY_HIGH_d52g ((uint8_T)1U)
#define MX_Gtwy__IN_NON_FUNCTIONAL_lklt ((uint8_T)1U)

// Named constants for Chart: '<S80>/Gain'
#define MX_Gtwy_Co_IN_LP_FILTER_GREATER ((uint8_T)3U)
#define MX_Gtwy_Contr_IN_LP_FILTER_e4rv ((uint8_T)2U)
#define MX_Gtwy_Control_IN_FAST_FILTER ((uint8_T)1U)
#define MX_Gtwy_Control_IN_FILTER      ((uint8_T)1U)
#define MX_Gtwy_Control_IN_FILTER1     ((uint8_T)2U)
#define MX_Gtwy_Control_IN_FILTER_COUNT ((uint8_T)3U)
#define MX_Gtwy_Control_IN_INITIAL_lc3j ((uint8_T)1U)
#define MX_Gtwy_Control_IN_SLOW_FILTER ((uint8_T)2U)

// Named constants for Chart: '<S81>/ErrorDetection'
#define MX_Gtwy_C_IN_EXTREMELY_LOW_djc2 ((uint8_T)1U)
#define MX_Gtwy_Cont_IN_FUNCTIONAL_bcs0 ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_DEBOUNCE_m5nh ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_WAIT_FOR_ECT1 ((uint8_T)4U)
#define MX_Gtwy_Control_IN_LOW_igxp    ((uint8_T)2U)
#define MX_Gtwy_Control_IN_NORMAL_jhgw ((uint8_T)3U)
#define MX_Gtwy_Control_IN_NORMAL_jhgwg ((uint8_T)2U)
#define MX_Gtwy_IN_DEBOUNCE_NORMAL_ov12 ((uint8_T)1U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_mqdg ((uint8_T)0U)
#define MX_Gtwy__IN_EXTREMELY_LOW_djc2v ((uint8_T)2U)
#define MX_Gtwy__IN_NON_FUNCTIONAL_cjmf ((uint8_T)2U)

// Named constants for Chart: '<S82>/Engine_Start'
#define MX_Gtwy_C_IN_START_SERVICE_TOOL ((uint8_T)5U)
#define MX_Gtwy_Co_IN_START_MACHINE_KEY ((uint8_T)4U)
#define MX_Gtwy_Control_IN_OFF_nkkh    ((uint8_T)1U)
#define MX_Gtwy_Control_IN_START_ACD   ((uint8_T)2U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_ocsj ((uint8_T)0U)
#define MX_Gtwy__IN_START_MACHINE_DELAY ((uint8_T)3U)

// Named constants for Chart: '<S83>/Fuel_Level'
#define MX_Gtwy_Co_IN_Intermittant_Beep ((uint8_T)3U)
#define MX_Gtwy_Contro_IN_DEBOUNCE_oqst ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_Inactive_fimv ((uint8_T)2U)
#define MX_Gtwy_Control_IN_Active_ga4q ((uint8_T)1U)
#define MX_Gtwy_Control_IN_Armed       ((uint8_T)1U)
#define MX_Gtwy_Control_IN_Continuous  ((uint8_T)2U)
#define MX_Gtwy_Control_IN_LOW_g10j    ((uint8_T)1U)
#define MX_Gtwy_Control_IN_LOW_g10jk   ((uint8_T)2U)
#define MX_Gtwy_Control_IN_NORMAL_h2nv ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OORH_kqw1   ((uint8_T)3U)
#define MX_Gtwy_Control_IN_OORL_iygl   ((uint8_T)4U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk ((uint8_T)0U)
#define MX_Gtwy__IN_NON_FUNCTIONAL_a53p ((uint8_T)1U)

// Named constants for Chart: '<S84>/ErrorDetection'
#define MX_Gtwy_Con_IN_WAIT_FOR_RUNNING ((uint8_T)2U)
#define MX_Gtwy_Cont_IN_FUNCTIONAL_m0kn ((uint8_T)1U)
#define MX_Gtwy_Contr_IN_ENGINE_RUNNING ((uint8_T)1U)
#define MX_Gtwy_Contr_IN_SHUTDOWN_iepyd ((uint8_T)2U)
#define MX_Gtwy_Contro_IN_DEBOUNCE_g513 ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_SHUTDOWN_iepy ((uint8_T)5U)
#define MX_Gtwy_Control_IN_HEAT_SOAK   ((uint8_T)2U)
#define MX_Gtwy_Control_IN_HIGH_iyio   ((uint8_T)3U)
#define MX_Gtwy_Control_IN_HIGH_iyior  ((uint8_T)2U)
#define MX_Gtwy_Control_IN_NORMAL_j4mv ((uint8_T)4U)
#define MX_Gtwy_Control_IN_NORMAL_j4mvj ((uint8_T)2U)
#define MX_Gtwy_IN_DEBOUNCE_NORMAL_gsyv ((uint8_T)1U)
#define MX_Gtwy_IN_EXTREMELY_HIGH_jyxjq ((uint8_T)2U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_adox ((uint8_T)0U)
#define MX_Gtwy__IN_EXTREMELY_HIGH_jyxj ((uint8_T)1U)
#define MX_Gtwy__IN_NON_FUNCTIONAL_fae3 ((uint8_T)2U)

// Named constants for Chart: '<S85>/Hyd1_Filter_State'
#define MX_Gtwy_C_IN_NORMAL_AFTER_CRANK ((uint8_T)3U)
#define MX_Gtwy_C_IN_NOT_CONNECTED_leko ((uint8_T)5U)
#define MX_Gtwy_Cont_IN_NORMAL_NO_CRANK ((uint8_T)4U)
#define MX_Gtwy_Contro_IN_DEBOUNCE_COLD ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_DEBOUNCE_gmgf ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_PLUGGED_k22hw ((uint8_T)2U)
#define MX_Gtwy_Control_IN_Debounce    ((uint8_T)1U)
#define MX_Gtwy_Control_IN_NORMAL_hidj ((uint8_T)2U)
#define MX_Gtwy_Control_IN_PLUGGED_k22h ((uint8_T)6U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_bjls ((uint8_T)0U)
#define MX_Gtwy__IN_NON_FUNCTIONAL_fezh ((uint8_T)2U)
#define MX_Gtwy__IN_NOT_CONNECTED_lekoz ((uint8_T)2U)

// Named constants for Chart: '<S213>/ErrorDetection'
#define MX_Gtwy_Contr_IN_DEBOUNCE_pfegi ((uint8_T)2U)
#define MX_Gtwy_Contr_IN_SHUTDOWN_idks3 ((uint8_T)2U)
#define MX_Gtwy_Contro_IN_DEBOUNCE_pfeg ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_SHUTDOWN_idks ((uint8_T)5U)
#define MX_Gtwy_Control_IN_COLD_haxq   ((uint8_T)1U)
#define MX_Gtwy_Control_IN_HIGH_aiq3   ((uint8_T)3U)
#define MX_Gtwy_Control_IN_HIGH_aiq3b  ((uint8_T)2U)
#define MX_Gtwy_Control_IN_INIT_gacg   ((uint8_T)1U)
#define MX_Gtwy_Control_IN_NORMAL_mps3 ((uint8_T)2U)
#define MX_Gtwy_Control_IN_NORMAL_mps3q ((uint8_T)4U)
#define MX_Gtwy_Control_IN_OORH_amrx   ((uint8_T)3U)
#define MX_Gtwy_Control_IN_OORL_b5jx   ((uint8_T)4U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa ((uint8_T)0U)
#define MX_Gtwy__IN_EXTREMELY_HIGH_btwg ((uint8_T)2U)
#define MX_Gtwy__IN_NON_FUNCTIONAL_np20 ((uint8_T)1U)

// Named constants for Chart: '<S214>/State_Switch'
#define MX_Gtwy_Contro_IN_SHUTDOWN_clo0 ((uint8_T)3U)
#define MX_Gtwy__IN_EXTREMELY_HIGH_al5m ((uint8_T)1U)

// Named constants for Chart: '<S88>/Key'
#define MX_Gtwy_Contro_IN_DEBOUNCE_mncd ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_Debounce_pjhk ((uint8_T)1U)
#define MX_Gtwy_Control_IN_MULTIPLE    ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OFF_eqjc    ((uint8_T)3U)
#define MX_Gtwy_Control_IN_OFF_eqjcy   ((uint8_T)2U)
#define MX_Gtwy_Control_IN_ON_ccfw     ((uint8_T)4U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_brms ((uint8_T)0U)

// Named constants for Chart: '<S239>/Load_Moment'
#define MX_Gtwy_Contro_IN_Normal_lqg43w ((uint8_T)3U)
#define MX_Gtwy_Control_IN_Error_DB    ((uint8_T)1U)
#define MX_Gtwy_Control_IN_InError     ((uint8_T)2U)
#define MX_Gtwy_Control_IN_Inhibit_kn5l ((uint8_T)1U)
#define MX_Gtwy_Control_IN_Invalid     ((uint8_T)1U)
#define MX_Gtwy_Control_IN_Normal_DB   ((uint8_T)4U)
#define MX_Gtwy_Control_IN_Normal_lqg4 ((uint8_T)1U)
#define MX_Gtwy_Control_IN_Normal_lqg43 ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OORH_DB     ((uint8_T)3U)
#define MX_Gtwy_Control_IN_OORH_j5h0   ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OORL_DB     ((uint8_T)5U)
#define MX_Gtwy_Control_IN_OORL_NORMAL1 ((uint8_T)6U)
#define MX_Gtwy_Control_IN_OORL_NORMAL2 ((uint8_T)7U)
#define MX_Gtwy_Control_IN_OORL_k2kw   ((uint8_T)4U)
#define MX_Gtwy_Control_IN_Valid       ((uint8_T)2U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_gept ((uint8_T)0U)

// Named constants for Chart: '<S240>/Load_Moment'
#define MX_Gtwy_Contr_IN_Normal_DB_ozzt ((uint8_T)4U)
#define MX_Gtwy_Contro_IN_Error_DB_cc4j ((uint8_T)1U)
#define MX_Gtwy_Control_IN_InError_mh0f ((uint8_T)2U)
#define MX_Gtwy_Control_IN_Normal_lzq2 ((uint8_T)3U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_ltdj ((uint8_T)0U)

// Named constants for Chart: '<S250>/Pressure_Monitor'
#define MX_Gtwy_Contr_IN_Normal_DB_ha2f ((uint8_T)2U)
#define MX_Gtwy_Control_IN_Invalid_pwhm ((uint8_T)1U)
#define MX_Gtwy_Control_IN_Normal_pqnr ((uint8_T)1U)
#define MX_Gtwy_Control_IN_OORH_DB_jfqj ((uint8_T)3U)
#define MX_Gtwy_Control_IN_OORH_gay5   ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OORL_DB_k2vm ((uint8_T)5U)
#define MX_Gtwy_Control_IN_OORL_bwtu   ((uint8_T)4U)
#define MX_Gtwy_Control_IN_Valid_bnhh  ((uint8_T)2U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_iouj ((uint8_T)0U)

// Named constants for Chart: '<S256>/Pot'
#define MX_Gtw_IN_Joystick_Powerup_cmqf ((uint8_T)2U)
#define MX_Gtw_IN_Wait_For_New_Cal_fegg ((uint8_T)4U)
#define MX_Gtwy_Con_IN_Base_Active_fj3q ((uint8_T)1U)
#define MX_Gtwy_Cont_IN_Rod_Active_obgc ((uint8_T)3U)
#define MX_Gtwy_Contr_IN_InitDelay_kynr ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_Inactive_e4qr ((uint8_T)2U)
#define MX_Gtwy_Control_IN_ACTIVE_jsee ((uint8_T)1U)
#define MX_Gtwy_Control_IN_CANFault    ((uint8_T)1U)
#define MX_Gtwy_Control_IN_CAN_OK_bbyi ((uint8_T)2U)
#define MX_Gtwy_Control_IN_Inhibit_h4lp ((uint8_T)1U)
#define MX_Gtwy_Control_IN_NORMAL_dsz0 ((uint8_T)1U)
#define MX_Gtwy_Control_IN_Neutral_lud1 ((uint8_T)2U)
#define MX_Gtwy_Control_IN_Normal_f1zn ((uint8_T)2U)
#define MX_Gtwy_Control_ONE_SECOND_guqv ((uint8_T)100U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva ((uint8_T)0U)
#define MX_Gtwy__IN_NOT_IN_NEUTRAL_pn4p ((uint8_T)2U)
#define MX_IN_Wait_For_Cal_Attempt_ouyq ((uint8_T)3U)

// Named constants for Chart: '<S257>/Pot'
#define MX_Gtw_IN_Wait_For_New_Cal_nrzh ((uint8_T)3U)
#define MX_Gtwy_C_IN_debounce_OORH_hgo3 ((uint8_T)5U)
#define MX_Gtwy_C_IN_debounce_OORL_kl1b ((uint8_T)6U)
#define MX_Gtwy_Con_IN_SupplyFault_jnks ((uint8_T)1U)
#define MX_Gtwy_Contr_IN_Supply_OK_d41k ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OORH_p1d2   ((uint8_T)3U)
#define MX_Gtwy_Control_IN_OORL_goye   ((uint8_T)4U)
#define MX_Gtwy_Control_ONE_SECOND_dcgq ((uint8_T)50U)
#define MX_IN_Wait_For_Cal_Attempt_pvij ((uint8_T)2U)

// Named constants for Chart: '<S92>/Sensor_Supply1_State'
#define MX_Gtwy_Contro_IN_Debounce_grb0 ((uint8_T)1U)
#define MX_Gtwy_Control_IN_NORMAL_e0of ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OORH_eazn   ((uint8_T)3U)
#define MX_Gtwy_Control_IN_OORH_eaznn  ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OORL_fezd   ((uint8_T)4U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_kosr ((uint8_T)0U)
#define MX_Gtwy__IN_NON_FUNCTIONAL_k34w ((uint8_T)1U)

// Named constants for Chart: '<S93>/Sensor_Supply2_State'
#define MX_Gtwy_Contro_IN_Debounce_cpzi ((uint8_T)1U)
#define MX_Gtwy_Control_IN_NORMAL_kbzo ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OORH_ocrf   ((uint8_T)3U)
#define MX_Gtwy_Control_IN_OORH_ocrfr  ((uint8_T)2U)
#define MX_Gtwy_Control_IN_OORL_jitz   ((uint8_T)4U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_akpc ((uint8_T)0U)
#define MX_Gtwy__IN_NON_FUNCTIONAL_bnp4 ((uint8_T)1U)

// Named constants for Chart: '<S264>/Throttle_Limiter'
#define MX_Gtwy_Contr_IN_Non_Functional ((uint8_T)3U)
#define MX_Gtwy_Contro_IN_Debounce_nllm ((uint8_T)1U)
#define MX_Gtwy_Control_IN_In_Neutral  ((uint8_T)2U)
#define MX_Gtwy_Control_IN_Traveling   ((uint8_T)4U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_mumz ((uint8_T)0U)

// Named constants for Chart: '<S94>/Throttle_Pos'
#define MX_Gtwy_Contro_IN_DEBOUNCE_pvl0 ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_NORMAL_eevhsg ((uint8_T)1U)
#define MX_Gtwy_Control_IN_NORMAL_eevh ((uint8_T)3U)
#define MX_Gtwy_Control_IN_NORMAL_eevhs ((uint8_T)2U)
#define MX_Gtwy_Control_IN_NO_THROTTLE ((uint8_T)1U)
#define MX_Gtwy_Control_IN_OORH_icau   ((uint8_T)4U)
#define MX_Gtwy_Control_IN_OORL_eaz2   ((uint8_T)5U)
#define MX_Gtwy_Control_IN_PARKED_REGEN ((uint8_T)2U)
#define MX_Gtwy_Control_IN_VALID       ((uint8_T)2U)
#define MX_Gtwy_IN_DEBOUNCE_NORMAL_fswz ((uint8_T)1U)
#define MX_Gtwy__IN_NON_FUNCTIONAL_frbm ((uint8_T)2U)

// Named constants for Chart: '<S95>/VBattery_State'
#define MX_Gtwy_C_IN_EXTREMELY_LOW_agev ((uint8_T)4U)
#define MX_Gtwy_Cont_IN_ALTERNATOR_HIGH ((uint8_T)1U)
#define MX_Gtwy_Contr_IN_ALTERNATOR_LOW ((uint8_T)2U)
#define MX_Gtwy_Contro_IN_DEBOUNCE_OORL ((uint8_T)1U)
#define MX_Gtwy_Contro_IN_DEBOUNCE_fulw ((uint8_T)1U)
#define MX_Gtwy_Control_IN_HIGH_mgfk   ((uint8_T)5U)
#define MX_Gtwy_Control_IN_HIGH_mgfkm  ((uint8_T)2U)
#define MX_Gtwy_Control_IN_LOW_bgvc    ((uint8_T)6U)
#define MX_Gtwy_Control_IN_LOW_bgvct   ((uint8_T)2U)
#define MX_Gtwy_Control_IN_NORMAL_bs1u ((uint8_T)2U)
#define MX_Gtwy_Control_IN_NORMAL_bs1ue ((uint8_T)7U)
#define MX_Gtwy_Control_IN_OORL_n1b0   ((uint8_T)3U)
#define MX_Gtwy_Control_IN_OORL_n1b0f  ((uint8_T)2U)
#define MX_Gtwy_IN_EXTREMELY_HIGH_mwoji ((uint8_T)2U)
#define MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du ((uint8_T)0U)
#define MX_Gtwy__IN_EXTREMELY_HIGH_mwoj ((uint8_T)3U)
#define MX_Gtwy__IN_EXTREMELY_LOW_agev0 ((uint8_T)2U)
#define MX_Gtwy__IN_NON_FUNCTIONAL_mmil ((uint8_T)1U)

// Forward declaration for local functions
static void MX_Gtwy_C_enter_internal_NORMAL(void);
static void MX_G_enter_internal_NORMAL_dote(void);

// Forward declaration for local functions
static void MX_Gtwy_Control_NORMAL(void);

// Forward declaration for local functions
static void MX_Gtwy_Control_Supply_OK(const uint16_T *Gain_p3pk, const int16_T
  *DataTypeConversion_k01y);

// Forward declaration for local functions
static void MX_G_enter_internal_NORMAL_ifwk(void);

// Forward declaration for local functions
static void MX_Gtwy_Control_SENSOR(void);

// Forward declaration for local functions
static void MX_Gtwy_Control_SENSOR_hjqv(const uint16_T *flt_EngineSpeed_cth2);

// Forward declaration for local functions
static void MX_Gtwy_Control_NORMAL_jbs1(void);

// Forward declaration for local functions
static void MX_Gtwy_Control_Valid(void);

// Forward declaration for local functions
static void MX_Gtwy_Control_Supply_OK_asxw(const int16_T *DataTypeConversion);

// Forward declaration for local functions
static void MX_Gtwy_Control_NORMAL_f3er(void);

// System initialize for atomic system: '<S3>/AirFilter'
void MX_Gtwy_Control_AirFilter_Init(void)
{
  // SystemInitialize for Chart: '<S70>/Filter'
  MX_Gtwy_Control_DWork.bitsForTID0.is_FAULT_DETECTION =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_kjtk;
  MX_Gtwy_Control_DWork.bitsForTID0.is_COUNTER_BASED =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_kjtk;
  MX_Gtwy_Control_DWork.bitsForTID0.is_TIME_BASED =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_kjtk;
  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ml1r =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_kjtk;
  MX_Gtwy_Control_DWork.bitsForTID0.is_NOT_CONNECTED_dewl =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_kjtk;
  MX_Gtwy_Control_DWork.bitsForTID0.is_PLUGGED_kjaf =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_kjtk;
  MX_Gtwy_Control_DWork.bitsForTID0.is_COUNTER = MX_Gtwy_IN_NO_ACTIVE_CHILD_kjtk;
  MX_Gtwy_Control_DWork.bitsForTID0.is_active_c66_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.debounceCount_e5ku = 0U;
  MX_Gtwy_Control_DWork.state_Engine_old = 0U;
  state_AirFilter = 0U;
  count_AFPlugged = 0U;
}

// Output and update for atomic system: '<S3>/AirFilter'
void MX_Gtwy_Control_AirFilter(void)
{
  // Chart: '<S70>/Filter' incorporates:
  //   Inport: '<Root>/din_AirFilter'

  // Gateway: MX_Gtwy_Control/Inputs/AirFilter/Filter
  // During: MX_Gtwy_Control/Inputs/AirFilter/Filter
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID0.is_active_c66_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/AirFilter/Filter
    MX_Gtwy_Control_DWork.bitsForTID0.is_active_c66_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/AirFilter/Filter
    // Entry Internal 'PERSISTANCE_COUNTER': '<S96>:46'
    // Transition: '<S96>:69'
    // Entry 'COUNTER': '<S96>:71'
    count_AFPlugged = 0U;
    MX_Gtwy_Control_DWork.state_Engine_old = state_Engine;

    // Entry Internal 'COUNTER': '<S96>:71'
    // Transition: '<S96>:62'
    MX_Gtwy_Control_DWork.bitsForTID0.is_COUNTER = MX_Gtwy_Control_IN_OFF_hijv;

    // Entry Internal 'FAULT_DETECTION': '<S96>:73'
    // Transition: '<S96>:11'
    MX_Gtwy_Control_DWork.bitsForTID0.is_FAULT_DETECTION =
      MX_Gtwy_Contr_IN_NON_FUNCTIONAL;

    // Entry 'NON_FUNCTIONAL': '<S96>:4'
    state_AirFilter = NORMAL;
  } else {
    // During 'PERSISTANCE_COUNTER': '<S96>:46'
    // During 'COUNTER': '<S96>:71'
    if (MX_Gtwy_Control_DWork.state_Engine_old != state_Engine) {
      // Transition: '<S96>:118'
      // Exit Internal 'COUNTER': '<S96>:71'
      // Entry 'COUNTER': '<S96>:71'
      count_AFPlugged = 0U;
      MX_Gtwy_Control_DWork.state_Engine_old = state_Engine;

      // Entry Internal 'COUNTER': '<S96>:71'
      // Transition: '<S96>:62'
      MX_Gtwy_Control_DWork.bitsForTID0.is_COUNTER = MX_Gtwy_Control_IN_OFF_hijv;
    } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_COUNTER ==
               MX_Gtwy_Control_IN_OFF_hijv) {
      // During 'OFF': '<S96>:48'
      if ((int32_T)din_AirFilter > 0) {
        // Transition: '<S96>:47'
        MX_Gtwy_Control_DWork.bitsForTID0.is_COUNTER =
          MX_Gtwy_Control_IN_ON_ozev;
      } else {
        // Transition: '<S96>:56'
        if ((int32_T)count_AFPlugged > 0) {
          // Transition: '<S96>:64'
          // Transition: '<S96>:59'
          count_AFPlugged = (uint16_T)(int32_T)((int32_T)count_AFPlugged -
            (int32_T)CONSTANT_DATA->AIR_FILTER_UNPLUGGED_WEIGHT);

          // Transition: '<S96>:67'
        } else {
          // Transition: '<S96>:60'
        }
      }
    } else {
      // During 'ON': '<S96>:58'
      if ((int32_T)din_AirFilter == 0) {
        // Transition: '<S96>:61'
        MX_Gtwy_Control_DWork.bitsForTID0.is_COUNTER =
          MX_Gtwy_Control_IN_OFF_hijv;
      } else {
        // Transition: '<S96>:68'
        if ((int32_T)count_AFPlugged < 65535) {
          // Transition: '<S96>:57'
          // Transition: '<S96>:54'
          count_AFPlugged = (uint16_T)(int32_T)((int32_T)count_AFPlugged +
            (int32_T)CONSTANT_DATA->AIR_FILTER_PLUGGED_WEIGHT);

          // Transition: '<S96>:66'
        } else {
          // Transition: '<S96>:53'
        }
      }
    }

    // During 'FAULT_DETECTION': '<S96>:73'
    switch (MX_Gtwy_Control_DWork.bitsForTID0.is_FAULT_DETECTION) {
     case MX_Gtwy_Contro_IN_COUNTER_BASED:
      // During 'COUNTER_BASED': '<S96>:75'
      switch (MX_Gtwy_Control_DWork.bitsForTID0.is_COUNTER_BASED) {
       case MX_Gtwy_Control_IN_NORMAL_npfp:
        state_AirFilter = NORMAL;

        // During 'NORMAL': '<S96>:106'
        if ((state_Engine == ENGINE_RUNNING) && (count_AFPlugged >=
             CONSTANT_DATA->AIR_FILTER_DEBOUNCE_PLUGGED)) {
          // Transition: '<S96>:98'
          MX_Gtwy_Control_DWork.bitsForTID0.is_COUNTER_BASED =
            MX_Gtwy_Control_IN_PLUGGED;

          // Entry 'PLUGGED': '<S96>:111'
          state_AirFilter = PLUGGED;
        } else {
          if (((state_Engine == ENGINE_NOT_RUNNING) || (state_AirFilter ==
                NOT_CONNECTED)) && (count_AFPlugged >=
               CONSTANT_DATA->AIR_FILTER_DEBOUNCE_NOT_CONNECTED)) {
            // Transition: '<S96>:99'
            MX_Gtwy_Control_DWork.bitsForTID0.is_COUNTER_BASED =
              MX_Gtwy_Contro_IN_NOT_CONNECTED;

            // Entry 'NOT_CONNECTED': '<S96>:101'
            state_AirFilter = NOT_CONNECTED;
          }
        }
        break;

       case MX_Gtwy_Contro_IN_NOT_CONNECTED:
        state_AirFilter = NOT_CONNECTED;

        // During 'NOT_CONNECTED': '<S96>:101'
        if (count_AFPlugged < CONSTANT_DATA->AIR_FILTER_DEBOUNCE_NOT_CONNECTED)
        {
          // Transition: '<S96>:100'
          MX_Gtwy_Control_DWork.bitsForTID0.is_COUNTER_BASED =
            MX_Gtwy_Control_IN_NORMAL_npfp;

          // Entry 'NORMAL': '<S96>:106'
          state_AirFilter = NORMAL;
        }
        break;

       default:
        state_AirFilter = PLUGGED;

        // During 'PLUGGED': '<S96>:111'
        if ((count_AFPlugged < CONSTANT_DATA->AIR_FILTER_DEBOUNCE_PLUGGED) &&
            (state_AirFilter == NORMAL)) {
          // Transition: '<S96>:116'
          MX_Gtwy_Control_DWork.bitsForTID0.is_COUNTER_BASED =
            MX_Gtwy_Control_IN_NORMAL_npfp;

          // Entry 'NORMAL': '<S96>:106'
          state_AirFilter = NORMAL;
        }
        break;
      }
      break;

     case MX_Gtwy_Contr_IN_NON_FUNCTIONAL:
      state_AirFilter = NORMAL;

      // During 'NON_FUNCTIONAL': '<S96>:4'
      if ((int32_T)CONSTANT_DATA->AIR_FILTER_FUNCTION == 1) {
        // Transition: '<S96>:96'
        MX_Gtwy_Control_DWork.bitsForTID0.is_FAULT_DETECTION =
          MX_Gtwy_Contro_IN_COUNTER_BASED;

        // Entry Internal 'COUNTER_BASED': '<S96>:75'
        // Transition: '<S96>:117'
        MX_Gtwy_Control_DWork.bitsForTID0.is_COUNTER_BASED =
          MX_Gtwy_Control_IN_NORMAL_npfp;

        // Entry 'NORMAL': '<S96>:106'
      } else {
        if (CONSTANT_DATA->AIR_FILTER_FUNCTION != NON_FUNCTIONAL) {
          // Transition: '<S96>:15'
          MX_Gtwy_Control_DWork.bitsForTID0.is_FAULT_DETECTION =
            MX_Gtwy_Control_IN_TIME_BASED;

          // Entry Internal 'TIME_BASED': '<S96>:74'
          // Transition: '<S96>:95'
          MX_Gtwy_Control_DWork.bitsForTID0.is_TIME_BASED =
            MX_Gtwy_Control_IN_NORMAL_npfp;

          // Entry Internal 'NORMAL': '<S96>:89'
          // Transition: '<S96>:90'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ml1r =
            MX_Gtwy_Contro_IN_DEBOUNCE_eamc;

          // Entry 'DEBOUNCE': '<S96>:92'
          MX_Gtwy_Control_DWork.debounceCount_e5ku = 0U;
        }
      }
      break;

     default:
      // During 'TIME_BASED': '<S96>:74'
      switch (MX_Gtwy_Control_DWork.bitsForTID0.is_TIME_BASED) {
       case MX_Gtwy_Control_IN_NORMAL_npfp:
        // During 'NORMAL': '<S96>:89'
        if ((din_AirFilter == ACTIVE) && (state_Engine == ENGINE_RUNNING) &&
            (state_AirFilter != NOT_CONNECTED)) {
          // Transition: '<S96>:81'
          // Exit Internal 'NORMAL': '<S96>:89'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ml1r =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_kjtk;
          MX_Gtwy_Control_DWork.bitsForTID0.is_TIME_BASED =
            MX_Gtwy_Control_IN_PLUGGED;

          // Entry Internal 'PLUGGED': '<S96>:76'
          // Transition: '<S96>:77'
          MX_Gtwy_Control_DWork.bitsForTID0.is_PLUGGED_kjaf =
            MX_Gtwy_Contro_IN_DEBOUNCE_eamc;

          // Entry 'DEBOUNCE': '<S96>:79'
          MX_Gtwy_Control_DWork.debounceCount_e5ku = 0U;
        } else if ((din_AirFilter == ACTIVE) && ((state_Engine ==
                     ENGINE_NOT_RUNNING) || (state_AirFilter == NOT_CONNECTED)))
        {
          // Transition: '<S96>:88'
          // Exit Internal 'NORMAL': '<S96>:89'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ml1r =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_kjtk;
          MX_Gtwy_Control_DWork.bitsForTID0.is_TIME_BASED =
            MX_Gtwy_Contro_IN_NOT_CONNECTED;

          // Entry Internal 'NOT_CONNECTED': '<S96>:83'
          // Transition: '<S96>:84'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NOT_CONNECTED_dewl =
            MX_Gtwy_Contro_IN_DEBOUNCE_eamc;

          // Entry 'DEBOUNCE': '<S96>:87'
          MX_Gtwy_Control_DWork.debounceCount_e5ku = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ml1r ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_eamc) {
          // During 'DEBOUNCE': '<S96>:92'
          if ((MX_Gtwy_Control_DWork.debounceCount_e5ku >=
               CONSTANT_DATA->AIR_FILTER_DEBOUNCE_NORMAL) || (state_AirFilter ==
               NORMAL)) {
            // Transition: '<S96>:91'
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ml1r =
              MX_Gtwy_Control_IN_NORMAL_npfpv;

            // Entry 'NORMAL': '<S96>:93'
            state_AirFilter = NORMAL;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_e5ku = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_e5ku + 1);
          }
        } else {
          state_AirFilter = NORMAL;

          // During 'NORMAL': '<S96>:93'
        }
        break;

       case MX_Gtwy_Contro_IN_NOT_CONNECTED:
        // During 'NOT_CONNECTED': '<S96>:83'
        if (din_AirFilter != ACTIVE) {
          // Transition: '<S96>:82'
          // Exit Internal 'NOT_CONNECTED': '<S96>:83'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NOT_CONNECTED_dewl =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_kjtk;
          MX_Gtwy_Control_DWork.bitsForTID0.is_TIME_BASED =
            MX_Gtwy_Control_IN_NORMAL_npfp;

          // Entry Internal 'NORMAL': '<S96>:89'
          // Transition: '<S96>:90'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ml1r =
            MX_Gtwy_Contro_IN_DEBOUNCE_eamc;

          // Entry 'DEBOUNCE': '<S96>:92'
          MX_Gtwy_Control_DWork.debounceCount_e5ku = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_NOT_CONNECTED_dewl ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_eamc) {
          // During 'DEBOUNCE': '<S96>:87'
          if ((MX_Gtwy_Control_DWork.debounceCount_e5ku >=
               CONSTANT_DATA->AIR_FILTER_DEBOUNCE_NOT_CONNECTED) ||
              (state_AirFilter == NOT_CONNECTED)) {
            // Transition: '<S96>:85'
            MX_Gtwy_Control_DWork.bitsForTID0.is_NOT_CONNECTED_dewl =
              MX_Gtwy_Contro_IN_NOT_CONNECTED;

            // Entry 'NOT_CONNECTED': '<S96>:86'
            state_AirFilter = NOT_CONNECTED;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_e5ku = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_e5ku + 1);
          }
        } else {
          state_AirFilter = NOT_CONNECTED;

          // During 'NOT_CONNECTED': '<S96>:86'
        }
        break;

       default:
        // During 'PLUGGED': '<S96>:76'
        if ((din_AirFilter != ACTIVE) && (state_AirFilter == NORMAL)) {
          // Transition: '<S96>:94'
          // Exit Internal 'PLUGGED': '<S96>:76'
          MX_Gtwy_Control_DWork.bitsForTID0.is_PLUGGED_kjaf =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_kjtk;
          MX_Gtwy_Control_DWork.bitsForTID0.is_TIME_BASED =
            MX_Gtwy_Control_IN_NORMAL_npfp;

          // Entry Internal 'NORMAL': '<S96>:89'
          // Transition: '<S96>:90'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ml1r =
            MX_Gtwy_Contro_IN_DEBOUNCE_eamc;

          // Entry 'DEBOUNCE': '<S96>:92'
          MX_Gtwy_Control_DWork.debounceCount_e5ku = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_PLUGGED_kjaf ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_eamc) {
          // During 'DEBOUNCE': '<S96>:79'
          if (MX_Gtwy_Control_DWork.debounceCount_e5ku >=
              CONSTANT_DATA->AIR_FILTER_DEBOUNCE_PLUGGED) {
            // Transition: '<S96>:78'
            MX_Gtwy_Control_DWork.bitsForTID0.is_PLUGGED_kjaf =
              MX_Gtwy_Control_IN_PLUGGED_f4q4;

            // Entry 'PLUGGED': '<S96>:80'
            state_AirFilter = PLUGGED;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_e5ku = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_e5ku + 1);
          }
        } else {
          state_AirFilter = PLUGGED;

          // During 'PLUGGED': '<S96>:80'
        }
        break;
      }
      break;
    }
  }

  // End of Chart: '<S70>/Filter'
}

// Function for Chart: '<S103>/Aux_Pot'
static void MX_Gtwy_C_enter_internal_NORMAL(void)
{
  // Entry Internal 'NORMAL': '<S106>:281'
  switch (MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_ewo2) {
   case MX_Gtwy_Control_IN_Base_Active:
    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh =
      MX_Gtwy_Control_IN_Base_Active;
    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_ewo2 =
      MX_Gtwy_Control_IN_Base_Active;

    // Entry 'Base_Active': '<S106>:292'
    MX_Gtwy_Control_B.state_AuxPot_ijmy = BASE_ACTIVE;
    break;

   case MX_Gtwy_Control_IN_Neutral:
    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh =
      MX_Gtwy_Control_IN_Neutral;
    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_ewo2 =
      MX_Gtwy_Control_IN_Neutral;

    // Entry 'Neutral': '<S106>:290'
    MX_Gtwy_Control_B.state_AuxPot_ijmy = NEUTRAL;
    break;

   case MX_Gtwy_Control_IN_Rod_Active:
    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh =
      MX_Gtwy_Control_IN_Rod_Active;
    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_ewo2 =
      MX_Gtwy_Control_IN_Rod_Active;

    // Entry 'Rod_Active': '<S106>:291'
    MX_Gtwy_Control_B.state_AuxPot_ijmy = ROD_ACTIVE;
    break;

   default:
    // Transition: '<S106>:283'
    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh =
      MX_Gtwy_Control_IN_Neutral;
    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_ewo2 =
      MX_Gtwy_Control_IN_Neutral;

    // Entry 'Neutral': '<S106>:290'
    MX_Gtwy_Control_B.state_AuxPot_ijmy = NEUTRAL;
    break;
  }
}

// Function for Chart: '<S104>/Aux_Pot'
static void MX_G_enter_internal_NORMAL_dote(void)
{
  // Entry Internal 'NORMAL': '<S108>:4'
  switch (MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_nssh) {
   case MX_Gtwy_Control_IN_Base_Active:
    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_jiv4 =
      MX_Gtwy_Control_IN_Base_Active;
    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_nssh =
      MX_Gtwy_Control_IN_Base_Active;

    // Entry 'Base_Active': '<S108>:10'
    MX_Gtwy_Control_B.state_AuxPot_meiu = BASE_ACTIVE;
    break;

   case MX_Gtwy_Control_IN_Neutral:
    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_jiv4 =
      MX_Gtwy_Control_IN_Neutral;
    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_nssh =
      MX_Gtwy_Control_IN_Neutral;

    // Entry 'Neutral': '<S108>:11'
    MX_Gtwy_Control_B.state_AuxPot_meiu = NEUTRAL;
    break;

   case MX_Gtwy_Control_IN_Rod_Active:
    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_jiv4 =
      MX_Gtwy_Control_IN_Rod_Active;
    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_nssh =
      MX_Gtwy_Control_IN_Rod_Active;

    // Entry 'Rod_Active': '<S108>:12'
    MX_Gtwy_Control_B.state_AuxPot_meiu = ROD_ACTIVE;
    break;

   default:
    // Transition: '<S108>:37'
    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_jiv4 =
      MX_Gtwy_Control_IN_Neutral;
    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_nssh =
      MX_Gtwy_Control_IN_Neutral;

    // Entry 'Neutral': '<S108>:11'
    MX_Gtwy_Control_B.state_AuxPot_meiu = NEUTRAL;
    break;
  }
}

// System initialize for atomic system: '<S3>/Aux_Pot'
void MX_Gtwy_Control_Aux_Pot_Init(void)
{
  // SystemInitialize for Enabled SubSystem: '<S72>/Aux_Pot'
  // SystemInitialize for Chart: '<S103>/Aux_Pot'
  MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check_i1nv =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_State_pnvw =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_ehfd =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
  MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_ewo2 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
  MX_Gtwy_Control_DWork.temporalCounter_i1_nlrb = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_active_c67_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.offset_AuxPotCal_i1zk = 0;
  MX_Gtwy_Control_DWork.state_AuxPotCal_bigz = 0U;
  MX_Gtwy_Control_DWork.base_Threshold_msvx = 0U;
  MX_Gtwy_Control_DWork.rod_Threshold_csho = 0U;
  MX_Gtwy_Control_B.state_AuxPot_ijmy = 0U;
  MX_Gtwy_Control_B.position_AuxPotOut_g55o = 0;

  // SystemInitialize for Outport: '<S103>/state_AuxPot'
  MX_Gtwy_Control_B.OutportBufferForstate_AuxP_j0wy = ((uint8_T)8U);

  // SystemInitialize for Outport: '<S103>/position_AuxPot'
  MX_Gtwy_Control_B.Saturation_hime = ((uint16_T)500U);

  // SystemInitialize for Outport: '<S103>/rm_AuxPot'
  MX_Gtwy_Control_B.Gain_lcxd = ((uint16_T)500U);

  // End of SystemInitialize for SubSystem: '<S72>/Aux_Pot'

  // SystemInitialize for Enabled SubSystem: '<S72>/CAN_Aux_Pot'
  // SystemInitialize for Chart: '<S104>/Aux_Pot'
  MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
  MX_Gtwy_Control_DWork.temporalCounter_i1_aqq4 = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_State =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
  MX_Gtwy_Control_DWork.bitsForTID0.is_CAN_OK_ai2f =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_jiv4 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
  MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_nssh =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
  MX_Gtwy_Control_DWork.bitsForTID0.is_active_c74_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.offset_AuxPotCal = 0;
  MX_Gtwy_Control_DWork.state_AuxPotCal = 0U;
  MX_Gtwy_Control_DWork.base_Threshold_gzt3 = 0U;
  MX_Gtwy_Control_DWork.rod_Threshold_penn = 0U;
  MX_Gtwy_Control_B.state_AuxPot_meiu = 0U;
  MX_Gtwy_Control_B.position_AuxPotOut = 0;

  // SystemInitialize for Outport: '<S104>/state_AuxPot'
  MX_Gtwy_Control_B.OutportBufferForstate_AuxPot = ((uint8_T)8U);

  // SystemInitialize for Outport: '<S104>/position_AuxPot'
  MX_Gtwy_Control_B.Saturation = ((uint16_T)500U);

  // SystemInitialize for Outport: '<S104>/rm_AuxPot'
  MX_Gtwy_Control_B.DataTypeConversion_im15 = ((uint16_T)500U);

  // End of SystemInitialize for SubSystem: '<S72>/CAN_Aux_Pot'
}

// Output and update for atomic system: '<S3>/Aux_Pot'
void MX_Gtwy_Control_Aux_Pot(void)
{
  boolean_T aVarTruthTableCondition_2;
  boolean_T aVarTruthTableCondition_3;
  uint8_T rtb_enable_Normal;
  uint8_T rtb_enable_CAN;
  uint8_T rtb_select_Position;
  int16_T DataTypeConversion_nlu5;
  int16_T Sum;
  uint16_T u0;

  // Truth Table: '<S72>/Pot_Selection' incorporates:
  //   Inport: '<Root>/state_System'

  // Truth Table Function 'MX_Gtwy_Control/Inputs/Aux_Pot/Pot_Selection': '<S105>:1' 
  //  Aux NonFunctional
  // Condition '#1': '<S105>:1:10'
  //  System State Normal
  // Condition '#2': '<S105>:1:14'
  aVarTruthTableCondition_2 = (state_System == SYS_NORMAL);

  //  CAN NonFunctional
  // Condition '#3': '<S105>:1:18'
  aVarTruthTableCondition_3 = (CONSTANT_DATA->WORKGROUP_FUNCTION ==
    NON_FUNCTIONAL);
  if (CONSTANT_DATA->AUXPOT_FUNCTION == NON_FUNCTIONAL) {
    // Decision 'D1': '<S105>:1:20'
    //  Non Functional
    // Action '1': '<S105>:1:34'
    rtb_enable_Normal = 0U;

    // Action '1': '<S105>:1:35'
    rtb_enable_CAN = 0U;

    // Action '1': '<S105>:1:36'
    rtb_select_Position = 0U;
  } else if (aVarTruthTableCondition_2 && aVarTruthTableCondition_3) {
    // Decision 'D2': '<S105>:1:22'
    //  Analog Pot
    // Action '2': '<S105>:1:42'
    rtb_enable_Normal = 1U;

    // Action '2': '<S105>:1:43'
    rtb_enable_CAN = 0U;

    // Action '2': '<S105>:1:44'
    rtb_select_Position = 0U;
  } else if (aVarTruthTableCondition_2 && (!aVarTruthTableCondition_3)) {
    // Decision 'D3': '<S105>:1:24'
    //  CAN Pot
    // Action '3': '<S105>:1:50'
    rtb_enable_Normal = 0U;

    // Action '3': '<S105>:1:51'
    rtb_enable_CAN = 1U;

    // Action '3': '<S105>:1:52'
    rtb_select_Position = 1U;
  } else {
    // Decision 'D4': '<S105>:1:26'
    //  Default
    //  Non Functional
    // Action '1': '<S105>:1:34'
    rtb_enable_Normal = 0U;

    // Action '1': '<S105>:1:35'
    rtb_enable_CAN = 0U;

    // Action '1': '<S105>:1:36'
    rtb_select_Position = 0U;
  }

  // End of Truth Table: '<S72>/Pot_Selection'

  // Outputs for Enabled SubSystem: '<S72>/Aux_Pot' incorporates:
  //   EnablePort: '<S103>/Enable'

  if ((int32_T)rtb_enable_Normal > 0) {
    if (!MX_Gtwy_Control_DWork.Aux_Pot_MODE) {
      // SystemReset for Chart: '<S103>/Aux_Pot'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check_i1nv =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
      MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_State_pnvw =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
      MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_ehfd =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
      MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
      MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_ewo2 =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
      MX_Gtwy_Control_DWork.temporalCounter_i1_nlrb = 0U;
      MX_Gtwy_Control_DWork.bitsForTID0.is_active_c67_MX_Gtwy_Control = 0U;
      MX_Gtwy_Control_DWork.offset_AuxPotCal_i1zk = 0;
      MX_Gtwy_Control_DWork.state_AuxPotCal_bigz = 0U;
      MX_Gtwy_Control_DWork.base_Threshold_msvx = 0U;
      MX_Gtwy_Control_DWork.rod_Threshold_csho = 0U;
      MX_Gtwy_Control_B.state_AuxPot_ijmy = 0U;
      MX_Gtwy_Control_B.position_AuxPotOut_g55o = 0;
      MX_Gtwy_Control_DWork.Aux_Pot_MODE = true;
    }

    // Gain: '<S107>/Gain' incorporates:
    //   Inport: '<Root>/ain_AuxPot'
    //   Inport: '<Root>/ain_SensorSupply2'
    //   Product: '<S107>/Product'

    MX_Gtwy_Control_B.Gain_lcxd = (uint16_T)(uint32_T)((uint32_T)((uint32_T)
      CONSTANT_DATA->AUXPOT_RATIO_GAIN * (uint32_T)(uint16_T)((uint32_T)
      ain_SensorSupply2 == 0U ? MAX_uint32_T : (uint32_T)((uint32_T)((uint32_T)
      ain_AuxPot << 15) / (uint32_T)ain_SensorSupply2))) >> 15);

    // DataTypeConversion: '<S103>/Data Type Conversion'
    DataTypeConversion_nlu5 = (int16_T)MX_Gtwy_Control_B.Gain_lcxd;

    // Chart: '<S103>/Aux_Pot'
    // Gateway: MX_Gtwy_Control/Inputs/Aux_Pot/Aux_Pot/Aux_Pot
    if ((uint32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_nlrb < 255U) {
      MX_Gtwy_Control_DWork.temporalCounter_i1_nlrb = (uint8_T)(int32_T)
        ((int32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_nlrb + 1);
    }

    // During: MX_Gtwy_Control/Inputs/Aux_Pot/Aux_Pot/Aux_Pot
    if ((uint32_T)
        MX_Gtwy_Control_DWork.bitsForTID0.is_active_c67_MX_Gtwy_Control == 0U) {
      // Entry: MX_Gtwy_Control/Inputs/Aux_Pot/Aux_Pot/Aux_Pot
      MX_Gtwy_Control_DWork.bitsForTID0.is_active_c67_MX_Gtwy_Control = 1U;

      // Entry Internal: MX_Gtwy_Control/Inputs/Aux_Pot/Aux_Pot/Aux_Pot
      // Entry Internal 'Aux_Pot_Neutral_Check': '<S106>:231'
      // Transition: '<S106>:242'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check_i1nv =
        MX_Gtwy_Control_IN_Initialize;

      // Entry 'Initialize': '<S106>:260'
      MX_Gtwy_Control_DWork.state_AuxPotCal_bigz = NORMAL;
      MX_Gtwy_Control_DWork.offset_AuxPotCal_i1zk = 0;

      // Entry Internal 'Aux_Pot_State': '<S106>:265'
      // Transition: '<S106>:266'
      MX_Gtwy_Control_DWork.base_Threshold_msvx = (uint16_T)(int32_T)((int32_T)
        CONSTANT_DATA->AUXPOT_CENTER_RATIO - (int32_T)
        CONSTANT_DATA->AUXPOT_DEADBAND);
      MX_Gtwy_Control_DWork.rod_Threshold_csho = (uint16_T)(int32_T)((int32_T)
        CONSTANT_DATA->AUXPOT_CENTER_RATIO + (int32_T)
        CONSTANT_DATA->AUXPOT_DEADBAND);
      MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_State_pnvw =
        MX_Gtwy_Control_IN_Supply_OK;

      // Entry Internal 'Supply_OK': '<S106>:269'
      // Transition: '<S106>:270'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_ehfd =
        MX_Gtwy_Control_IN_NORMAL_aqhd;

      // Entry 'NORMAL': '<S106>:281'
      MX_Gtwy_Control_B.position_AuxPotOut_g55o = (int16_T)(int32_T)((int32_T)
        DataTypeConversion_nlu5 + (int32_T)
        MX_Gtwy_Control_DWork.offset_AuxPotCal_i1zk);
      MX_Gtwy_C_enter_internal_NORMAL();
    } else {
      // During 'Aux_Pot_Neutral_Check': '<S106>:231'
      switch (MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check_i1nv) {
       case MX_Gtwy_Control_IN_Initialize:
        // During 'Initialize': '<S106>:260'
        // Transition: '<S106>:243'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check_i1nv =
          MX_Gtwy_Control_IN_WaitForPress;
        break;

       case MX_Gtwy_Control_IN_WaitForPress:
        // During 'WaitForPress': '<S106>:261'
        if ((((MX_Gtwy_Control_B.UnitDelay4 == AUX_FLOW_LOW) ||
              (MX_Gtwy_Control_B.UnitDelay4 == AUX_FLOW_MEDIUM) ||
              (MX_Gtwy_Control_B.UnitDelay4 == AUX_FLOW_STANDARD) ||
              (MX_Gtwy_Control_B.UnitDelay4 == AUX_FLOW_HIGH)) && (state_Console
              == ACTIVE) && (state_Engine != ENGINE_CRANKING) &&
             (MX_Gtwy_Control_B.state_AuxPot_ijmy != OORL) &&
             (MX_Gtwy_Control_B.state_AuxPot_ijmy != OORH) &&
             (MX_Gtwy_Control_B.RateTransition53_nlqq == NORMAL)) || ((((int32_T)
               aux_DebounceButton != 0) || ((int32_T)aux_DetentHold != 0)) &&
             ((MX_Gtwy_Control_B.UnitDelay1 == INACTIVE) ||
              (MX_Gtwy_Control_B.UnitDelay4 == AUX_FLOW_INACTIVE)) &&
             (MX_Gtwy_Control_B.state_AuxPot_ijmy != OORL) &&
             (MX_Gtwy_Control_B.state_AuxPot_ijmy != OORH) &&
             (MX_Gtwy_Control_B.RateTransition53_nlqq == NORMAL))) {
          // Transition: '<S106>:244'
          // Transition: '<S106>:253'
          // Transition: '<S106>:247'
          // Transition: '<S106>:245'
          if (((int32_T)DataTypeConversion_nlu5 >= (int32_T)
               CONSTANT_DATA->AUXPOT_CAL_DEADBAND_LOW) && ((int32_T)
               DataTypeConversion_nlu5 <= (int32_T)
               CONSTANT_DATA->AUXPOT_CAL_DEADBAND_HIGH)) {
            // Transition: '<S106>:246'
            // Transition: '<S106>:249'
            MX_Gtwy_Control_DWork.state_AuxPotCal_bigz = NORMAL;
            MX_Gtwy_Control_DWork.offset_AuxPotCal_i1zk = (int16_T)(int32_T)
              ((int32_T)(int16_T)CONSTANT_DATA->AUXPOT_CENTER_RATIO - (int32_T)
               DataTypeConversion_nlu5);

            // Transition: '<S106>:255'
          } else {
            // Transition: '<S106>:248'
            if (MX_Gtwy_Control_B.state_AuxPot_ijmy != NOT_IN_NEUTRAL) {
              // Transition: '<S106>:250'
              // Transition: '<S106>:252'
              MX_Gtwy_Control_DWork.state_AuxPotCal_bigz = NOT_IN_NEUTRAL;
              MX_Gtwy_Control_DWork.offset_AuxPotCal_i1zk = 0;
              state_Buzzer = TRIPLE_SHORT_BEEP;
            } else {
              // Transition: '<S106>:251'
              state_Buzzer = BEEP_NONE;

              // Transition: '<S106>:256'
            }

            // Transition: '<S106>:257'
          }

          MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check_i1nv =
            MX_Gtwy_Con_IN_Wait_For_New_Cal;
        }
        break;

       default:
        // During 'Wait_For_New_Cal': '<S106>:262'
        if ((state_Console != ACTIVE) || (state_Engine == ENGINE_CRANKING) ||
            (MX_Gtwy_Control_B.state_AuxPot_ijmy == OORL) ||
            (MX_Gtwy_Control_B.state_AuxPot_ijmy == OORH) ||
            (MX_Gtwy_Control_B.RateTransition53_nlqq != NORMAL)) {
          // Transition: '<S106>:259'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check_i1nv =
            MX_Gtwy_Control_IN_WaitForPress;
        } else {
          if ((((int32_T)aux_DebounceButton != 0) || ((int32_T)aux_DetentHold !=
                0)) && ((MX_Gtwy_Control_B.UnitDelay1 == INACTIVE) ||
                        (MX_Gtwy_Control_B.UnitDelay4 == AUX_FLOW_INACTIVE)) &&
              (MX_Gtwy_Control_B.state_AuxPot_ijmy != OORL) &&
              (MX_Gtwy_Control_B.state_AuxPot_ijmy != OORH) &&
              (MX_Gtwy_Control_B.RateTransition53_nlqq == NORMAL)) {
            // Transition: '<S106>:258'
            // Transition: '<S106>:254'
            // Transition: '<S106>:247'
            // Transition: '<S106>:245'
            if (((int32_T)DataTypeConversion_nlu5 >= (int32_T)
                 CONSTANT_DATA->AUXPOT_CAL_DEADBAND_LOW) && ((int32_T)
                 DataTypeConversion_nlu5 <= (int32_T)
                 CONSTANT_DATA->AUXPOT_CAL_DEADBAND_HIGH)) {
              // Transition: '<S106>:246'
              // Transition: '<S106>:249'
              MX_Gtwy_Control_DWork.state_AuxPotCal_bigz = NORMAL;
              MX_Gtwy_Control_DWork.offset_AuxPotCal_i1zk = (int16_T)(int32_T)
                ((int32_T)(int16_T)CONSTANT_DATA->AUXPOT_CENTER_RATIO - (int32_T)
                 DataTypeConversion_nlu5);

              // Transition: '<S106>:255'
            } else {
              // Transition: '<S106>:248'
              if (MX_Gtwy_Control_B.state_AuxPot_ijmy != NOT_IN_NEUTRAL) {
                // Transition: '<S106>:250'
                // Transition: '<S106>:252'
                MX_Gtwy_Control_DWork.state_AuxPotCal_bigz = NOT_IN_NEUTRAL;
                MX_Gtwy_Control_DWork.offset_AuxPotCal_i1zk = 0;
                state_Buzzer = TRIPLE_SHORT_BEEP;
              } else {
                // Transition: '<S106>:251'
                state_Buzzer = BEEP_NONE;

                // Transition: '<S106>:256'
              }

              // Transition: '<S106>:257'
            }

            MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check_i1nv =
              MX_Gtwy_Con_IN_Wait_For_New_Cal;
          }
        }
        break;
      }

      // During 'Aux_Pot_State': '<S106>:265'
      if (MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_State_pnvw ==
          MX_Gtwy_Control_IN_Supply_Fault) {
        MX_Gtwy_Control_B.state_AuxPot_ijmy = NORMAL;

        // During 'Supply_Fault': '<S106>:298'
        if (MX_Gtwy_Control_B.RateTransition53_nlqq == NORMAL) {
          // Transition: '<S106>:268'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_State_pnvw =
            MX_Gtwy_Control_IN_Supply_OK;

          // Entry Internal 'Supply_OK': '<S106>:269'
          // Transition: '<S106>:270'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_ehfd =
            MX_Gtwy_Control_IN_NORMAL_aqhd;

          // Entry 'NORMAL': '<S106>:281'
          MX_Gtwy_Control_B.position_AuxPotOut_g55o = (int16_T)(int32_T)
            ((int32_T)DataTypeConversion_nlu5 + (int32_T)
             MX_Gtwy_Control_DWork.offset_AuxPotCal_i1zk);
          MX_Gtwy_C_enter_internal_NORMAL();
        }
      } else {
        // During 'Supply_OK': '<S106>:269'
        if (MX_Gtwy_Control_B.RateTransition53_nlqq != NORMAL) {
          // Transition: '<S106>:267'
          // Exit Internal 'Supply_OK': '<S106>:269'
          // Exit Internal 'NORMAL': '<S106>:281'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
          MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_ehfd =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
          MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_State_pnvw =
            MX_Gtwy_Control_IN_Supply_Fault;

          // Entry 'Supply_Fault': '<S106>:298'
          MX_Gtwy_Control_B.state_AuxPot_ijmy = NORMAL;
          MX_Gtwy_Control_B.position_AuxPotOut_g55o = (int16_T)
            CONSTANT_DATA->AUXPOT_CENTER_RATIO;
        } else {
          switch (MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_ehfd) {
           case MX_Gtwy_Control_IN_NORMAL_aqhd:
            // During 'NORMAL': '<S106>:281'
            if ((int32_T)DataTypeConversion_nlu5 > (int32_T)
                CONSTANT_DATA->AUXPOT_OORH) {
              // Transition: '<S106>:271'
              // Exit Internal 'NORMAL': '<S106>:281'
              MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh =
                MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
              MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_ehfd =
                MX_Gtwy_Contro_IN_debounce_OORH;
              MX_Gtwy_Control_DWork.temporalCounter_i1_nlrb = 0U;

              // Entry 'debounce_OORH': '<S106>:294'
              MX_Gtwy_Control_B.position_AuxPotOut_g55o = (int16_T)
                CONSTANT_DATA->AUXPOT_CENTER_RATIO;
            } else if ((int32_T)DataTypeConversion_nlu5 < (int32_T)
                       CONSTANT_DATA->AUXPOT_OORL) {
              // Transition: '<S106>:275'
              // Exit Internal 'NORMAL': '<S106>:281'
              MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh =
                MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
              MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_ehfd =
                MX_Gtwy_Contro_IN_debounce_OORL;
              MX_Gtwy_Control_DWork.temporalCounter_i1_nlrb = 0U;

              // Entry 'debounce_OORL': '<S106>:296'
              MX_Gtwy_Control_B.position_AuxPotOut_g55o = (int16_T)
                CONSTANT_DATA->AUXPOT_CENTER_RATIO;
            } else if (MX_Gtwy_Control_DWork.state_AuxPotCal_bigz ==
                       NOT_IN_NEUTRAL) {
              // Transition: '<S106>:279'
              // Exit Internal 'NORMAL': '<S106>:281'
              MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh =
                MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
              MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_ehfd =
                MX_Gtwy_Contr_IN_NOT_IN_NEUTRAL;

              // Entry 'NOT_IN_NEUTRAL': '<S106>:297'
              MX_Gtwy_Control_B.state_AuxPot_ijmy = NOT_IN_NEUTRAL;
              MX_Gtwy_Control_B.position_AuxPotOut_g55o = (int16_T)
                CONSTANT_DATA->AUXPOT_CENTER_RATIO;
            } else {
              DataTypeConversion_nlu5 = (int16_T)(int32_T)((int32_T)
                DataTypeConversion_nlu5 + (int32_T)
                MX_Gtwy_Control_DWork.offset_AuxPotCal_i1zk);
              MX_Gtwy_Control_B.position_AuxPotOut_g55o =
                DataTypeConversion_nlu5;
              switch (MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh) {
               case MX_Gtwy_Control_IN_Base_Active:
                MX_Gtwy_Control_B.state_AuxPot_ijmy = BASE_ACTIVE;

                // During 'Base_Active': '<S106>:292'
                if (((int32_T)DataTypeConversion_nlu5 >= (int32_T)
                     MX_Gtwy_Control_DWork.rod_Threshold_csho) && ((int32_T)
                     DataTypeConversion_nlu5 > (int32_T)
                     MX_Gtwy_Control_DWork.base_Threshold_msvx)) {
                  // Transition: '<S106>:289'
                  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh =
                    MX_Gtwy_Control_IN_Rod_Active;
                  MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_ewo2 =
                    MX_Gtwy_Control_IN_Rod_Active;

                  // Entry 'Rod_Active': '<S106>:291'
                  MX_Gtwy_Control_B.state_AuxPot_ijmy = ROD_ACTIVE;
                } else {
                  if ((int32_T)DataTypeConversion_nlu5 >= (int32_T)
                      MX_Gtwy_Control_DWork.base_Threshold_msvx) {
                    // Transition: '<S106>:287'
                    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh =
                      MX_Gtwy_Control_IN_Neutral;
                    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_ewo2 =
                      MX_Gtwy_Control_IN_Neutral;

                    // Entry 'Neutral': '<S106>:290'
                    MX_Gtwy_Control_B.state_AuxPot_ijmy = NEUTRAL;
                  }
                }
                break;

               case MX_Gtwy_Control_IN_Neutral:
                MX_Gtwy_Control_B.state_AuxPot_ijmy = NEUTRAL;

                // During 'Neutral': '<S106>:290'
                if ((int32_T)DataTypeConversion_nlu5 > (int32_T)
                    MX_Gtwy_Control_DWork.rod_Threshold_csho) {
                  // Transition: '<S106>:285'
                  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh =
                    MX_Gtwy_Control_IN_Rod_Active;
                  MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_ewo2 =
                    MX_Gtwy_Control_IN_Rod_Active;

                  // Entry 'Rod_Active': '<S106>:291'
                  MX_Gtwy_Control_B.state_AuxPot_ijmy = ROD_ACTIVE;
                } else {
                  if ((int32_T)DataTypeConversion_nlu5 < (int32_T)
                      MX_Gtwy_Control_DWork.base_Threshold_msvx) {
                    // Transition: '<S106>:284'
                    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh =
                      MX_Gtwy_Control_IN_Base_Active;
                    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_ewo2 =
                      MX_Gtwy_Control_IN_Base_Active;

                    // Entry 'Base_Active': '<S106>:292'
                    MX_Gtwy_Control_B.state_AuxPot_ijmy = BASE_ACTIVE;
                  }
                }
                break;

               default:
                MX_Gtwy_Control_B.state_AuxPot_ijmy = ROD_ACTIVE;

                // During 'Rod_Active': '<S106>:291'
                if (((int32_T)DataTypeConversion_nlu5 <= (int32_T)
                     MX_Gtwy_Control_DWork.rod_Threshold_csho) && ((int32_T)
                     DataTypeConversion_nlu5 < (int32_T)
                     MX_Gtwy_Control_DWork.base_Threshold_msvx)) {
                  // Transition: '<S106>:288'
                  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh =
                    MX_Gtwy_Control_IN_Base_Active;
                  MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_ewo2 =
                    MX_Gtwy_Control_IN_Base_Active;

                  // Entry 'Base_Active': '<S106>:292'
                  MX_Gtwy_Control_B.state_AuxPot_ijmy = BASE_ACTIVE;
                } else {
                  if ((int32_T)DataTypeConversion_nlu5 <= (int32_T)
                      MX_Gtwy_Control_DWork.rod_Threshold_csho) {
                    // Transition: '<S106>:286'
                    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_cyhh =
                      MX_Gtwy_Control_IN_Neutral;
                    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_ewo2 =
                      MX_Gtwy_Control_IN_Neutral;

                    // Entry 'Neutral': '<S106>:290'
                    MX_Gtwy_Control_B.state_AuxPot_ijmy = NEUTRAL;
                  }
                }
                break;
              }
            }
            break;

           case MX_Gtwy_Contr_IN_NOT_IN_NEUTRAL:
            MX_Gtwy_Control_B.state_AuxPot_ijmy = NOT_IN_NEUTRAL;

            // During 'NOT_IN_NEUTRAL': '<S106>:297'
            if (MX_Gtwy_Control_DWork.state_AuxPotCal_bigz != NOT_IN_NEUTRAL) {
              // Transition: '<S106>:280'
              MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_ehfd =
                MX_Gtwy_Control_IN_NORMAL_aqhd;

              // Entry 'NORMAL': '<S106>:281'
              MX_Gtwy_Control_B.position_AuxPotOut_g55o = (int16_T)(int32_T)
                ((int32_T)DataTypeConversion_nlu5 + (int32_T)
                 MX_Gtwy_Control_DWork.offset_AuxPotCal_i1zk);
              MX_Gtwy_C_enter_internal_NORMAL();
            }
            break;

           case MX_Gtwy_Control_IN_OORH:
            MX_Gtwy_Control_B.state_AuxPot_ijmy = OORH;

            // During 'OORH': '<S106>:293'
            if ((int32_T)DataTypeConversion_nlu5 <= (int32_T)
                CONSTANT_DATA->AUXPOT_OORH) {
              // Transition: '<S106>:274'
              MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_ehfd =
                MX_Gtwy_Control_IN_NORMAL_aqhd;

              // Entry 'NORMAL': '<S106>:281'
              MX_Gtwy_Control_B.position_AuxPotOut_g55o = (int16_T)(int32_T)
                ((int32_T)DataTypeConversion_nlu5 + (int32_T)
                 MX_Gtwy_Control_DWork.offset_AuxPotCal_i1zk);
              MX_Gtwy_C_enter_internal_NORMAL();
            }
            break;

           case MX_Gtwy_Control_IN_OORL:
            MX_Gtwy_Control_B.state_AuxPot_ijmy = OORL;

            // During 'OORL': '<S106>:295'
            if ((int32_T)DataTypeConversion_nlu5 >= (int32_T)
                CONSTANT_DATA->AUXPOT_OORL) {
              // Transition: '<S106>:278'
              MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_ehfd =
                MX_Gtwy_Control_IN_NORMAL_aqhd;

              // Entry 'NORMAL': '<S106>:281'
              MX_Gtwy_Control_B.position_AuxPotOut_g55o = (int16_T)(int32_T)
                ((int32_T)DataTypeConversion_nlu5 + (int32_T)
                 MX_Gtwy_Control_DWork.offset_AuxPotCal_i1zk);
              MX_Gtwy_C_enter_internal_NORMAL();
            }
            break;

           case MX_Gtwy_Contro_IN_debounce_OORH:
            // During 'debounce_OORH': '<S106>:294'
            if (MX_Gtwy_Control_DWork.temporalCounter_i1_nlrb >=
                CONSTANT_DATA->AUXPOT_OOR_DB) {
              // Transition: '<S106>:272'
              MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_ehfd =
                MX_Gtwy_Control_IN_OORH;

              // Entry 'OORH': '<S106>:293'
              MX_Gtwy_Control_B.state_AuxPot_ijmy = OORH;
            } else {
              if ((int32_T)DataTypeConversion_nlu5 <= (int32_T)
                  CONSTANT_DATA->AUXPOT_OORH) {
                // Transition: '<S106>:273'
                MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_ehfd =
                  MX_Gtwy_Control_IN_NORMAL_aqhd;

                // Entry 'NORMAL': '<S106>:281'
                MX_Gtwy_Control_B.position_AuxPotOut_g55o = (int16_T)(int32_T)
                  ((int32_T)DataTypeConversion_nlu5 + (int32_T)
                   MX_Gtwy_Control_DWork.offset_AuxPotCal_i1zk);
                MX_Gtwy_C_enter_internal_NORMAL();
              }
            }
            break;

           default:
            // During 'debounce_OORL': '<S106>:296'
            if (MX_Gtwy_Control_DWork.temporalCounter_i1_nlrb >=
                CONSTANT_DATA->AUXPOT_OOR_DB) {
              // Transition: '<S106>:276'
              MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_ehfd =
                MX_Gtwy_Control_IN_OORL;

              // Entry 'OORL': '<S106>:295'
              MX_Gtwy_Control_B.state_AuxPot_ijmy = OORL;
            } else {
              if ((int32_T)DataTypeConversion_nlu5 >= (int32_T)
                  CONSTANT_DATA->AUXPOT_OORL) {
                // Transition: '<S106>:277'
                MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_ehfd =
                  MX_Gtwy_Control_IN_NORMAL_aqhd;

                // Entry 'NORMAL': '<S106>:281'
                MX_Gtwy_Control_B.position_AuxPotOut_g55o = (int16_T)(int32_T)
                  ((int32_T)DataTypeConversion_nlu5 + (int32_T)
                   MX_Gtwy_Control_DWork.offset_AuxPotCal_i1zk);
                MX_Gtwy_C_enter_internal_NORMAL();
              }
            }
            break;
          }
        }
      }
    }

    // End of Chart: '<S103>/Aux_Pot'

    // SignalConversion: '<S103>/OutportBufferForstate_AuxPot'
    MX_Gtwy_Control_B.OutportBufferForstate_AuxP_j0wy =
      MX_Gtwy_Control_B.state_AuxPot_ijmy;

    // DataTypeConversion: '<S103>/Data Type Conversion3'
    u0 = (uint16_T)MX_Gtwy_Control_B.position_AuxPotOut_g55o;

    // Saturate: '<S103>/Saturation'
    if (u0 < ((uint16_T)1000U)) {
      MX_Gtwy_Control_B.Saturation_hime = u0;
    } else {
      MX_Gtwy_Control_B.Saturation_hime = ((uint16_T)1000U);
    }

    // End of Saturate: '<S103>/Saturation'
  } else {
    if (MX_Gtwy_Control_DWork.Aux_Pot_MODE) {
      // Disable for Outport: '<S103>/state_AuxPot'
      MX_Gtwy_Control_B.OutportBufferForstate_AuxP_j0wy = ((uint8_T)8U);

      // Disable for Outport: '<S103>/position_AuxPot'
      MX_Gtwy_Control_B.Saturation_hime = ((uint16_T)500U);

      // Disable for Outport: '<S103>/rm_AuxPot'
      MX_Gtwy_Control_B.Gain_lcxd = ((uint16_T)500U);
      MX_Gtwy_Control_DWork.Aux_Pot_MODE = false;
    }
  }

  // End of Outputs for SubSystem: '<S72>/Aux_Pot'

  // Outputs for Enabled SubSystem: '<S72>/CAN_Aux_Pot' incorporates:
  //   EnablePort: '<S104>/Enable'

  if ((int32_T)rtb_enable_CAN > 0) {
    if (!MX_Gtwy_Control_DWork.CAN_Aux_Pot_MODE) {
      // SystemReset for Chart: '<S104>/Aux_Pot'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
      MX_Gtwy_Control_DWork.temporalCounter_i1_aqq4 = 0U;
      MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_State =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
      MX_Gtwy_Control_DWork.bitsForTID0.is_CAN_OK_ai2f =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
      MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_jiv4 =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
      MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_nssh =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
      MX_Gtwy_Control_DWork.bitsForTID0.is_active_c74_MX_Gtwy_Control = 0U;
      MX_Gtwy_Control_DWork.offset_AuxPotCal = 0;
      MX_Gtwy_Control_DWork.state_AuxPotCal = 0U;
      MX_Gtwy_Control_DWork.base_Threshold_gzt3 = 0U;
      MX_Gtwy_Control_DWork.rod_Threshold_penn = 0U;
      MX_Gtwy_Control_B.state_AuxPot_meiu = 0U;
      MX_Gtwy_Control_B.position_AuxPotOut = 0;
      MX_Gtwy_Control_DWork.CAN_Aux_Pot_MODE = true;
    }

    // Sum: '<S104>/Sum' incorporates:
    //   Constant: '<S104>/Constant'
    //   Gain: '<S104>/Gain'
    //   Outport: '<Root>/cmd_PotRight'
    //   UnaryMinus: '<S104>/Unary Minus'

    Sum = (int16_T)(int32_T)((int32_T)(int16_T)(int32_T)((int32_T)((int32_T)
      16384 * (int32_T)(int16_T)(int32_T)-(int32_T)
      MX_Gtwy_Control_Y.cmd_PotRight) >> 15) + (int32_T)500);

    // Chart: '<S104>/Aux_Pot' incorporates:
    //   Inport: '<Root>/msgAge_BJM2Right'

    // Gateway: MX_Gtwy_Control/Inputs/Aux_Pot/CAN_Aux_Pot/Aux_Pot
    if ((uint32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_aqq4 < 127U) {
      MX_Gtwy_Control_DWork.temporalCounter_i1_aqq4 = (uint8_T)(int32_T)
        ((int32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_aqq4 + 1);
    }

    // During: MX_Gtwy_Control/Inputs/Aux_Pot/CAN_Aux_Pot/Aux_Pot
    if ((uint32_T)
        MX_Gtwy_Control_DWork.bitsForTID0.is_active_c74_MX_Gtwy_Control == 0U) {
      // Entry: MX_Gtwy_Control/Inputs/Aux_Pot/CAN_Aux_Pot/Aux_Pot
      MX_Gtwy_Control_DWork.bitsForTID0.is_active_c74_MX_Gtwy_Control = 1U;

      // Entry Internal: MX_Gtwy_Control/Inputs/Aux_Pot/CAN_Aux_Pot/Aux_Pot
      // Entry Internal 'Aux_Pot_Neutral_Check': '<S108>:108'
      // Transition: '<S108>:113'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check =
        MX_Gtwy_Control_IN_Initialize;
      MX_Gtwy_Control_DWork.temporalCounter_i1_aqq4 = 0U;

      // Entry 'Initialize': '<S108>:121'
      MX_Gtwy_Control_DWork.state_AuxPotCal = NORMAL;
      MX_Gtwy_Control_DWork.offset_AuxPotCal = 0;

      // Entry Internal 'Aux_Pot_State': '<S108>:9'
      // Transition: '<S108>:181'
      MX_Gtwy_Control_DWork.base_Threshold_gzt3 = (uint16_T)(int32_T)((int32_T)
        CONSTANT_DATA->AUXPOT_CENTER_RATIO - (int32_T)
        CONSTANT_DATA->AUXPOT_DEADBAND);
      MX_Gtwy_Control_DWork.rod_Threshold_penn = (uint16_T)(int32_T)((int32_T)
        CONSTANT_DATA->AUXPOT_CENTER_RATIO + (int32_T)
        CONSTANT_DATA->AUXPOT_DEADBAND);
      MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_State =
        MX_Gtwy_Control_IN_CAN_OK;

      // Entry Internal 'CAN_OK': '<S108>:180'
      // Transition: '<S108>:17'
      MX_Gtwy_Control_DWork.bitsForTID0.is_CAN_OK_ai2f =
        MX_Gtwy_Control_IN_NORMAL_aqhd;

      // Entry 'NORMAL': '<S108>:4'
      MX_Gtwy_Control_B.position_AuxPotOut = (int16_T)(int32_T)((int32_T)Sum +
        (int32_T)MX_Gtwy_Control_DWork.offset_AuxPotCal);
      MX_G_enter_internal_NORMAL_dote();
    } else {
      // During 'Aux_Pot_Neutral_Check': '<S108>:108'
      switch (MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check) {
       case MX_Gtwy_Control_IN_Initialize:
        // During 'Initialize': '<S108>:121'
        if (MX_Gtwy_Control_DWork.temporalCounter_i1_aqq4 >=
            MX_Gtwy_Control_ONE_SECOND) {
          // Transition: '<S108>:114'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check =
            MX_Gtwy_Co_IN_WaitForPress_nt2k;
        }
        break;

       case MX_Gtwy_Con_IN_Joystick_Powerup:
        // During 'Joystick_Powerup': '<S108>:183'
        if (MX_Gtwy_Control_DWork.temporalCounter_i1_aqq4 >=
            MX_Gtwy_Control_ONE_SECOND) {
          // Transition: '<S108>:185'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check =
            MX_Gtwy_Co_IN_WaitForPress_nt2k;
        }
        break;

       case MX_Gtwy_Co_IN_WaitForPress_nt2k:
        // During 'WaitForPress': '<S108>:122'
        if ((((MX_Gtwy_Control_B.UnitDelay4 == AUX_FLOW_LOW) ||
              (MX_Gtwy_Control_B.UnitDelay4 == AUX_FLOW_MEDIUM) ||
              (MX_Gtwy_Control_B.UnitDelay4 == AUX_FLOW_STANDARD) ||
              (MX_Gtwy_Control_B.UnitDelay4 == AUX_FLOW_HIGH)) && (state_Console
              == ACTIVE) && (state_Engine != ENGINE_CRANKING) && ((int32_T)
              msgAge_BJM2Right < 100)) || ((((int32_T)aux_DebounceButton != 0) ||
              ((int32_T)aux_DetentHold != 0)) && ((MX_Gtwy_Control_B.UnitDelay1 ==
               INACTIVE) || (MX_Gtwy_Control_B.UnitDelay4 == AUX_FLOW_INACTIVE))
             && ((int32_T)msgAge_BJM2Right < 100))) {
          // Transition: '<S108>:115'
          // Transition: '<S108>:150'
          // Transition: '<S108>:170'
          // Transition: '<S108>:171'
          if (((int32_T)Sum >= (int32_T)CONSTANT_DATA->AUXPOT_CAL_DEADBAND_LOW) &&
              ((int32_T)Sum <= (int32_T)CONSTANT_DATA->AUXPOT_CAL_DEADBAND_HIGH))
          {
            // Transition: '<S108>:116'
            // Transition: '<S108>:118'
            MX_Gtwy_Control_DWork.state_AuxPotCal = NORMAL;
            MX_Gtwy_Control_DWork.offset_AuxPotCal = (int16_T)(int32_T)((int32_T)
              (int16_T)CONSTANT_DATA->AUXPOT_CENTER_RATIO - (int32_T)Sum);

            // Transition: '<S108>:120'
          } else {
            // Transition: '<S108>:162'
            if (MX_Gtwy_Control_B.state_AuxPot_meiu != NOT_IN_NEUTRAL) {
              // Transition: '<S108>:161'
              // Transition: '<S108>:117'
              MX_Gtwy_Control_DWork.state_AuxPotCal = NOT_IN_NEUTRAL;
              MX_Gtwy_Control_DWork.offset_AuxPotCal = 0;
              state_Buzzer = TRIPLE_SHORT_BEEP;
            } else {
              // Transition: '<S108>:164'
              state_Buzzer = BEEP_NONE;

              // Transition: '<S108>:165'
            }

            // Transition: '<S108>:119'
          }

          MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check =
            MX_Gtw_IN_Wait_For_New_Cal_lpp3;
        }
        break;

       default:
        // During 'Wait_For_New_Cal': '<S108>:123'
        if (state_Console != ACTIVE) {
          // Transition: '<S108>:124'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check =
            MX_Gtwy_Co_IN_WaitForPress_nt2k;
        } else if ((((int32_T)aux_DebounceButton != 0) || ((int32_T)
                     aux_DetentHold != 0)) && ((MX_Gtwy_Control_B.UnitDelay1 ==
                     INACTIVE) || (MX_Gtwy_Control_B.UnitDelay4 ==
                     AUX_FLOW_INACTIVE))) {
          // Transition: '<S108>:154'
          // Transition: '<S108>:169'
          // Transition: '<S108>:170'
          // Transition: '<S108>:171'
          if (((int32_T)Sum >= (int32_T)CONSTANT_DATA->AUXPOT_CAL_DEADBAND_LOW) &&
              ((int32_T)Sum <= (int32_T)CONSTANT_DATA->AUXPOT_CAL_DEADBAND_HIGH))
          {
            // Transition: '<S108>:116'
            // Transition: '<S108>:118'
            MX_Gtwy_Control_DWork.state_AuxPotCal = NORMAL;
            MX_Gtwy_Control_DWork.offset_AuxPotCal = (int16_T)(int32_T)((int32_T)
              (int16_T)CONSTANT_DATA->AUXPOT_CENTER_RATIO - (int32_T)Sum);

            // Transition: '<S108>:120'
          } else {
            // Transition: '<S108>:162'
            if (MX_Gtwy_Control_B.state_AuxPot_meiu != NOT_IN_NEUTRAL) {
              // Transition: '<S108>:161'
              // Transition: '<S108>:117'
              MX_Gtwy_Control_DWork.state_AuxPotCal = NOT_IN_NEUTRAL;
              MX_Gtwy_Control_DWork.offset_AuxPotCal = 0;
              state_Buzzer = TRIPLE_SHORT_BEEP;
            } else {
              // Transition: '<S108>:164'
              state_Buzzer = BEEP_NONE;

              // Transition: '<S108>:165'
            }

            // Transition: '<S108>:119'
          }

          MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check =
            MX_Gtw_IN_Wait_For_New_Cal_lpp3;
        } else {
          if (state_Engine == ENGINE_CRANKING) {
            // Transition: '<S108>:184'
            MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_Neutral_Check =
              MX_Gtwy_Con_IN_Joystick_Powerup;
            MX_Gtwy_Control_DWork.temporalCounter_i1_aqq4 = 0U;
          }
        }
        break;
      }

      // During 'Aux_Pot_State': '<S108>:9'
      if (MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_State ==
          MX_Gtwy_Control_IN_CAN_Fault) {
        MX_Gtwy_Control_B.state_AuxPot_meiu = NORMAL;

        // During 'CAN_Fault': '<S108>:176'
      } else {
        // During 'CAN_OK': '<S108>:180'
        if ((int32_T)msgAge_BJM2Right > 1000) {
          // Transition: '<S108>:177'
          // Exit Internal 'CAN_OK': '<S108>:180'
          // Exit Internal 'NORMAL': '<S108>:4'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_jiv4 =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
          MX_Gtwy_Control_DWork.bitsForTID0.is_CAN_OK_ai2f =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
          MX_Gtwy_Control_DWork.bitsForTID0.is_Aux_Pot_State =
            MX_Gtwy_Control_IN_CAN_Fault;

          // Entry 'CAN_Fault': '<S108>:176'
          MX_Gtwy_Control_B.state_AuxPot_meiu = NORMAL;
          MX_Gtwy_Control_B.position_AuxPotOut = (int16_T)
            CONSTANT_DATA->AUXPOT_CENTER_RATIO;
        } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_CAN_OK_ai2f ==
                   MX_Gtwy_Control_IN_NORMAL_aqhd) {
          // During 'NORMAL': '<S108>:4'
          if (MX_Gtwy_Control_DWork.state_AuxPotCal == NOT_IN_NEUTRAL) {
            // Transition: '<S108>:23'
            // Exit Internal 'NORMAL': '<S108>:4'
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_jiv4 =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_pjof;
            MX_Gtwy_Control_DWork.bitsForTID0.is_CAN_OK_ai2f =
              MX_Gtwy_Contr_IN_NOT_IN_NEUTRAL;

            // Entry 'NOT_IN_NEUTRAL': '<S108>:8'
            MX_Gtwy_Control_B.state_AuxPot_meiu = NOT_IN_NEUTRAL;
            MX_Gtwy_Control_B.position_AuxPotOut = (int16_T)
              CONSTANT_DATA->AUXPOT_CENTER_RATIO;
          } else {
            DataTypeConversion_nlu5 = (int16_T)(int32_T)((int32_T)Sum + (int32_T)
              MX_Gtwy_Control_DWork.offset_AuxPotCal);
            MX_Gtwy_Control_B.position_AuxPotOut = DataTypeConversion_nlu5;
            switch (MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_jiv4) {
             case MX_Gtwy_Control_IN_Base_Active:
              MX_Gtwy_Control_B.state_AuxPot_meiu = BASE_ACTIVE;

              // During 'Base_Active': '<S108>:10'
              if (((int32_T)DataTypeConversion_nlu5 >= (int32_T)
                   MX_Gtwy_Control_DWork.rod_Threshold_penn) && ((int32_T)
                   DataTypeConversion_nlu5 > (int32_T)
                   MX_Gtwy_Control_DWork.base_Threshold_gzt3)) {
                // Transition: '<S108>:35'
                MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_jiv4 =
                  MX_Gtwy_Control_IN_Rod_Active;
                MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_nssh =
                  MX_Gtwy_Control_IN_Rod_Active;

                // Entry 'Rod_Active': '<S108>:12'
                MX_Gtwy_Control_B.state_AuxPot_meiu = ROD_ACTIVE;
              } else {
                if ((int32_T)DataTypeConversion_nlu5 >= (int32_T)
                    MX_Gtwy_Control_DWork.base_Threshold_gzt3) {
                  // Transition: '<S108>:34'
                  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_jiv4 =
                    MX_Gtwy_Control_IN_Neutral;
                  MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_nssh =
                    MX_Gtwy_Control_IN_Neutral;

                  // Entry 'Neutral': '<S108>:11'
                  MX_Gtwy_Control_B.state_AuxPot_meiu = NEUTRAL;
                }
              }
              break;

             case MX_Gtwy_Control_IN_Neutral:
              MX_Gtwy_Control_B.state_AuxPot_meiu = NEUTRAL;

              // During 'Neutral': '<S108>:11'
              if ((int32_T)DataTypeConversion_nlu5 > (int32_T)
                  MX_Gtwy_Control_DWork.rod_Threshold_penn) {
                // Transition: '<S108>:32'
                MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_jiv4 =
                  MX_Gtwy_Control_IN_Rod_Active;
                MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_nssh =
                  MX_Gtwy_Control_IN_Rod_Active;

                // Entry 'Rod_Active': '<S108>:12'
                MX_Gtwy_Control_B.state_AuxPot_meiu = ROD_ACTIVE;
              } else {
                if ((int32_T)DataTypeConversion_nlu5 < (int32_T)
                    MX_Gtwy_Control_DWork.base_Threshold_gzt3) {
                  // Transition: '<S108>:31'
                  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_jiv4 =
                    MX_Gtwy_Control_IN_Base_Active;
                  MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_nssh =
                    MX_Gtwy_Control_IN_Base_Active;

                  // Entry 'Base_Active': '<S108>:10'
                  MX_Gtwy_Control_B.state_AuxPot_meiu = BASE_ACTIVE;
                }
              }
              break;

             default:
              MX_Gtwy_Control_B.state_AuxPot_meiu = ROD_ACTIVE;

              // During 'Rod_Active': '<S108>:12'
              if (((int32_T)DataTypeConversion_nlu5 <= (int32_T)
                   MX_Gtwy_Control_DWork.rod_Threshold_penn) && ((int32_T)
                   DataTypeConversion_nlu5 < (int32_T)
                   MX_Gtwy_Control_DWork.base_Threshold_gzt3)) {
                // Transition: '<S108>:36'
                MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_jiv4 =
                  MX_Gtwy_Control_IN_Base_Active;
                MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_nssh =
                  MX_Gtwy_Control_IN_Base_Active;

                // Entry 'Base_Active': '<S108>:10'
                MX_Gtwy_Control_B.state_AuxPot_meiu = BASE_ACTIVE;
              } else {
                if ((int32_T)DataTypeConversion_nlu5 <= (int32_T)
                    MX_Gtwy_Control_DWork.rod_Threshold_penn) {
                  // Transition: '<S108>:33'
                  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_jiv4 =
                    MX_Gtwy_Control_IN_Neutral;
                  MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL_nssh =
                    MX_Gtwy_Control_IN_Neutral;

                  // Entry 'Neutral': '<S108>:11'
                  MX_Gtwy_Control_B.state_AuxPot_meiu = NEUTRAL;
                }
              }
              break;
            }
          }
        } else {
          MX_Gtwy_Control_B.state_AuxPot_meiu = NOT_IN_NEUTRAL;

          // During 'NOT_IN_NEUTRAL': '<S108>:8'
          if (MX_Gtwy_Control_DWork.state_AuxPotCal != NOT_IN_NEUTRAL) {
            // Transition: '<S108>:13'
            MX_Gtwy_Control_DWork.bitsForTID0.is_CAN_OK_ai2f =
              MX_Gtwy_Control_IN_NORMAL_aqhd;

            // Entry 'NORMAL': '<S108>:4'
            MX_Gtwy_Control_B.position_AuxPotOut = (int16_T)(int32_T)((int32_T)
              Sum + (int32_T)MX_Gtwy_Control_DWork.offset_AuxPotCal);
            MX_G_enter_internal_NORMAL_dote();
          }
        }
      }
    }

    // End of Chart: '<S104>/Aux_Pot'

    // DataTypeConversion: '<S104>/Data Type Conversion'
    MX_Gtwy_Control_B.DataTypeConversion_im15 = (uint16_T)Sum;

    // SignalConversion: '<S104>/OutportBufferForstate_AuxPot'
    MX_Gtwy_Control_B.OutportBufferForstate_AuxPot =
      MX_Gtwy_Control_B.state_AuxPot_meiu;

    // DataTypeConversion: '<S104>/Data Type Conversion3'
    u0 = (uint16_T)MX_Gtwy_Control_B.position_AuxPotOut;

    // Saturate: '<S104>/Saturation'
    if (u0 < ((uint16_T)1000U)) {
      MX_Gtwy_Control_B.Saturation = u0;
    } else {
      MX_Gtwy_Control_B.Saturation = ((uint16_T)1000U);
    }

    // End of Saturate: '<S104>/Saturation'
  } else {
    if (MX_Gtwy_Control_DWork.CAN_Aux_Pot_MODE) {
      // Disable for Outport: '<S104>/state_AuxPot'
      MX_Gtwy_Control_B.OutportBufferForstate_AuxPot = ((uint8_T)8U);

      // Disable for Outport: '<S104>/position_AuxPot'
      MX_Gtwy_Control_B.Saturation = ((uint16_T)500U);

      // Disable for Outport: '<S104>/rm_AuxPot'
      MX_Gtwy_Control_B.DataTypeConversion_im15 = ((uint16_T)500U);
      MX_Gtwy_Control_DWork.CAN_Aux_Pot_MODE = false;
    }
  }

  // End of Outputs for SubSystem: '<S72>/CAN_Aux_Pot'

  // MultiPortSwitch: '<S72>/Multiport Switch'
  if ((int32_T)rtb_select_Position == 0) {
    state_AuxPot = MX_Gtwy_Control_B.OutportBufferForstate_AuxP_j0wy;
  } else {
    state_AuxPot = MX_Gtwy_Control_B.OutportBufferForstate_AuxPot;
  }

  // End of MultiPortSwitch: '<S72>/Multiport Switch'

  // MultiPortSwitch: '<S72>/Multiport Switch1'
  if ((int32_T)rtb_select_Position == 0) {
    position_AuxPot = MX_Gtwy_Control_B.Saturation_hime;
  } else {
    position_AuxPot = MX_Gtwy_Control_B.Saturation;
  }

  // End of MultiPortSwitch: '<S72>/Multiport Switch1'

  // MultiPortSwitch: '<S72>/Multiport Switch3'
  if ((int32_T)rtb_select_Position == 0) {
    rm_AuxPot = MX_Gtwy_Control_B.Gain_lcxd;
  } else {
    rm_AuxPot = MX_Gtwy_Control_B.DataTypeConversion_im15;
  }

  // End of MultiPortSwitch: '<S72>/Multiport Switch3'
}

// System initialize for atomic system: '<S3>/Buttons'
void MX_Gtwy_Control_Buttons_Init(void)
{
  // SystemInitialize for Chart: '<S73>/Delay'
  MX_Gtwy_Control_DWork.temporalCounter_i1_bwgm = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_active_c31_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_c31_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_d22v;
  MX_Gtwy_Control_B.out = false;
}

// Output and update for atomic system: '<S3>/Buttons'
void MX_Gtwy_Control_Buttons(void)
{
  boolean_T rtb_Compare_jsuc;
  boolean_T rtb_Compare_knon;
  boolean_T rtb_Compare_owwx;
  boolean_T rtb_Compare_cfoo;
  boolean_T rtb_Compare_nyjq;
  int32_T rtb_Compare_cc2i_tmp;

  // RelationalOperator: '<S116>/Compare' incorporates:
  //   Constant: '<S116>/Constant'
  //   Inport: '<Root>/msg_DeluxeButtons'
  //   S-Function (sfix_bitop): '<S73>/Bitwise Operator15'

  rtb_Compare_jsuc = ((int32_T)((int32_T)msg_DeluxeButtons[0] & (int32_T)
    ((uint8_T)12U)) == (int32_T)((uint8_T)4U));

  // S-Function (sfix_bitop): '<S73>/Bitwise Operator16' incorporates:
  //   Inport: '<Root>/msg_DeluxeButtons'
  //   S-Function (sfix_bitop): '<S73>/Bitwise Operator6'
  //   Switch: '<S73>/Switch2'

  rtb_Compare_cc2i_tmp = (int32_T)((int32_T)msg_DeluxeButtons[3] & (int32_T)
    ((uint8_T)48U));

  // RelationalOperator: '<S120>/Compare' incorporates:
  //   Constant: '<S120>/Constant'
  //   S-Function (sfix_bitop): '<S73>/Bitwise Operator16'

  rtb_Compare_knon = (rtb_Compare_cc2i_tmp == (int32_T)((uint8_T)16U));

  // RelationalOperator: '<S123>/Compare' incorporates:
  //   Constant: '<S123>/Constant'
  //   Inport: '<Root>/msg_DeluxeButtons'
  //   S-Function (sfix_bitop): '<S73>/Bitwise Operator17'

  rtb_Compare_owwx = ((int32_T)((int32_T)msg_DeluxeButtons[3] & (int32_T)
    ((uint8_T)3U)) == (int32_T)((uint8_T)1U));

  // RelationalOperator: '<S126>/Compare' incorporates:
  //   Constant: '<S126>/Constant'
  //   Inport: '<Root>/msg_DeluxeButtons'
  //   S-Function (sfix_bitop): '<S73>/Bitwise Operator18'

  rtb_Compare_cfoo = ((int32_T)((int32_T)msg_DeluxeButtons[2] & (int32_T)
    ((uint8_T)12U)) == (int32_T)((uint8_T)4U));

  // RelationalOperator: '<S135>/Compare' incorporates:
  //   Constant: '<S135>/Constant'
  //   Inport: '<Root>/msg_DeluxeButtons'

  rtb_Compare_nyjq = (msg_DeluxeButtons[4] == MAIN_nGauges);

  // Chart: '<S73>/Delay'
  // Gateway: MX_Gtwy_Control/Inputs/Buttons/Delay
  if ((uint32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_bwgm < 63U) {
    MX_Gtwy_Control_DWork.temporalCounter_i1_bwgm = (uint8_T)(int32_T)((int32_T)
      MX_Gtwy_Control_DWork.temporalCounter_i1_bwgm + 1);
  }

  // During: MX_Gtwy_Control/Inputs/Buttons/Delay
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID0.is_active_c31_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/Buttons/Delay
    MX_Gtwy_Control_DWork.bitsForTID0.is_active_c31_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/Buttons/Delay
    // Transition: '<S141>:2'
    MX_Gtwy_Control_DWork.bitsForTID0.is_c31_MX_Gtwy_Control =
      MX_Gtwy_Cont_IN_Wait_for_active;

    // Entry 'Wait_for_active': '<S141>:1'
    MX_Gtwy_Control_B.out = false;
  } else {
    switch (MX_Gtwy_Control_DWork.bitsForTID0.is_c31_MX_Gtwy_Control) {
     case MX_Gtwy_Control_IN_Active:
      // During 'Active': '<S141>:5'
      if (!rtb_Compare_nyjq) {
        // Transition: '<S141>:6'
        MX_Gtwy_Control_DWork.bitsForTID0.is_c31_MX_Gtwy_Control =
          MX_Gtwy_Cont_IN_Wait_for_active;

        // Entry 'Wait_for_active': '<S141>:1'
        MX_Gtwy_Control_B.out = false;
      }
      break;

     case MX_Gtwy_Control_IN_Delay:
      // During 'Delay': '<S141>:3'
      if ((int32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_bwgm >= 50) {
        // Transition: '<S141>:7'
        MX_Gtwy_Control_DWork.bitsForTID0.is_c31_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_Active;

        // Entry 'Active': '<S141>:5'
        MX_Gtwy_Control_B.out = true;
      }
      break;

     default:
      // During 'Wait_for_active': '<S141>:1'
      if (rtb_Compare_nyjq) {
        // Transition: '<S141>:4'
        MX_Gtwy_Control_DWork.bitsForTID0.is_c31_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_Delay;
        MX_Gtwy_Control_DWork.temporalCounter_i1_bwgm = 0U;
      }
      break;
    }
  }

  // End of Chart: '<S73>/Delay'

  // Outport: '<Root>/cmd_TriggerRight' incorporates:
  //   Constant: '<S117>/Constant'
  //   Constant: '<S118>/Constant'
  //   Inport: '<Root>/msg_DeluxeButtons'
  //   Inport: '<Root>/state_DeluxeG5'
  //   Logic: '<S73>/Logical Operator16'
  //   RelationalOperator: '<S117>/Compare'
  //   RelationalOperator: '<S118>/Compare'
  //   RelationalOperator: '<S144>/FixPt Relational Operator'
  //   UnitDelay: '<S144>/Delay Input1'

  MX_Gtwy_Control_Y.cmd_TriggerRight = ((state_DeluxeG5 == NORMAL) && ((int32_T)
    rtb_Compare_jsuc < (int32_T)MX_Gtwy_Control_DWork.DelayInput1_DSTATE_hwpv) &&
    (msg_DeluxeButtons[4] == MAIN_nMachinePerformance));

  // Logic: '<S73>/Logical Operator17' incorporates:
  //   Constant: '<S119>/Constant'
  //   Constant: '<S121>/Constant'
  //   Inport: '<Root>/msg_DeluxeButtons'
  //   Inport: '<Root>/state_DeluxeG5'
  //   RelationalOperator: '<S119>/Compare'
  //   RelationalOperator: '<S121>/Compare'
  //   RelationalOperator: '<S145>/FixPt Relational Operator'
  //   UnitDelay: '<S145>/Delay Input1'

  button_AuxReleaseAck = ((state_DeluxeG5 == NORMAL) && ((int32_T)
    rtb_Compare_knon < (int32_T)MX_Gtwy_Control_DWork.DelayInput1_DSTATE_i4tz) &&
    (msg_DeluxeButtons[4] == MAIN_nAuxRelease));

  // Logic: '<S73>/Logical Operator18' incorporates:
  //   Constant: '<S122>/Constant'
  //   Constant: '<S124>/Constant'
  //   Inport: '<Root>/msg_DeluxeButtons'
  //   Inport: '<Root>/state_DeluxeG5'
  //   RelationalOperator: '<S122>/Compare'
  //   RelationalOperator: '<S124>/Compare'
  //   RelationalOperator: '<S142>/FixPt Relational Operator'
  //   UnitDelay: '<S142>/Delay Input1'

  button_AuxReleaseBack = ((state_DeluxeG5 == NORMAL) && ((int32_T)
    rtb_Compare_owwx < (int32_T)MX_Gtwy_Control_DWork.DelayInput1_DSTATE_dpor) &&
    (msg_DeluxeButtons[4] == MAIN_nAuxRelease));

  // Logic: '<S73>/Logical Operator19' incorporates:
  //   Constant: '<S125>/Constant'
  //   Constant: '<S127>/Constant'
  //   Inport: '<Root>/msg_DeluxeButtons'
  //   Inport: '<Root>/state_DeluxeG5'
  //   RelationalOperator: '<S125>/Compare'
  //   RelationalOperator: '<S127>/Compare'
  //   RelationalOperator: '<S143>/FixPt Relational Operator'
  //   UnitDelay: '<S143>/Delay Input1'

  button_AuxReleaseExit = ((state_DeluxeG5 == NORMAL) && ((int32_T)
    rtb_Compare_cfoo < (int32_T)MX_Gtwy_Control_DWork.DelayInput1_DSTATE_dpmt) &&
    (msg_DeluxeButtons[4] == MAIN_nAuxRelease));

  // Logic: '<S73>/Logical Operator3' incorporates:
  //   Constant: '<S136>/Constant'
  //   Constant: '<S137>/Constant'
  //   Constant: '<S73>/Constant1'
  //   Constant: '<S73>/Constant2'
  //   DataStoreRead: '<S73>/Data Store Read'
  //   Logic: '<S73>/Logical Operator22'
  //   RelationalOperator: '<S136>/Compare'
  //   RelationalOperator: '<S137>/Compare'

  rtb_Compare_nyjq = ((((int32_T)eeMirror.deluxe_G5 != 0) &&
                       (CONSTANT_DATA->DELUXE_GEN5_FUNCTION != NON_FUNCTIONAL)) ||
                      (CONSTANT_DATA->DELUXE_GEN5_5_FUNCTION != NON_FUNCTIONAL));

  // Logic: '<S73>/Logical Operator4' incorporates:
  //   Constant: '<S109>/Constant'
  //   Constant: '<S114>/Constant'
  //   Inport: '<Root>/msg_PanelButtonState'
  //   RelationalOperator: '<S109>/Compare'
  //   RelationalOperator: '<S114>/Compare'
  //   S-Function (sfix_bitop): '<S73>/Bitwise Operator1'

  button_Info = ((state_CommStdPanel == NORMAL) && ((int32_T)((int32_T)
    msg_PanelButtonState[0] & (int32_T)((uint8_T)192U)) == (int32_T)((uint8_T)
    64U)));

  // Switch: '<S73>/Switch' incorporates:
  //   Constant: '<S113>/Constant'
  //   Inport: '<Root>/msg_PanelButtonState'
  //   RelationalOperator: '<S113>/Compare'
  //   S-Function (sfix_bitop): '<S73>/Bitwise Operator'

  if (rtb_Compare_nyjq) {
    // Switch: '<S73>/Switch5' incorporates:
    //   Constant: '<S115>/Constant'
    //   Constant: '<S128>/Constant'
    //   Constant: '<S130>/Constant'
    //   Constant: '<S131>/Constant'
    //   Constant: '<S134>/Constant'
    //   Constant: '<S139>/Constant'
    //   Constant: '<S73>/Constant4'
    //   Inport: '<Root>/btn_JogShuttleLights'
    //   Inport: '<Root>/msg_DeluxeButtons'
    //   Logic: '<S73>/Logical Operator'
    //   Logic: '<S73>/Logical Operator23'
    //   Logic: '<S73>/Logical Operator24'
    //   RelationalOperator: '<S115>/Compare'
    //   RelationalOperator: '<S128>/Compare'
    //   RelationalOperator: '<S130>/Compare'
    //   RelationalOperator: '<S131>/Compare'
    //   RelationalOperator: '<S134>/Compare'
    //   RelationalOperator: '<S139>/Compare'
    //   S-Function (sfix_bitop): '<S73>/Bitwise Operator21'
    //   S-Function (sfix_bitop): '<S73>/Bitwise Operator3'

    if (CONSTANT_DATA->DELUXE_GEN5_5_FUNCTION != NON_FUNCTIONAL) {
      button_Lights = (btn_JogShuttleLights == ACTIVE);
    } else {
      button_Lights = ((((int32_T)((int32_T)msg_DeluxeButtons[3] & (int32_T)
        ((uint8_T)12U)) == (int32_T)((uint8_T)4U)) && (msg_DeluxeButtons[4] ==
        MAIN_nPanelLock)) || (((int32_T)((int32_T)msg_DeluxeButtons[0] &
        (int32_T)((uint8_T)3U)) == (int32_T)((uint8_T)1U)) &&
        (msg_DeluxeButtons[4] == MAIN_nGauges)));
    }

    // End of Switch: '<S73>/Switch5'
  } else {
    button_Lights = ((int32_T)((int32_T)msg_PanelButtonState[0] & (int32_T)
      ((uint8_T)3U)) == (int32_T)((uint8_T)1U));
  }

  // End of Switch: '<S73>/Switch'

  // Switch: '<S73>/Switch1'
  if (rtb_Compare_nyjq) {
    // Switch: '<S73>/Switch4' incorporates:
    //   Constant: '<S138>/Constant'
    //   Constant: '<S73>/Constant3'
    //   Inport: '<Root>/state_DeluxeG5'
    //   RelationalOperator: '<S138>/Compare'

    if (CONSTANT_DATA->DELUXE_GEN5_5_FUNCTION != NON_FUNCTIONAL) {
      state_PanelButtons = state_CommJogShuttle;
    } else {
      state_PanelButtons = state_DeluxeG5;
    }

    // End of Switch: '<S73>/Switch4'
  } else {
    state_PanelButtons = state_CommStdPanel;
  }

  // End of Switch: '<S73>/Switch1'

  // Switch: '<S73>/Switch2' incorporates:
  //   Constant: '<S129>/Constant'
  //   Constant: '<S133>/Constant'
  //   Inport: '<Root>/msg_PanelButtonState'
  //   Logic: '<S73>/Logical Operator1'
  //   RelationalOperator: '<S129>/Compare'
  //   RelationalOperator: '<S133>/Compare'
  //   S-Function (sfix_bitop): '<S73>/Bitwise Operator5'

  if (rtb_Compare_nyjq) {
    button_AutoIdle = ((rtb_Compare_cc2i_tmp == (int32_T)((uint8_T)16U)) &&
                       MX_Gtwy_Control_B.out);
  } else {
    button_AutoIdle = ((int32_T)((int32_T)msg_PanelButtonState[0] & (int32_T)
      ((uint8_T)12U)) == (int32_T)((uint8_T)4U));
  }

  // Switch: '<S73>/Switch6' incorporates:
  //   Constant: '<S110>/Constant'
  //   Constant: '<S140>/Constant'
  //   Constant: '<S73>/Constant5'
  //   Inport: '<Root>/btn_JogShuttleAux'
  //   RelationalOperator: '<S110>/Compare'
  //   RelationalOperator: '<S140>/Compare'
  //   Switch: '<S73>/Switch3'

  if (CONSTANT_DATA->DELUXE_GEN5_5_FUNCTION != NON_FUNCTIONAL) {
    button_Aux = (btn_JogShuttleAux == ACTIVE);
  } else if (rtb_Compare_nyjq) {
    // Switch: '<S73>/Switch3' incorporates:
    //   Constant: '<S112>/Constant'
    //   Constant: '<S132>/Constant'
    //   Inport: '<Root>/msg_DeluxeButtons'
    //   Logic: '<S73>/Logical Operator2'
    //   RelationalOperator: '<S112>/Compare'
    //   RelationalOperator: '<S132>/Compare'
    //   S-Function (sfix_bitop): '<S73>/Bitwise Operator8'

    button_Aux = (((int32_T)((int32_T)msg_DeluxeButtons[1] & (int32_T)((uint8_T)
      12U)) == (int32_T)((uint8_T)4U)) && (msg_DeluxeButtons[4] == MAIN_nGauges));
  } else {
    // Switch: '<S73>/Switch3' incorporates:
    //   Constant: '<S111>/Constant'
    //   Inport: '<Root>/msg_PanelButtonState'
    //   RelationalOperator: '<S111>/Compare'
    //   S-Function (sfix_bitop): '<S73>/Bitwise Operator7'

    button_Aux = ((int32_T)((int32_T)msg_PanelButtonState[0] & (int32_T)
      ((uint8_T)48U)) == (int32_T)((uint8_T)16U));
  }

  // End of Switch: '<S73>/Switch6'

  // Update for UnitDelay: '<S142>/Delay Input1'
  MX_Gtwy_Control_DWork.DelayInput1_DSTATE_dpor = rtb_Compare_owwx;

  // Update for UnitDelay: '<S143>/Delay Input1'
  MX_Gtwy_Control_DWork.DelayInput1_DSTATE_dpmt = rtb_Compare_cfoo;

  // Update for UnitDelay: '<S144>/Delay Input1'
  MX_Gtwy_Control_DWork.DelayInput1_DSTATE_hwpv = rtb_Compare_jsuc;

  // Update for UnitDelay: '<S145>/Delay Input1'
  MX_Gtwy_Control_DWork.DelayInput1_DSTATE_i4tz = rtb_Compare_knon;
}

// System initialize for atomic system: '<S3>/Console_Sensor'
void MX_Gtwy_Con_Console_Sensor_Init(void)
{
  // SystemInitialize for Atomic SubSystem: '<S74>/LP_Filter'
  MX_Gtwy_Control_LP_Filter_Init(&MX_Gtwy_Control_DWork.LP_Filter);

  // End of SystemInitialize for SubSystem: '<S74>/LP_Filter'

  // SystemInitialize for Chart: '<S74>/Console_Sensor'
  MX_Gtwy_Control_DWork.bitsForTID0.is_STATE_ozbz =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_mykr =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
  MX_Gtwy_Control_DWork.bitsForTID0.is_ABSENT = MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
  MX_Gtwy_Control_DWork.bitsForTID0.is_PRESENT = MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
  MX_Gtwy_Control_DWork.bitsForTID0.is_OORH_bn1l =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
  MX_Gtwy_Control_DWork.bitsForTID0.is_OORL_jary =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
  MX_Gtwy_Control_DWork.bitsForTID0.is_active_c6_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_c6_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
  MX_Gtwy_Control_DWork.debounceCount_kb5p = 0U;
  state_Console = 0U;
}

// Output and update for atomic system: '<S3>/Console_Sensor'
void MX_Gtwy_Control_Console_Sensor(void)
{
  uint16_T rtb_Saturation;
  int16_T rtb_DataTypeConversion;
  int16_T rtb_Sum1;

  // Outputs for Atomic SubSystem: '<S74>/Ratiometric_Converter'

  // Inport: '<Root>/ain_Console' incorporates:
  //   Inport: '<Root>/ain_SensorSupply2'

  MX_Gtwy_C_Ratiometric_Converter(ain_Console, ain_SensorSupply2,
    &rtb_Saturation, ((uint16_T)1000U));

  // End of Outputs for SubSystem: '<S74>/Ratiometric_Converter'

  // DataTypeConversion: '<S74>/Data Type Conversion'
  rtb_DataTypeConversion = (int16_T)rtb_Saturation;

  // Outputs for Atomic SubSystem: '<S74>/LP_Filter'
  MX_Gtwy_Control_LP_Filter(rtb_DataTypeConversion, &rtb_Sum1,
    &MX_Gtwy_Control_DWork.LP_Filter);

  // End of Outputs for SubSystem: '<S74>/LP_Filter'

  // DataTypeConversion: '<S74>/Data Type Conversion1'
  rm_Console = (uint16_T)(int32_T)((int32_T)rtb_Sum1 >> 5);

  // Chart: '<S74>/Console_Sensor' incorporates:
  //   Inport: '<Root>/ain_Console'
  //   Inport: '<Root>/flag_InitEERead'
  //   Inport: '<Root>/state_System'

  // Gateway: MX_Gtwy_Control/Inputs/Console_Sensor/Console_Sensor
  // During: MX_Gtwy_Control/Inputs/Console_Sensor/Console_Sensor
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID0.is_active_c6_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/Console_Sensor/Console_Sensor
    MX_Gtwy_Control_DWork.bitsForTID0.is_active_c6_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/Console_Sensor/Console_Sensor
    // Transition: '<S146>:19'
    MX_Gtwy_Control_DWork.bitsForTID0.is_c6_MX_Gtwy_Control =
      MX_Gtwy__IN_NON_FUNCTIONAL_os4i;

    // Entry 'NON_FUNCTIONAL': '<S146>:4'
    state_Console = NON_FUNCTIONAL;
  } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_c6_MX_Gtwy_Control ==
             MX_Gtwy__IN_NON_FUNCTIONAL_os4i) {
    state_Console = NON_FUNCTIONAL;

    // During 'NON_FUNCTIONAL': '<S146>:4'
    if ((CONSTANT_DATA->CONSOLE_FUNCTION != NON_FUNCTIONAL) && (state_System ==
         SYS_NORMAL) && flag_InitEERead) {
      // Transition: '<S146>:20'
      MX_Gtwy_Control_DWork.bitsForTID0.is_c6_MX_Gtwy_Control =
        MX_Gtwy_Control_IN_STATE;

      // Entry Internal 'STATE': '<S146>:15'
      // Transition: '<S146>:34'
      MX_Gtwy_Control_DWork.bitsForTID0.is_STATE_ozbz =
        MX_Gtwy_Control_IN_NORMAL_obpf;

      // Entry Internal 'NORMAL': '<S146>:3'
      // Transition: '<S146>:28'
      MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_mykr =
        MX_Gtwy_Control_IN_ABSENT;

      // Entry Internal 'ABSENT': '<S146>:13'
      // Transition: '<S146>:18'
      MX_Gtwy_Control_DWork.bitsForTID0.is_ABSENT =
        MX_Gtwy_Cont_IN_DEBOUNCE_ABSENT;

      // Entry 'DEBOUNCE_ABSENT': '<S146>:6'
      MX_Gtwy_Control_DWork.debounceCount_kb5p = 0U;
    }
  } else {
    // During 'STATE': '<S146>:15'
    if (state_System != SYS_NORMAL) {
      // Transition: '<S146>:31'
      // Exit Internal 'STATE': '<S146>:15'
      // Exit Internal 'NORMAL': '<S146>:3'
      // Exit Internal 'ABSENT': '<S146>:13'
      MX_Gtwy_Control_DWork.bitsForTID0.is_ABSENT =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
      MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_mykr =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;

      // Exit Internal 'PRESENT': '<S146>:14'
      MX_Gtwy_Control_DWork.bitsForTID0.is_PRESENT =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
      MX_Gtwy_Control_DWork.bitsForTID0.is_STATE_ozbz =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;

      // Exit Internal 'OORH': '<S146>:11'
      MX_Gtwy_Control_DWork.bitsForTID0.is_OORH_bn1l =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;

      // Exit Internal 'OORL': '<S146>:12'
      MX_Gtwy_Control_DWork.bitsForTID0.is_OORL_jary =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
      MX_Gtwy_Control_DWork.bitsForTID0.is_c6_MX_Gtwy_Control =
        MX_Gtwy__IN_NON_FUNCTIONAL_os4i;

      // Entry 'NON_FUNCTIONAL': '<S146>:4'
      state_Console = NON_FUNCTIONAL;
    } else {
      switch (MX_Gtwy_Control_DWork.bitsForTID0.is_STATE_ozbz) {
       case MX_Gtwy_Control_IN_NORMAL_obpf:
        // During 'NORMAL': '<S146>:3'
        if ((ain_Console <= CONSTANT_DATA->CONSOLE_OORL) &&
            (MX_Gtwy_Control_B.RateTransition4_nlao == NORMAL)) {
          // Transition: '<S146>:29'
          // Exit Internal 'NORMAL': '<S146>:3'
          // Exit Internal 'ABSENT': '<S146>:13'
          MX_Gtwy_Control_DWork.bitsForTID0.is_ABSENT =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_mykr =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;

          // Exit Internal 'PRESENT': '<S146>:14'
          MX_Gtwy_Control_DWork.bitsForTID0.is_PRESENT =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
          MX_Gtwy_Control_DWork.bitsForTID0.is_STATE_ozbz =
            MX_Gtwy_Control_IN_OORL_lgpm;

          // Entry Internal 'OORL': '<S146>:12'
          // Transition: '<S146>:17'
          MX_Gtwy_Control_DWork.bitsForTID0.is_OORL_jary =
            MX_Gtwy_Contro_IN_DEBOUNCE_d4yu;

          // Entry 'DEBOUNCE': '<S146>:8'
          MX_Gtwy_Control_DWork.debounceCount_kb5p = 0U;
        } else if ((ain_Console >= CONSTANT_DATA->CONSOLE_OORH) &&
                   (MX_Gtwy_Control_B.RateTransition4_nlao == NORMAL)) {
          // Transition: '<S146>:27'
          // Exit Internal 'NORMAL': '<S146>:3'
          // Exit Internal 'ABSENT': '<S146>:13'
          MX_Gtwy_Control_DWork.bitsForTID0.is_ABSENT =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_mykr =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;

          // Exit Internal 'PRESENT': '<S146>:14'
          MX_Gtwy_Control_DWork.bitsForTID0.is_PRESENT =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
          MX_Gtwy_Control_DWork.bitsForTID0.is_STATE_ozbz =
            MX_Gtwy_Control_IN_OORH_gasm;

          // Entry Internal 'OORH': '<S146>:11'
          // Transition: '<S146>:26'
          MX_Gtwy_Control_DWork.bitsForTID0.is_OORH_bn1l =
            MX_Gtwy_Contro_IN_DEBOUNCE_d4yu;

          // Entry 'DEBOUNCE': '<S146>:7'
          MX_Gtwy_Control_DWork.debounceCount_kb5p = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_mykr ==
                   MX_Gtwy_Control_IN_ABSENT) {
          // During 'ABSENT': '<S146>:13'
          if ((rm_Console >= CONSTANT_DATA->CONSOLE_PRESENT_LOW) && (rm_Console <=
               CONSTANT_DATA->CONSOLE_PRESENT_HIGH) &&
              (MX_Gtwy_Control_B.RateTransition4_nlao == NORMAL) &&
              (MX_Gtwy_Control_B.RateTransition62 == NORMAL) &&
              (state_MachineLock == INACTIVE)) {
            // Transition: '<S146>:16'
            // Exit Internal 'ABSENT': '<S146>:13'
            MX_Gtwy_Control_DWork.bitsForTID0.is_ABSENT =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_mykr =
              MX_Gtwy_Control_IN_PRESENT;

            // Entry Internal 'PRESENT': '<S146>:14'
            // Transition: '<S146>:23'
            MX_Gtwy_Control_DWork.bitsForTID0.is_PRESENT =
              MX_Gtwy_Con_IN_DEBOUNCE_PRESENT;

            // Entry 'DEBOUNCE_PRESENT': '<S146>:5'
            MX_Gtwy_Control_DWork.debounceCount_kb5p = 0U;
          } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_ABSENT ==
                     MX_Gtwy_Control_IN_ABSENT) {
            state_Console = INACTIVE;

            // During 'ABSENT': '<S146>:2'
          } else {
            // During 'DEBOUNCE_ABSENT': '<S146>:6'
            if ((MX_Gtwy_Control_DWork.debounceCount_kb5p >=
                 CONSTANT_DATA->CONSOLE_DEBOUNCE_ABSENT) || (state_Console ==
                 INACTIVE)) {
              // Transition: '<S146>:24'
              MX_Gtwy_Control_DWork.bitsForTID0.is_ABSENT =
                MX_Gtwy_Control_IN_ABSENT;

              // Entry 'ABSENT': '<S146>:2'
              state_Console = INACTIVE;
              SendMsg_BICSControl_Now();
            } else {
              MX_Gtwy_Control_DWork.debounceCount_kb5p = (uint16_T)(int32_T)
                ((int32_T)MX_Gtwy_Control_DWork.debounceCount_kb5p + 1);
            }
          }
        } else {
          // During 'PRESENT': '<S146>:14'
          if ((rm_Console < CONSTANT_DATA->CONSOLE_PRESENT_LOW) || (rm_Console >
               CONSTANT_DATA->CONSOLE_PRESENT_HIGH) ||
              (MX_Gtwy_Control_B.RateTransition4_nlao != NORMAL) ||
              (MX_Gtwy_Control_B.RateTransition62 != NORMAL) ||
              (state_MachineLock == ACTIVE)) {
            // Transition: '<S146>:21'
            // Exit Internal 'PRESENT': '<S146>:14'
            MX_Gtwy_Control_DWork.bitsForTID0.is_PRESENT =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_mykr =
              MX_Gtwy_Control_IN_ABSENT;

            // Entry Internal 'ABSENT': '<S146>:13'
            // Transition: '<S146>:18'
            MX_Gtwy_Control_DWork.bitsForTID0.is_ABSENT =
              MX_Gtwy_Cont_IN_DEBOUNCE_ABSENT;

            // Entry 'DEBOUNCE_ABSENT': '<S146>:6'
            MX_Gtwy_Control_DWork.debounceCount_kb5p = 0U;
          } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_PRESENT ==
                     MX_Gtwy_Con_IN_DEBOUNCE_PRESENT) {
            // During 'DEBOUNCE_PRESENT': '<S146>:5'
            if ((MX_Gtwy_Control_DWork.debounceCount_kb5p >=
                 CONSTANT_DATA->CONSOLE_DEBOUNCE_PRESENT) || (state_Console ==
                 ACTIVE)) {
              // Transition: '<S146>:22'
              MX_Gtwy_Control_DWork.bitsForTID0.is_PRESENT =
                MX_Gtwy_Control_IN_PRESENT;

              // Entry 'PRESENT': '<S146>:1'
              state_Console = ACTIVE;
              SendMsg_BICSControl_Now();
            } else {
              MX_Gtwy_Control_DWork.debounceCount_kb5p = (uint16_T)(int32_T)
                ((int32_T)MX_Gtwy_Control_DWork.debounceCount_kb5p + 1);
            }
          } else {
            state_Console = ACTIVE;

            // During 'PRESENT': '<S146>:1'
          }
        }
        break;

       case MX_Gtwy_Control_IN_OORH_gasm:
        // During 'OORH': '<S146>:11'
        if (((ain_Console < CONSTANT_DATA->CONSOLE_OORH) && (state_Console !=
              OORH)) || (MX_Gtwy_Control_B.RateTransition4_nlao != NORMAL)) {
          // Transition: '<S146>:32'
          // Exit Internal 'OORH': '<S146>:11'
          MX_Gtwy_Control_DWork.bitsForTID0.is_OORH_bn1l =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
          MX_Gtwy_Control_DWork.bitsForTID0.is_STATE_ozbz =
            MX_Gtwy_Control_IN_NORMAL_obpf;

          // Entry Internal 'NORMAL': '<S146>:3'
          // Transition: '<S146>:28'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_mykr =
            MX_Gtwy_Control_IN_ABSENT;

          // Entry Internal 'ABSENT': '<S146>:13'
          // Transition: '<S146>:18'
          MX_Gtwy_Control_DWork.bitsForTID0.is_ABSENT =
            MX_Gtwy_Cont_IN_DEBOUNCE_ABSENT;

          // Entry 'DEBOUNCE_ABSENT': '<S146>:6'
          MX_Gtwy_Control_DWork.debounceCount_kb5p = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_OORH_bn1l ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_d4yu) {
          // During 'DEBOUNCE': '<S146>:7'
          if (MX_Gtwy_Control_DWork.debounceCount_kb5p >=
              CONSTANT_DATA->CONSOLE_DEBOUNCE_OORH) {
            // Transition: '<S146>:25'
            MX_Gtwy_Control_DWork.bitsForTID0.is_OORH_bn1l =
              MX_Gtwy_Control_IN_OORH_gasm;

            // Entry 'OORH': '<S146>:9'
            state_Console = OORH;
            SendMsg_BICSControl_Now();
          } else {
            MX_Gtwy_Control_DWork.debounceCount_kb5p = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_kb5p + 1);
          }
        } else {
          state_Console = OORH;

          // During 'OORH': '<S146>:9'
        }
        break;

       default:
        // During 'OORL': '<S146>:12'
        if (((ain_Console > CONSTANT_DATA->CONSOLE_OORL) && (state_Console !=
              OORL)) || (MX_Gtwy_Control_B.RateTransition4_nlao != NORMAL)) {
          // Transition: '<S146>:33'
          // Exit Internal 'OORL': '<S146>:12'
          MX_Gtwy_Control_DWork.bitsForTID0.is_OORL_jary =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_pa2t;
          MX_Gtwy_Control_DWork.bitsForTID0.is_STATE_ozbz =
            MX_Gtwy_Control_IN_NORMAL_obpf;

          // Entry Internal 'NORMAL': '<S146>:3'
          // Transition: '<S146>:28'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_mykr =
            MX_Gtwy_Control_IN_ABSENT;

          // Entry Internal 'ABSENT': '<S146>:13'
          // Transition: '<S146>:18'
          MX_Gtwy_Control_DWork.bitsForTID0.is_ABSENT =
            MX_Gtwy_Cont_IN_DEBOUNCE_ABSENT;

          // Entry 'DEBOUNCE_ABSENT': '<S146>:6'
          MX_Gtwy_Control_DWork.debounceCount_kb5p = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_OORL_jary ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_d4yu) {
          // During 'DEBOUNCE': '<S146>:8'
          if (MX_Gtwy_Control_DWork.debounceCount_kb5p >=
              CONSTANT_DATA->CONSOLE_DEBOUNCE_OORL) {
            // Transition: '<S146>:30'
            MX_Gtwy_Control_DWork.bitsForTID0.is_OORL_jary =
              MX_Gtwy_Control_IN_OORL_lgpmz;

            // Entry 'OORL': '<S146>:10'
            state_Console = OORL;
            SendMsg_BICSControl_Now();
          } else {
            MX_Gtwy_Control_DWork.debounceCount_kb5p = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_kb5p + 1);
          }
        } else {
          state_Console = OORL;

          // During 'OORL': '<S146>:10'
        }
        break;
      }
    }
  }

  // End of Chart: '<S74>/Console_Sensor'
}

//
//  Output and update for atomic system:
//     '<S75>/Truth_Table'
//     '<S83>/Truth_Table'

void MX_Gtwy_Control_Truth_Table(uint8_T rtu_state, uint8_T *rty_gauge)
{
  // Truth Table Function 'MX_Gtwy_Control/Inputs/ECT/Truth_Table': '<S153>:1'
  //  OORH
  // Condition '#1': '<S153>:1:9'
  //  OORL
  // Condition '#2': '<S153>:1:13'
  if ((int32_T)rtu_state == 21) {
    // Decision 'D1': '<S153>:1:15'
    //  Gauge max
    // Action '3': '<S153>:1:39'
    *rty_gauge = 3U;
  } else if ((int32_T)rtu_state == 22) {
    // Decision 'D2': '<S153>:1:17'
    //  Gauge min
    // Action '1': '<S153>:1:27'
    *rty_gauge = 1U;
  } else {
    // Decision 'D3': '<S153>:1:19'
    //  Default
    //  Gauge current
    // Action '2': '<S153>:1:33'
    *rty_gauge = 2U;
  }
}

// Function for Chart: '<S75>/ErrorDetection'
static void MX_Gtwy_Control_NORMAL(void)
{
  // During 'NORMAL': '<S152>:3'
  if ((state_SensorSupply1 != NORMAL) || (MX_Gtwy_Control_B.RateTransition14 !=
       SYS_NORMAL)) {
    // Transition: '<S152>:52'
    // Exit Internal 'NORMAL': '<S152>:3'
    // Exit Internal 'COLD': '<S152>:16'
    MX_Gtwy_Control_DWork.bitsForTID1.is_COLD_hul1 =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
    MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_kq33 =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;

    // Exit Internal 'EXTREMELY_HIGH': '<S152>:7'
    MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pg0e =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;

    // Exit Internal 'HIGH': '<S152>:10'
    MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_h45q =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;

    // Exit Internal 'NORMAL': '<S152>:13'
    MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_i3pz =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;

    // Exit Internal 'SHUTDOWN': '<S152>:4'
    MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_gnmb =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
    MX_Gtwy_Control_DWork.bitsForTID1.is_STATE_n0tr =
      MX_Gtwy_IN_NON_FUNCTIONAL_hnhyi;

    // Entry 'NON_FUNCTIONAL': '<S152>:2'
    state_ECT = NORMAL;
  } else if ((rm_ECT <= CONSTANT_DATA->ECT_OORL) && (state_ECT != SHUTDOWN)) {
    // Transition: '<S152>:56'
    // Exit Internal 'NORMAL': '<S152>:3'
    // Exit Internal 'COLD': '<S152>:16'
    MX_Gtwy_Control_DWork.bitsForTID1.is_COLD_hul1 =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
    MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_kq33 =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;

    // Exit Internal 'EXTREMELY_HIGH': '<S152>:7'
    MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pg0e =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;

    // Exit Internal 'HIGH': '<S152>:10'
    MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_h45q =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;

    // Exit Internal 'NORMAL': '<S152>:13'
    MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_i3pz =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;

    // Exit Internal 'SHUTDOWN': '<S152>:4'
    MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_gnmb =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
    MX_Gtwy_Control_DWork.bitsForTID1.is_STATE_n0tr =
      MX_Gtwy_Con_IN_OUT_OF_RANGE_LOW;

    // Entry Internal 'OUT_OF_RANGE_LOW': '<S152>:22'
    // Transition: '<S152>:49'
    MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_LOW_kqn4 =
      MX_Gtwy_Contro_IN_DEBOUNCE_nypx;

    // Entry 'DEBOUNCE': '<S152>:23'
    MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
  } else if ((rm_ECT >= CONSTANT_DATA->ECT_OORH) && (state_ECT != SHUTDOWN)) {
    // Transition: '<S152>:54'
    // Exit Internal 'NORMAL': '<S152>:3'
    // Exit Internal 'COLD': '<S152>:16'
    MX_Gtwy_Control_DWork.bitsForTID1.is_COLD_hul1 =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
    MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_kq33 =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;

    // Exit Internal 'EXTREMELY_HIGH': '<S152>:7'
    MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pg0e =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;

    // Exit Internal 'HIGH': '<S152>:10'
    MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_h45q =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;

    // Exit Internal 'NORMAL': '<S152>:13'
    MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_i3pz =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;

    // Exit Internal 'SHUTDOWN': '<S152>:4'
    MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_gnmb =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
    MX_Gtwy_Control_DWork.bitsForTID1.is_STATE_n0tr =
      MX_Gtwy_Co_IN_OUT_OF_RANGE_HIGH;

    // Entry Internal 'OUT_OF_RANGE_HIGH': '<S152>:19'
    // Transition: '<S152>:47'
    MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_HIGH_ivid =
      MX_Gtwy_Contro_IN_DEBOUNCE_nypx;

    // Entry 'DEBOUNCE': '<S152>:20'
    MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
  } else {
    switch (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_kq33) {
     case MX_Gtwy_Control_IN_COLD:
      // During 'COLD': '<S152>:16'
      if (((int32_T)MX_Gtwy_Control_B.flt_ECT_in > (int32_T)((int32_T)
            CONSTANT_DATA->ECT_COLD + (int32_T)
            CONSTANT_DATA->TEMPERATURE_HYSTERESIS)) ||
          (MX_Gtwy_Control_B.RateTransition59 != ENGINE_RUNNING)) {
        // Transition: '<S152>:36'
        // Exit Internal 'COLD': '<S152>:16'
        MX_Gtwy_Control_DWork.bitsForTID1.is_COLD_hul1 =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_kq33 =
          MX_Gtwy_Control_IN_NORMAL_kyfev;

        // Entry Internal 'NORMAL': '<S152>:13'
        // Transition: '<S152>:43'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_i3pz =
          MX_Gtwy_Cont_IN_DEBOUNCE_NORMAL;

        // Entry 'DEBOUNCE_NORMAL': '<S152>:14'
        MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_COLD_hul1 ==
                 MX_Gtwy_Control_IN_COLD) {
        state_ECT = COLD;

        // During 'COLD': '<S152>:17'
      } else {
        // During 'DEBOUNCE': '<S152>:18'
        if ((MX_Gtwy_Control_DWork.debounceCount_ev4y >=
             CONSTANT_DATA->ECT_DEBOUNCE_COLD) || (state_ECT == COLD)) {
          // Transition: '<S152>:46'
          MX_Gtwy_Control_DWork.bitsForTID1.is_COLD_hul1 =
            MX_Gtwy_Control_IN_COLD;

          // Entry 'COLD': '<S152>:17'
          state_ECT = COLD;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_ev4y = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ev4y + 1);
        }
      }
      break;

     case MX_Gtwy_Contr_IN_EXTREMELY_HIGH:
      // During 'EXTREMELY_HIGH': '<S152>:7'
      if (((int32_T)MX_Gtwy_Control_B.flt_ECT_in < (int32_T)((int32_T)
            CONSTANT_DATA->ECT_EXTREMELY_HIGH - (int32_T)
            CONSTANT_DATA->TEMPERATURE_HYSTERESIS)) ||
          (MX_Gtwy_Control_B.RateTransition59 != ENGINE_RUNNING)) {
        // Transition: '<S152>:31'
        // Exit Internal 'EXTREMELY_HIGH': '<S152>:7'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pg0e =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_kq33 =
          MX_Gtwy_Control_IN_HIGH;

        // Entry Internal 'HIGH': '<S152>:10'
        // Transition: '<S152>:41'
        MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_h45q =
          MX_Gtwy_Contro_IN_DEBOUNCE_nypx;

        // Entry 'DEBOUNCE': '<S152>:12'
        MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
      } else if ((CONSTANT_DATA->SHUTDOWN_FUNCTION != NON_FUNCTIONAL) &&
                 (state_ECT == EXTREMELY_HIGH)) {
        // Transition: '<S152>:28'
        // Exit Internal 'EXTREMELY_HIGH': '<S152>:7'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pg0e =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_kq33 =
          MX_Gtwy_Control_IN_SHUTDOWN;

        // Entry Internal 'SHUTDOWN': '<S152>:4'
        // Transition: '<S152>:37'
        MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_gnmb =
          MX_Gtwy_Contro_IN_DEBOUNCE_nypx;

        // Entry 'DEBOUNCE': '<S152>:6'
        MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pg0e ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_nypx) {
        // During 'DEBOUNCE': '<S152>:8'
        if ((MX_Gtwy_Control_DWork.debounceCount_ev4y >=
             CONSTANT_DATA->ECT_DEBOUNCE_EXTREMELY_HIGH) || (state_ECT ==
             EXTREMELY_HIGH)) {
          // Transition: '<S152>:40'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pg0e =
            MX_Gtwy_Contr_IN_EXTREMELY_HIGH;

          // Entry 'EXTREMELY_HIGH': '<S152>:9'
          state_ECT = EXTREMELY_HIGH;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_ev4y = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ev4y + 1);
        }
      } else {
        state_ECT = EXTREMELY_HIGH;

        // During 'EXTREMELY_HIGH': '<S152>:9'
      }
      break;

     case MX_Gtwy_Control_IN_HIGH:
      // During 'HIGH': '<S152>:10'
      if (((int32_T)MX_Gtwy_Control_B.flt_ECT_in < (int32_T)((int32_T)
            CONSTANT_DATA->ECT_HIGH - (int32_T)
            CONSTANT_DATA->TEMPERATURE_HYSTERESIS)) ||
          (MX_Gtwy_Control_B.RateTransition59 != ENGINE_RUNNING)) {
        // Transition: '<S152>:32'
        // Exit Internal 'HIGH': '<S152>:10'
        MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_h45q =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_kq33 =
          MX_Gtwy_Control_IN_NORMAL_kyfev;

        // Entry Internal 'NORMAL': '<S152>:13'
        // Transition: '<S152>:43'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_i3pz =
          MX_Gtwy_Cont_IN_DEBOUNCE_NORMAL;

        // Entry 'DEBOUNCE_NORMAL': '<S152>:14'
        MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
      } else if (MX_Gtwy_Control_B.flt_ECT_in >=
                 CONSTANT_DATA->ECT_EXTREMELY_HIGH) {
        // Transition: '<S152>:30'
        // Exit Internal 'HIGH': '<S152>:10'
        MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_h45q =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_kq33 =
          MX_Gtwy_Contr_IN_EXTREMELY_HIGH;

        // Entry Internal 'EXTREMELY_HIGH': '<S152>:7'
        // Transition: '<S152>:39'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pg0e =
          MX_Gtwy_Contro_IN_DEBOUNCE_nypx;

        // Entry 'DEBOUNCE': '<S152>:8'
        MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_h45q ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_nypx) {
        // During 'DEBOUNCE': '<S152>:12'
        if ((MX_Gtwy_Control_DWork.debounceCount_ev4y >=
             CONSTANT_DATA->ECT_DEBOUNCE_HIGH) || (state_ECT == HIGH)) {
          // Transition: '<S152>:42'
          MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_h45q =
            MX_Gtwy_Control_IN_HIGH_hpoa;

          // Entry 'HIGH': '<S152>:11'
          state_ECT = HIGH;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_ev4y = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ev4y + 1);
        }
      } else {
        state_ECT = HIGH;

        // During 'HIGH': '<S152>:11'
      }
      break;

     case MX_Gtwy_Control_IN_NORMAL_kyfev:
      // During 'NORMAL': '<S152>:13'
      if ((MX_Gtwy_Control_B.flt_ECT_in <= CONSTANT_DATA->ECT_COLD) &&
          (MX_Gtwy_Control_B.RateTransition59 == ENGINE_RUNNING)) {
        // Transition: '<S152>:35'
        // Exit Internal 'NORMAL': '<S152>:13'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_i3pz =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_kq33 =
          MX_Gtwy_Control_IN_COLD;

        // Entry Internal 'COLD': '<S152>:16'
        // Transition: '<S152>:45'
        MX_Gtwy_Control_DWork.bitsForTID1.is_COLD_hul1 =
          MX_Gtwy_Contr_IN_DEBOUNCE_nypxw;

        // Entry 'DEBOUNCE': '<S152>:18'
        MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
      } else if ((MX_Gtwy_Control_B.flt_ECT_in >= CONSTANT_DATA->ECT_HIGH) &&
                 (MX_Gtwy_Control_B.RateTransition59 == ENGINE_RUNNING)) {
        // Transition: '<S152>:33'
        // Exit Internal 'NORMAL': '<S152>:13'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_i3pz =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_kq33 =
          MX_Gtwy_Control_IN_HIGH;

        // Entry Internal 'HIGH': '<S152>:10'
        // Transition: '<S152>:41'
        MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_h45q =
          MX_Gtwy_Contro_IN_DEBOUNCE_nypx;

        // Entry 'DEBOUNCE': '<S152>:12'
        MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_i3pz ==
                 MX_Gtwy_Cont_IN_DEBOUNCE_NORMAL) {
        // During 'DEBOUNCE_NORMAL': '<S152>:14'
        if ((MX_Gtwy_Control_DWork.debounceCount_ev4y >=
             CONSTANT_DATA->ECT_DEBOUNCE_NORMAL) || (state_ECT == NORMAL)) {
          // Transition: '<S152>:44'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_i3pz =
            MX_Gtwy_Control_IN_NORMAL_kyfe;

          // Entry 'NORMAL': '<S152>:15'
          state_ECT = NORMAL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_ev4y = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ev4y + 1);
        }
      } else {
        state_ECT = NORMAL;

        // During 'NORMAL': '<S152>:15'
      }
      break;

     default:
      // During 'SHUTDOWN': '<S152>:4'
      if ((state_ECT != SHUTDOWN) && (((int32_T)MX_Gtwy_Control_B.flt_ECT_in <
            (int32_T)((int32_T)CONSTANT_DATA->ECT_EXTREMELY_HIGH - (int32_T)
                      CONSTANT_DATA->TEMPERATURE_HYSTERESIS)) ||
           (MX_Gtwy_Control_B.RateTransition59 != ENGINE_RUNNING))) {
        // Transition: '<S152>:29'
        // Exit Internal 'SHUTDOWN': '<S152>:4'
        MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_gnmb =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_kq33 =
          MX_Gtwy_Contr_IN_EXTREMELY_HIGH;

        // Entry Internal 'EXTREMELY_HIGH': '<S152>:7'
        // Transition: '<S152>:39'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pg0e =
          MX_Gtwy_Contro_IN_DEBOUNCE_nypx;

        // Entry 'DEBOUNCE': '<S152>:8'
        MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_gnmb ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_nypx) {
        // During 'DEBOUNCE': '<S152>:6'
        if (MX_Gtwy_Control_DWork.debounceCount_ev4y >=
            CONSTANT_DATA->ECT_DEBOUNCE_SHUTDOWN) {
          // Transition: '<S152>:38'
          MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_gnmb =
            MX_Gtwy_Contro_IN_SHUTDOWN_nw1j;

          // Entry 'SHUTDOWN': '<S152>:5'
          state_ECT = SHUTDOWN;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_ev4y = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ev4y + 1);
        }
      } else {
        state_ECT = SHUTDOWN;

        // During 'SHUTDOWN': '<S152>:5'
      }
      break;
    }
  }
}

// System initialize for atomic system: '<S3>/ECT'
void MX_Gtwy_Control_ECT_Init(void)
{
  uint16_T rtb_fltValue_out;

  // SystemInitialize for Enabled SubSystem: '<S75>/ConvertToRatio'

  // SystemInitialize for Atomic SubSystem: '<S151>/LP_Filter'
  MX_Gtwy_Con_LP_Filter_as2q_Init(&MX_Gtwy_Control_DWork.LP_Filter_dijo);

  // End of SystemInitialize for SubSystem: '<S151>/LP_Filter'

  // SystemInitialize for Atomic SubSystem: '<S151>/Remove_OOR_Levels'
  MX_Gtwy__Remove_OOR_Levels_Init(&rtb_fltValue_out,
    &MX_Gtwy_Control_DWork.Remove_OOR_Levels);

  // End of SystemInitialize for SubSystem: '<S151>/Remove_OOR_Levels'

  // SystemInitialize for Atomic SubSystem: '<S151>/LP_Filter_Adj_Gain'
  MX_Gtwy_LP_Filter_Adj_Gain_Init(&MX_Gtwy_Control_B.Output_mdcp,
    &MX_Gtwy_Control_DWork.LP_Filter_Adj_Gain_elcb);

  // End of SystemInitialize for SubSystem: '<S151>/LP_Filter_Adj_Gain'

  // End of SystemInitialize for SubSystem: '<S75>/ConvertToRatio'

  // SystemInitialize for Chart: '<S75>/ErrorDetection'
  MX_Gtwy_Control_DWork.bitsForTID1.is_ECU_pu0x =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_fduh =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_jmtw =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_lukb =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_h41s =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_lei0 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NON_FUNCTIONAL_dkly =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_STATE_n0tr =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_kq33 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_COLD_hul1 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pg0e =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_h45q =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_i3pz =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_gnmb =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_HIGH_ivid =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_LOW_kqn4 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_VALUE_jyom =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c27_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_c27_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
  MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
  state_ECT = 0U;
  flt_ECT = 0U;
}

// Output and update for atomic system: '<S3>/ECT'
void MX_Gtwy_Control_ECT(void)
{
  // local block i/o variables
  uint16_T rtb_gauValue;
  uint16_T rtb_fltValue_out;
  uint8_T rtb_gauge;
  int16_T rtb_DataTypeConversion2;
  uint16_T rtb_DataTypeConversion3_m22y;
  int16_T rtb_Sum1;
  uint16_T rtb_Saturation;

  // Outputs for Enabled SubSystem: '<S75>/ConvertToRatio' incorporates:
  //   EnablePort: '<S151>/Enable'

  // RelationalOperator: '<S150>/Compare' incorporates:
  //   Constant: '<S150>/Constant'
  //   Constant: '<S151>/Constant'
  //   Constant: '<S75>/Constant1'

  if (CONSTANT_DATA->ECU_FUNCTION == NON_FUNCTIONAL) {
    if (!MX_Gtwy_Control_DWork.ConvertToRatio_MODE) {
      // SystemReset for Atomic SubSystem: '<S151>/LP_Filter'
      MX_Gtwy_Co_LP_Filter_j43b_Reset(&MX_Gtwy_Control_DWork.LP_Filter_dijo);

      // End of SystemReset for SubSystem: '<S151>/LP_Filter'

      // SystemReset for Atomic SubSystem: '<S151>/Remove_OOR_Levels'
      MX_Gtwy_Remove_OOR_Levels_Reset(&rtb_fltValue_out,
        &MX_Gtwy_Control_DWork.Remove_OOR_Levels);

      // End of SystemReset for SubSystem: '<S151>/Remove_OOR_Levels'

      // SystemReset for Atomic SubSystem: '<S151>/LP_Filter_Adj_Gain'
      MX_Gtw_LP_Filter_Adj_Gain_Reset(&MX_Gtwy_Control_B.Output_mdcp,
        &MX_Gtwy_Control_DWork.LP_Filter_Adj_Gain_elcb);

      // End of SystemReset for SubSystem: '<S151>/LP_Filter_Adj_Gain'
      MX_Gtwy_Control_DWork.ConvertToRatio_MODE = true;
    }

    // Outputs for Atomic SubSystem: '<S151>/Ratiometric_Converter'
    MX_Gtwy_C_Ratiometric_Converter(MX_Gtwy_Control_B.RateTransition47,
      MX_Gtwy_Control_B.RateTransition17, &rtb_Saturation, ((uint16_T)1000U));

    // End of Outputs for SubSystem: '<S151>/Ratiometric_Converter'

    // Outputs for Atomic SubSystem: '<S151>/LP_Filter'
    MX_Gtwy_Control_LP_Filter_dijo(rtb_Saturation, &rtb_Sum1,
      &MX_Gtwy_Control_DWork.LP_Filter_dijo);

    // End of Outputs for SubSystem: '<S151>/LP_Filter'

    // DataTypeConversion: '<S151>/Data Type Conversion1'
    rm_ECT = (uint16_T)(int32_T)((int32_T)rtb_Sum1 >> 5);

    // Outputs for Atomic SubSystem: '<S151>/Remove_OOR_Levels'
    MX_Gtwy_Contr_Remove_OOR_Levels(rtb_Saturation, &rtb_fltValue_out,
      &MX_Gtwy_Control_DWork.Remove_OOR_Levels, CONSTANT_DATA->ECT_OORH,
      CONSTANT_DATA->ECT_OORL);

    // End of Outputs for SubSystem: '<S151>/Remove_OOR_Levels'

    // DataTypeConversion: '<S151>/Data Type Conversion2'
    rtb_DataTypeConversion2 = (int16_T)rtb_fltValue_out;

    // Outputs for Atomic SubSystem: '<S151>/LP_Filter_Adj_Gain'
    MX_Gtwy_Cont_LP_Filter_Adj_Gain(CONSTANT_DATA->ECT_FILTER_GAIN,
      rtb_DataTypeConversion2, &MX_Gtwy_Control_B.Output_mdcp,
      &MX_Gtwy_Control_DWork.LP_Filter_Adj_Gain_elcb);

    // End of Outputs for SubSystem: '<S151>/LP_Filter_Adj_Gain'

    // DataTypeConversion: '<S151>/Data Type Conversion3' incorporates:
    //   Constant: '<S151>/Constant'

    rtb_DataTypeConversion3_m22y = (uint16_T)(int32_T)
      (MX_Gtwy_Control_B.Output_mdcp >> 16);

    // Lookup: '<S151>/GaugeTable'
    //
    //  About '<S151>/GaugeTable':
    //  Input0  Data Type:  Integer        U16
    //  Output0 Data Type:  Integer        U16
    //  Round Mode: Zero
    //  Saturation Mode: Saturate
    //  Lookup Method: Nearest
    //
    //  XData parameter uses the same data type and scaling as Input0
    //  YData parameter uses the same data type and scaling as Output0

    {
      uint32_T iLeft;
      BINARYSEARCH_U16_Near_iL( &(iLeft), rtb_DataTypeConversion3_m22y,
        (&(MXGTW_ECTSNDINPUT[0])), 340U);
      MX_Gtwy_Control_B.flt_ECT_in = MXGTW_ECTSNDOUTPUT[iLeft];
    }
  } else {
    if (MX_Gtwy_Control_DWork.ConvertToRatio_MODE) {
      MX_Gtwy_Control_DWork.ConvertToRatio_MODE = false;
    }
  }

  // End of RelationalOperator: '<S150>/Compare'
  // End of Outputs for SubSystem: '<S75>/ConvertToRatio'

  // Chart: '<S75>/ErrorDetection'
  // Gateway: MX_Gtwy_Control/Inputs/ECT/ErrorDetection
  // During: MX_Gtwy_Control/Inputs/ECT/ErrorDetection
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID1.is_active_c27_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/ECT/ErrorDetection
    MX_Gtwy_Control_DWork.bitsForTID1.is_active_c27_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/ECT/ErrorDetection
    // Transition: '<S152>:186'
    MX_Gtwy_Control_DWork.bitsForTID1.is_c27_MX_Gtwy_Control =
      MX_Gtwy__IN_NON_FUNCTIONAL_hnhy;

    // Entry Internal 'NON_FUNCTIONAL': '<S152>:271'
    // Transition: '<S152>:277'
    MX_Gtwy_Control_DWork.bitsForTID1.is_NON_FUNCTIONAL_dkly =
      MX_Gtwy__IN_NON_FUNCTIONAL_hnhy;

    // Entry 'NON_FUNCTIONAL': '<S152>:275'
    state_ECT = NORMAL;
    flt_ECT = 0U;
  } else {
    switch (MX_Gtwy_Control_DWork.bitsForTID1.is_c27_MX_Gtwy_Control) {
     case MX_Gtwy_Control_IN_ECU:
      // During 'ECU': '<S152>:319'
      if (MX_Gtwy_Control_DWork.bitsForTID1.is_ECU_pu0x ==
          MX_Gtwy_Contro_IN_NORMAL_kyfevd) {
        // During 'NORMAL': '<S152>:324'
        if (MX_Gtwy_Control_B.RateTransition31 == NO_COMMUNICATION) {
          // Transition: '<S152>:321'
          // Exit Internal 'NORMAL': '<S152>:324'
          // Exit Internal 'EXTREMELY_HIGH': '<S152>:342'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_jmtw =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_fduh =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;

          // Exit Internal 'HIGH': '<S152>:347'
          MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_lukb =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;

          // Exit Internal 'NORMAL': '<S152>:352'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_h41s =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;

          // Exit Internal 'SHUTDOWN': '<S152>:337'
          MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_lei0 =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
          MX_Gtwy_Control_DWork.bitsForTID1.is_ECU_pu0x =
            MX_Gtwy_Con_IN_NO_COMMUNICATION;

          // Entry 'NO_COMMUNICATION': '<S152>:323'
          flt_ECT = 0U;
        } else {
          flt_ECT = MX_Gtwy_Control_B.RateTransition32;
          switch (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_fduh) {
           case MX_Gtwy__IN_EXTREMELY_HIGH_ac0d:
            // During 'EXTREMELY_HIGH': '<S152>:342'
            if (((int32_T)flt_ECT < (int32_T)((int32_T)
                  CONSTANT_DATA->ECT_EXTREMELY_HIGH - (int32_T)
                  CONSTANT_DATA->TEMPERATURE_HYSTERESIS)) ||
                (MX_Gtwy_Control_B.RateTransition59 != ENGINE_RUNNING)) {
              // Transition: '<S152>:332'
              // Exit Internal 'EXTREMELY_HIGH': '<S152>:342'
              MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_jmtw =
                MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
              MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_fduh =
                MX_Gtwy_Control_IN_HIGH_hpoa;

              // Entry Internal 'HIGH': '<S152>:347'
              // Transition: '<S152>:348'
              MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_lukb =
                MX_Gtwy_Contro_IN_DEBOUNCE_nypx;

              // Entry 'DEBOUNCE': '<S152>:351'
              MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
            } else if ((CONSTANT_DATA->SHUTDOWN_FUNCTION != NON_FUNCTIONAL) &&
                       (flt_ECT >= CONSTANT_DATA->ECT_SHUTDOWN)) {
              // Transition: '<S152>:330'
              // Exit Internal 'EXTREMELY_HIGH': '<S152>:342'
              MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_jmtw =
                MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
              MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_fduh =
                MX_Gtwy_Contr_IN_SHUTDOWN_nw1j4;

              // Entry Internal 'SHUTDOWN': '<S152>:337'
              // Transition: '<S152>:338'
              MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_lei0 =
                MX_Gtwy_Contro_IN_DEBOUNCE_nypx;

              // Entry 'DEBOUNCE': '<S152>:341'
              MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
              state_ECT = PRE_SHUTDOWN;
            } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_jmtw ==
                       MX_Gtwy_Contro_IN_DEBOUNCE_nypx) {
              // During 'DEBOUNCE': '<S152>:345'
              if ((MX_Gtwy_Control_DWork.debounceCount_ev4y >=
                   CONSTANT_DATA->ECT_DEBOUNCE_EXTREMELY_HIGH) || (state_ECT ==
                   EXTREMELY_HIGH)) {
                // Transition: '<S152>:344'
                MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_jmtw =
                  MX_Gtwy_Contr_IN_EXTREMELY_HIGH;

                // Entry 'EXTREMELY_HIGH': '<S152>:346'
                state_ECT = EXTREMELY_HIGH;
              } else {
                MX_Gtwy_Control_DWork.debounceCount_ev4y = (uint16_T)(int32_T)
                  ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ev4y + 1);
              }
            } else {
              state_ECT = EXTREMELY_HIGH;

              // During 'EXTREMELY_HIGH': '<S152>:346'
            }
            break;

           case MX_Gtwy_Control_IN_HIGH_hpoa:
            // During 'HIGH': '<S152>:347'
            if (((int32_T)flt_ECT < (int32_T)((int32_T)CONSTANT_DATA->ECT_HIGH -
                  (int32_T)CONSTANT_DATA->TEMPERATURE_HYSTERESIS)) ||
                (MX_Gtwy_Control_B.RateTransition59 != ENGINE_RUNNING)) {
              // Transition: '<S152>:335'
              // Exit Internal 'HIGH': '<S152>:347'
              MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_lukb =
                MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
              MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_fduh =
                MX_Gtwy_Contr_IN_NORMAL_kyfevd5;

              // Entry Internal 'NORMAL': '<S152>:352'
              // Transition: '<S152>:353'
              MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_h41s =
                MX_Gtwy_Cont_IN_DEBOUNCE_NORMAL;

              // Entry 'DEBOUNCE_NORMAL': '<S152>:355'
              MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
            } else if ((flt_ECT >= CONSTANT_DATA->ECT_EXTREMELY_HIGH) &&
                       (state_ECT == HIGH)) {
              // Transition: '<S152>:333'
              // Exit Internal 'HIGH': '<S152>:347'
              MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_lukb =
                MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
              MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_fduh =
                MX_Gtwy__IN_EXTREMELY_HIGH_ac0d;

              // Entry Internal 'EXTREMELY_HIGH': '<S152>:342'
              // Transition: '<S152>:343'
              MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_jmtw =
                MX_Gtwy_Contro_IN_DEBOUNCE_nypx;

              // Entry 'DEBOUNCE': '<S152>:345'
              MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
            } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_lukb ==
                       MX_Gtwy_Contro_IN_DEBOUNCE_nypx) {
              // During 'DEBOUNCE': '<S152>:351'
              if ((MX_Gtwy_Control_DWork.debounceCount_ev4y >=
                   CONSTANT_DATA->ECT_DEBOUNCE_HIGH) || (state_ECT == HIGH)) {
                // Transition: '<S152>:349'
                MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_lukb =
                  MX_Gtwy_Control_IN_HIGH_hpoa;

                // Entry 'HIGH': '<S152>:350'
                state_ECT = HIGH;
              } else {
                MX_Gtwy_Control_DWork.debounceCount_ev4y = (uint16_T)(int32_T)
                  ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ev4y + 1);
              }
            } else {
              state_ECT = HIGH;

              // During 'HIGH': '<S152>:350'
            }
            break;

           case MX_Gtwy_Contr_IN_NORMAL_kyfevd5:
            // During 'NORMAL': '<S152>:352'
            if ((flt_ECT >= CONSTANT_DATA->ECT_HIGH) &&
                (MX_Gtwy_Control_B.RateTransition59 == ENGINE_RUNNING)) {
              // Transition: '<S152>:334'
              // Exit Internal 'NORMAL': '<S152>:352'
              MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_h41s =
                MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
              MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_fduh =
                MX_Gtwy_Control_IN_HIGH_hpoa;

              // Entry Internal 'HIGH': '<S152>:347'
              // Transition: '<S152>:348'
              MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_lukb =
                MX_Gtwy_Contro_IN_DEBOUNCE_nypx;

              // Entry 'DEBOUNCE': '<S152>:351'
              MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
            } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_h41s ==
                       MX_Gtwy_Cont_IN_DEBOUNCE_NORMAL) {
              // During 'DEBOUNCE_NORMAL': '<S152>:355'
              if ((MX_Gtwy_Control_DWork.debounceCount_ev4y >=
                   CONSTANT_DATA->ECT_DEBOUNCE_NORMAL) || (state_ECT == NORMAL))
              {
                // Transition: '<S152>:354'
                MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_h41s =
                  MX_Gtwy_Control_IN_NORMAL_kyfe;

                // Entry 'NORMAL': '<S152>:356'
                state_ECT = NORMAL;
              } else {
                MX_Gtwy_Control_DWork.debounceCount_ev4y = (uint16_T)(int32_T)
                  ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ev4y + 1);
              }
            } else {
              state_ECT = NORMAL;

              // During 'NORMAL': '<S152>:356'
            }
            break;

           default:
            // During 'SHUTDOWN': '<S152>:337'
            if ((state_ECT != SHUTDOWN) && (((int32_T)flt_ECT < (int32_T)
                  ((int32_T)CONSTANT_DATA->ECT_SHUTDOWN - (int32_T)
                   CONSTANT_DATA->TEMPERATURE_HYSTERESIS)) ||
                 (MX_Gtwy_Control_B.RateTransition59 != ENGINE_RUNNING))) {
              // Transition: '<S152>:331'
              // Exit Internal 'SHUTDOWN': '<S152>:337'
              MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_lei0 =
                MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
              MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_fduh =
                MX_Gtwy__IN_EXTREMELY_HIGH_ac0d;

              // Entry Internal 'EXTREMELY_HIGH': '<S152>:342'
              // Transition: '<S152>:343'
              MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_jmtw =
                MX_Gtwy_Contro_IN_DEBOUNCE_nypx;

              // Entry 'DEBOUNCE': '<S152>:345'
              MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
            } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_lei0 ==
                       MX_Gtwy_Contro_IN_DEBOUNCE_nypx) {
              state_ECT = PRE_SHUTDOWN;

              // During 'DEBOUNCE': '<S152>:341'
              if (MX_Gtwy_Control_DWork.debounceCount_ev4y >=
                  CONSTANT_DATA->ECT_DEBOUNCE_SHUTDOWN) {
                // Transition: '<S152>:339'
                MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_lei0 =
                  MX_Gtwy_Contro_IN_SHUTDOWN_nw1j;

                // Entry 'SHUTDOWN': '<S152>:340'
                state_ECT = SHUTDOWN;
              } else {
                MX_Gtwy_Control_DWork.debounceCount_ev4y = (uint16_T)(int32_T)
                  ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ev4y + 1);
              }
            } else {
              state_ECT = SHUTDOWN;

              // During 'SHUTDOWN': '<S152>:340'
            }
            break;
          }
        }
      } else {
        // During 'NO_COMMUNICATION': '<S152>:323'
        if (MX_Gtwy_Control_B.RateTransition31 != NO_COMMUNICATION) {
          // Transition: '<S152>:322'
          MX_Gtwy_Control_DWork.bitsForTID1.is_ECU_pu0x =
            MX_Gtwy_Contro_IN_NORMAL_kyfevd;

          // Entry 'NORMAL': '<S152>:324'
          flt_ECT = MX_Gtwy_Control_B.RateTransition32;

          // Entry Internal 'NORMAL': '<S152>:324'
          // Transition: '<S152>:336'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_fduh =
            MX_Gtwy_Contr_IN_NORMAL_kyfevd5;

          // Entry Internal 'NORMAL': '<S152>:352'
          // Transition: '<S152>:353'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_h41s =
            MX_Gtwy_Cont_IN_DEBOUNCE_NORMAL;

          // Entry 'DEBOUNCE_NORMAL': '<S152>:355'
          MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
        }
      }
      break;

     case MX_Gtwy__IN_NON_FUNCTIONAL_hnhy:
      // During 'NON_FUNCTIONAL': '<S152>:271'
      if ((CONSTANT_DATA->ECT_FUNCTION != NON_FUNCTIONAL) &&
          (CONSTANT_DATA->ECU_FUNCTION == NON_FUNCTIONAL)) {
        // Transition: '<S152>:273'
        // Exit Internal 'NON_FUNCTIONAL': '<S152>:271'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NON_FUNCTIONAL_dkly =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
        MX_Gtwy_Control_DWork.bitsForTID1.is_c27_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_SENSOR;

        // Entry Internal 'SENSOR': '<S152>:107'
        // Entry Internal 'VALUE': '<S152>:25'
        // Transition: '<S152>:63'
        MX_Gtwy_Control_DWork.bitsForTID1.is_VALUE_jyom =
          MX_Gtwy_Control_IN_INIT;

        // Entry 'INIT': '<S152>:26'
        flt_ECT = 0U;

        // Entry Internal 'INIT': '<S152>:26'
        // Transition: '<S152>:58'
        if ((rm_ECT <= CONSTANT_DATA->ECT_OORL) || (rm_ECT >=
             CONSTANT_DATA->ECT_OORH)) {
          // Transition: '<S152>:59'
          // Transition: '<S152>:61'
          flt_ECT = 0U;

          // Transition: '<S152>:62'
        } else {
          // Transition: '<S152>:60'
          flt_ECT = MX_Gtwy_Control_B.flt_ECT_in;
        }

        // Entry Internal 'STATE': '<S152>:1'
        // Transition: '<S152>:51'
        MX_Gtwy_Control_DWork.bitsForTID1.is_STATE_n0tr =
          MX_Gtwy_IN_NON_FUNCTIONAL_hnhyi;

        // Entry 'NON_FUNCTIONAL': '<S152>:2'
        state_ECT = NORMAL;
      } else if ((CONSTANT_DATA->ECU_FUNCTION != NON_FUNCTIONAL) &&
                 (CONSTANT_DATA->ECT_FUNCTION != NON_FUNCTIONAL)) {
        // Transition: '<S152>:274'
        // Exit Internal 'NON_FUNCTIONAL': '<S152>:271'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NON_FUNCTIONAL_dkly =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
        MX_Gtwy_Control_DWork.bitsForTID1.is_c27_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_ECU;

        // Entry Internal 'ECU': '<S152>:319'
        // Transition: '<S152>:320'
        MX_Gtwy_Control_DWork.bitsForTID1.is_ECU_pu0x =
          MX_Gtwy_Contro_IN_NORMAL_kyfevd;

        // Entry 'NORMAL': '<S152>:324'
        flt_ECT = MX_Gtwy_Control_B.RateTransition32;

        // Entry Internal 'NORMAL': '<S152>:324'
        // Transition: '<S152>:336'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_fduh =
          MX_Gtwy_Contr_IN_NORMAL_kyfevd5;

        // Entry Internal 'NORMAL': '<S152>:352'
        // Transition: '<S152>:353'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_h41s =
          MX_Gtwy_Cont_IN_DEBOUNCE_NORMAL;

        // Entry 'DEBOUNCE_NORMAL': '<S152>:355'
        MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NON_FUNCTIONAL_dkly ==
                 MX_Gtwy_Cont_IN_FUNCTIONAL_fiok) {
        state_ECT = NORMAL;

        // During 'FUNCTIONAL': '<S152>:276'
        flt_ECT = MX_Gtwy_Control_B.RateTransition32;
      } else {
        state_ECT = NORMAL;

        // During 'NON_FUNCTIONAL': '<S152>:275'
        if (CONSTANT_DATA->ECU_FUNCTION != NON_FUNCTIONAL) {
          // Transition: '<S152>:278'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NON_FUNCTIONAL_dkly =
            MX_Gtwy_Cont_IN_FUNCTIONAL_fiok;

          // Entry 'FUNCTIONAL': '<S152>:276'
          flt_ECT = MX_Gtwy_Control_B.RateTransition32;
        }
      }
      break;

     default:
      // During 'SENSOR': '<S152>:107'
      // During 'VALUE': '<S152>:25'
      if (MX_Gtwy_Control_DWork.bitsForTID1.is_VALUE_jyom ==
          MX_Gtwy_Control_IN_INIT) {
        // During 'INIT': '<S152>:26'
        if (MX_Gtwy_Control_B.RateTransition14 == SYS_NORMAL) {
          // Transition: '<S152>:64'
          MX_Gtwy_Control_DWork.bitsForTID1.is_VALUE_jyom =
            MX_Gtwy_Control_IN_NORMAL_kyfe;
        }
      } else {
        // During 'NORMAL': '<S152>:27'
        flt_ECT = MX_Gtwy_Control_B.flt_ECT_in;
      }

      // During 'STATE': '<S152>:1'
      switch (MX_Gtwy_Control_DWork.bitsForTID1.is_STATE_n0tr) {
       case MX_Gtwy_IN_NON_FUNCTIONAL_hnhyi:
        state_ECT = NORMAL;

        // During 'NON_FUNCTIONAL': '<S152>:2'
        if ((state_SensorSupply1 == NORMAL) &&
            (MX_Gtwy_Control_B.RateTransition14 == SYS_NORMAL)) {
          // Transition: '<S152>:53'
          MX_Gtwy_Control_DWork.bitsForTID1.is_STATE_n0tr =
            MX_Gtwy_Control_IN_NORMAL_kyfe;

          // Entry Internal 'NORMAL': '<S152>:3'
          // Transition: '<S152>:34'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_kq33 =
            MX_Gtwy_Control_IN_NORMAL_kyfev;

          // Entry Internal 'NORMAL': '<S152>:13'
          // Transition: '<S152>:43'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_i3pz =
            MX_Gtwy_Cont_IN_DEBOUNCE_NORMAL;

          // Entry 'DEBOUNCE_NORMAL': '<S152>:14'
          MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
        }
        break;

       case MX_Gtwy_Control_IN_NORMAL_kyfe:
        MX_Gtwy_Control_NORMAL();
        break;

       case MX_Gtwy_Co_IN_OUT_OF_RANGE_HIGH:
        // During 'OUT_OF_RANGE_HIGH': '<S152>:19'
        if (rm_ECT < CONSTANT_DATA->ECT_OORH) {
          // Transition: '<S152>:55'
          // Exit Internal 'OUT_OF_RANGE_HIGH': '<S152>:19'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_HIGH_ivid =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
          MX_Gtwy_Control_DWork.bitsForTID1.is_STATE_n0tr =
            MX_Gtwy_Control_IN_NORMAL_kyfe;

          // Entry Internal 'NORMAL': '<S152>:3'
          // Transition: '<S152>:34'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_kq33 =
            MX_Gtwy_Control_IN_NORMAL_kyfev;

          // Entry Internal 'NORMAL': '<S152>:13'
          // Transition: '<S152>:43'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_i3pz =
            MX_Gtwy_Cont_IN_DEBOUNCE_NORMAL;

          // Entry 'DEBOUNCE_NORMAL': '<S152>:14'
          MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
        } else if ((state_SensorSupply1 != NORMAL) && (state_ECT != OORH)) {
          // Transition: '<S152>:105'
          // Exit Internal 'OUT_OF_RANGE_HIGH': '<S152>:19'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_HIGH_ivid =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
          MX_Gtwy_Control_DWork.bitsForTID1.is_STATE_n0tr =
            MX_Gtwy_IN_NON_FUNCTIONAL_hnhyi;

          // Entry 'NON_FUNCTIONAL': '<S152>:2'
          state_ECT = NORMAL;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_HIGH_ivid ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_nypx) {
          // During 'DEBOUNCE': '<S152>:20'
          if ((MX_Gtwy_Control_DWork.debounceCount_ev4y >=
               CONSTANT_DATA->ECT_DEBOUNCE_OORH) || (state_ECT == OORH)) {
            // Transition: '<S152>:48'
            MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_HIGH_ivid =
              MX_Gtwy_Control_IN_OORH_lmti;

            // Entry 'OORH': '<S152>:21'
            state_ECT = OORH;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_ev4y = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ev4y + 1);
          }
        } else {
          state_ECT = OORH;

          // During 'OORH': '<S152>:21'
        }
        break;

       default:
        // During 'OUT_OF_RANGE_LOW': '<S152>:22'
        if (rm_ECT > CONSTANT_DATA->ECT_OORL) {
          // Transition: '<S152>:57'
          // Exit Internal 'OUT_OF_RANGE_LOW': '<S152>:22'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_LOW_kqn4 =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
          MX_Gtwy_Control_DWork.bitsForTID1.is_STATE_n0tr =
            MX_Gtwy_Control_IN_NORMAL_kyfe;

          // Entry Internal 'NORMAL': '<S152>:3'
          // Transition: '<S152>:34'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_kq33 =
            MX_Gtwy_Control_IN_NORMAL_kyfev;

          // Entry Internal 'NORMAL': '<S152>:13'
          // Transition: '<S152>:43'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_i3pz =
            MX_Gtwy_Cont_IN_DEBOUNCE_NORMAL;

          // Entry 'DEBOUNCE_NORMAL': '<S152>:14'
          MX_Gtwy_Control_DWork.debounceCount_ev4y = 0U;
        } else if ((state_SensorSupply1 != NORMAL) && (state_ECT != OORL)) {
          // Transition: '<S152>:106'
          // Exit Internal 'OUT_OF_RANGE_LOW': '<S152>:22'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_LOW_kqn4 =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_dcs2;
          MX_Gtwy_Control_DWork.bitsForTID1.is_STATE_n0tr =
            MX_Gtwy_IN_NON_FUNCTIONAL_hnhyi;

          // Entry 'NON_FUNCTIONAL': '<S152>:2'
          state_ECT = NORMAL;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_LOW_kqn4 ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_nypx) {
          // During 'DEBOUNCE': '<S152>:23'
          if ((MX_Gtwy_Control_DWork.debounceCount_ev4y >=
               CONSTANT_DATA->ECT_DEBOUNCE_OORL) || (state_ECT == OORL)) {
            // Transition: '<S152>:50'
            MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_LOW_kqn4 =
              MX_Gtwy_Control_IN_OORL_bpaf;

            // Entry 'OORL': '<S152>:24'
            state_ECT = OORL;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_ev4y = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ev4y + 1);
          }
        } else {
          state_ECT = OORL;

          // During 'OORL': '<S152>:24'
        }
        break;
      }
      break;
    }
  }

  // End of Chart: '<S75>/ErrorDetection'

  // Truth Table: '<S75>/Truth_Table'
  MX_Gtwy_Control_Truth_Table(state_ECT, &rtb_gauge);

  // MultiPortSwitch: '<S75>/Multiport Switch' incorporates:
  //   Constant: '<S75>/max'
  //   Constant: '<S75>/min'
  //   Lookup: '<S75>/GaugeTable'

  switch ((int32_T)rtb_gauge) {
   case 1:
    gau_ECT = ((uint16_T)0U);
    break;

   case 2:
    // Lookup: '<S75>/GaugeTable'
    //
    //  About '<S75>/GaugeTable':
    //  Input0  Data Type:  Integer        U16
    //  Output0 Data Type:  Integer        U16
    //  Round Mode: Zero
    //  Saturation Mode: Saturate
    //  Lookup Method: Nearest
    //
    //  XData is inlined and evenly spaced, so the algorithm only needs
    //  the value of the first element, the last element, and the spacing.
    //  For efficiency, XData is excluded from the generated code.
    //  YData parameter uses the same data type and scaling as Output0

    {
      uint32_T iLeft;

      // Find the location of current input value in the data table.
      //
      //  Based on the data type of the input, it is impossible for the
      //  search value to be less than the smallest point in the table.

      if (flt_ECT >= 340U ) {
        // Greater than or equal to the largest point in the table.
        iLeft = 340U;
      } else {
        iLeft = (uint32_T)( flt_ECT );
      }

      rtb_gauValue = MXGTW_ECTGAUGE[iLeft];
    }

    gau_ECT = rtb_gauValue;
    break;

   default:
    gau_ECT = ((uint16_T)250U);
    break;
  }

  // End of MultiPortSwitch: '<S75>/Multiport Switch'
}

// Function for Chart: '<S163>/Pot'
static void MX_Gtwy_Control_Supply_OK(const uint16_T *Gain_p3pk, const int16_T
  *DataTypeConversion_k01y)
{
  int16_T position_LeftPotIn;

  // During 'Supply_OK': '<S164>:114'
  if (MX_Gtwy_Control_B.RateTransition10_bex1 != NORMAL) {
    // Transition: '<S164>:111'
    // Exit Internal 'Supply_OK': '<S164>:114'
    // Exit Internal 'NORMAL': '<S164>:4'
    // Exit Internal 'ACTIVE': '<S164>:105'
    MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_eura =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;

    // Exit Internal 'Normal': '<S164>:96'
    MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_adkg =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_nbax =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
    MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_nvbt =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
    MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State_groi =
      MX_Gtwy_Control_IN_SupplyFault;

    // Entry 'SupplyFault': '<S164>:110'
    MX_Gtwy_Control_B.state_LeftPot_l1es = NORMAL;
    MX_Gtwy_Control_B.position_LeftPotOut = (int16_T)
      CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
  } else {
    switch (MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_nvbt) {
     case MX_Gtwy_Control_IN_NORMAL_nwda:
      // During 'NORMAL': '<S164>:4'
      if (*Gain_p3pk > CONSTANT_DATA->OFFSET_POT_OORH) {
        // Transition: '<S164>:17'
        // Exit Internal 'NORMAL': '<S164>:4'
        // Exit Internal 'ACTIVE': '<S164>:105'
        MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_eura =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;

        // Exit Internal 'Normal': '<S164>:96'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_adkg =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
        MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_nbax =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
        MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_nvbt =
          MX_Gtwy_C_IN_debounce_OORH_bppb;
        MX_Gtwy_Control_DWork.temporalCounter_i2_kv1i = 0U;

        // Entry 'debounce_OORH': '<S164>:5'
        MX_Gtwy_Control_B.position_LeftPotOut = (int16_T)
          CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
      } else if (*Gain_p3pk < CONSTANT_DATA->OFFSET_POT_OORL) {
        // Transition: '<S164>:24'
        // Exit Internal 'NORMAL': '<S164>:4'
        // Exit Internal 'ACTIVE': '<S164>:105'
        MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_eura =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;

        // Exit Internal 'Normal': '<S164>:96'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_adkg =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
        MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_nbax =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
        MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_nvbt =
          MX_Gtwy_C_IN_debounce_OORL_baej;
        MX_Gtwy_Control_DWork.temporalCounter_i2_kv1i = 0U;

        // Entry 'debounce_OORL': '<S164>:6'
        MX_Gtwy_Control_B.position_LeftPotOut = (int16_T)
          CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
      } else if (MX_Gtwy_Control_DWork.state_LeftPotCal == NOT_IN_NEUTRAL) {
        // Transition: '<S164>:26'
        // Exit Internal 'NORMAL': '<S164>:4'
        // Exit Internal 'ACTIVE': '<S164>:105'
        MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_eura =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;

        // Exit Internal 'Normal': '<S164>:96'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_adkg =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
        MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_nbax =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
        MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_nvbt =
          MX_Gtwy__IN_NOT_IN_NEUTRAL_alyp;

        // Entry 'NOT_IN_NEUTRAL': '<S164>:8'
        MX_Gtwy_Control_B.state_LeftPot_l1es = NOT_IN_NEUTRAL;
        MX_Gtwy_Control_B.position_LeftPotOut = (int16_T)
          CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
      } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_nbax ==
                 MX_Gtwy_Control_IN_ACTIVE_nu34) {
        // During 'ACTIVE': '<S164>:105'
        position_LeftPotIn = (int16_T)(int32_T)((int32_T)
          *DataTypeConversion_k01y + (int32_T)
          MX_Gtwy_Control_DWork.offset_LeftPotCal);
        MX_Gtwy_Control_B.position_LeftPotOut = position_LeftPotIn;
        if (MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_eura ==
            MX_Gtwy_Control_IN_Inhibit) {
          MX_Gtwy_Control_B.state_LeftPot_l1es = NEUTRAL;

          // During 'Inhibit': '<S164>:97'
          if ((state_HydEnable == ACTIVE) && ((int32_T)position_LeftPotIn >=
               (int32_T)MX_Gtwy_Control_DWork.base_Threshold_anks) && ((int32_T)
               position_LeftPotIn <= (int32_T)
               MX_Gtwy_Control_DWork.rod_Threshold_h3xp)) {
            // Transition: '<S164>:99'
            MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_eura =
              MX_Gtwy_Control_IN_Normal;

            // Entry Internal 'Normal': '<S164>:96'
            // Transition: '<S164>:31'
            MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_adkg =
              MX_Gtwy_Control_IN_Neutral_mw51;

            // Entry 'Neutral': '<S164>:11'
          }
        } else {
          // During 'Normal': '<S164>:96'
          if (state_HydEnable != ACTIVE) {
            // Transition: '<S164>:98'
            // Exit Internal 'Normal': '<S164>:96'
            MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_adkg =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
            MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_eura =
              MX_Gtwy_Control_IN_Inhibit;

            // Entry 'Inhibit': '<S164>:97'
            MX_Gtwy_Control_B.state_LeftPot_l1es = NEUTRAL;
          } else {
            switch (MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_adkg) {
             case MX_Gtwy_Con_IN_Base_Active_nuch:
              MX_Gtwy_Control_B.state_LeftPot_l1es = BASE_ACTIVE;

              // During 'Base_Active': '<S164>:10'
              if (((int32_T)position_LeftPotIn >= (int32_T)
                   MX_Gtwy_Control_DWork.base_Threshold_anks) && ((int32_T)
                   position_LeftPotIn > (int32_T)
                   MX_Gtwy_Control_DWork.rod_Threshold_h3xp)) {
                // Transition: '<S164>:38'
                MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_adkg =
                  MX_Gtwy_Cont_IN_Rod_Active_boyw;

                // Entry 'Rod_Active': '<S164>:12'
                MX_Gtwy_Control_B.state_LeftPot_l1es = ROD_ACTIVE;
              } else {
                if ((int32_T)position_LeftPotIn >= (int32_T)
                    MX_Gtwy_Control_DWork.base_Threshold_anks) {
                  // Transition: '<S164>:37'
                  MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_adkg =
                    MX_Gtwy_Control_IN_Neutral_mw51;

                  // Entry 'Neutral': '<S164>:11'
                  MX_Gtwy_Control_B.state_LeftPot_l1es = NEUTRAL;
                }
              }
              break;

             case MX_Gtwy_Control_IN_Neutral_mw51:
              MX_Gtwy_Control_B.state_LeftPot_l1es = NEUTRAL;

              // During 'Neutral': '<S164>:11'
              if ((int32_T)position_LeftPotIn > (int32_T)
                  MX_Gtwy_Control_DWork.rod_Threshold_h3xp) {
                // Transition: '<S164>:35'
                MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_adkg =
                  MX_Gtwy_Cont_IN_Rod_Active_boyw;

                // Entry 'Rod_Active': '<S164>:12'
                MX_Gtwy_Control_B.state_LeftPot_l1es = ROD_ACTIVE;
              } else {
                if ((int32_T)position_LeftPotIn < (int32_T)
                    MX_Gtwy_Control_DWork.base_Threshold_anks) {
                  // Transition: '<S164>:34'
                  MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_adkg =
                    MX_Gtwy_Con_IN_Base_Active_nuch;

                  // Entry 'Base_Active': '<S164>:10'
                  MX_Gtwy_Control_B.state_LeftPot_l1es = BASE_ACTIVE;
                }
              }
              break;

             default:
              MX_Gtwy_Control_B.state_LeftPot_l1es = ROD_ACTIVE;

              // During 'Rod_Active': '<S164>:12'
              if (((int32_T)position_LeftPotIn <= (int32_T)
                   MX_Gtwy_Control_DWork.rod_Threshold_h3xp) && ((int32_T)
                   position_LeftPotIn < (int32_T)
                   MX_Gtwy_Control_DWork.base_Threshold_anks)) {
                // Transition: '<S164>:33'
                MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_adkg =
                  MX_Gtwy_Con_IN_Base_Active_nuch;

                // Entry 'Base_Active': '<S164>:10'
                MX_Gtwy_Control_B.state_LeftPot_l1es = BASE_ACTIVE;
              } else {
                if ((int32_T)position_LeftPotIn <= (int32_T)
                    MX_Gtwy_Control_DWork.rod_Threshold_h3xp) {
                  // Transition: '<S164>:36'
                  MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_adkg =
                    MX_Gtwy_Control_IN_Neutral_mw51;

                  // Entry 'Neutral': '<S164>:11'
                  MX_Gtwy_Control_B.state_LeftPot_l1es = NEUTRAL;
                }
              }
              break;
            }
          }
        }
      } else {
        MX_Gtwy_Control_B.state_LeftPot_l1es = NEUTRAL;

        // During 'Inactive': '<S164>:106'
        if (MX_Gtwy_Control_DWork.state_LeftPotCal != INACTIVE) {
          // Transition: '<S164>:107'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_nbax =
            MX_Gtwy_Control_IN_ACTIVE_nu34;

          // Entry 'ACTIVE': '<S164>:105'
          MX_Gtwy_Control_B.position_LeftPotOut = (int16_T)(int32_T)((int32_T)
            *DataTypeConversion_k01y + (int32_T)
            MX_Gtwy_Control_DWork.offset_LeftPotCal);

          // Entry Internal 'ACTIVE': '<S164>:105'
          // Transition: '<S164>:101'
          MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_eura =
            MX_Gtwy_Control_IN_Inhibit;

          // Entry 'Inhibit': '<S164>:97'
        }
      }
      break;

     case MX_Gtwy__IN_NOT_IN_NEUTRAL_alyp:
      MX_Gtwy_Control_B.state_LeftPot_l1es = NOT_IN_NEUTRAL;

      // During 'NOT_IN_NEUTRAL': '<S164>:8'
      if (MX_Gtwy_Control_DWork.state_LeftPotCal != NOT_IN_NEUTRAL) {
        // Transition: '<S164>:16'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_nvbt =
          MX_Gtwy_Control_IN_NORMAL_nwda;

        // Entry Internal 'NORMAL': '<S164>:4'
        // Transition: '<S164>:108'
        MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_nbax =
          MX_Gtwy_Control_IN_Inactive;

        // Entry 'Inactive': '<S164>:106'
        MX_Gtwy_Control_B.state_LeftPot_l1es = NEUTRAL;
        MX_Gtwy_Control_DWork.base_Threshold_anks = (uint16_T)(int32_T)((int32_T)
          CONSTANT_DATA->OFFSET_POT_CENTER_RATIO - (int32_T)
          CONSTANT_DATA->OFFSET_POT_DEADBAND);
        MX_Gtwy_Control_DWork.rod_Threshold_h3xp = (uint16_T)(int32_T)((int32_T)
          CONSTANT_DATA->OFFSET_POT_CENTER_RATIO + (int32_T)
          CONSTANT_DATA->OFFSET_POT_DEADBAND);
        MX_Gtwy_Control_B.position_LeftPotOut = (int16_T)
          CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
      }
      break;

     case MX_Gtwy_Control_IN_OORH_nd0n:
      MX_Gtwy_Control_B.state_LeftPot_l1es = OORH;

      // During 'OORH': '<S164>:3'
      break;

     case MX_Gtwy_Control_IN_OORL_liz5:
      MX_Gtwy_Control_B.state_LeftPot_l1es = OORL;

      // During 'OORL': '<S164>:7'
      break;

     case MX_Gtwy_C_IN_debounce_OORH_bppb:
      // During 'debounce_OORH': '<S164>:5'
      if (MX_Gtwy_Control_DWork.temporalCounter_i2_kv1i >=
          CONSTANT_DATA->OFFSET_POT_OOR_DB) {
        // Transition: '<S164>:19'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_nvbt =
          MX_Gtwy_Control_IN_OORH_nd0n;

        // Entry 'OORH': '<S164>:3'
        MX_Gtwy_Control_B.state_LeftPot_l1es = OORH;
      } else {
        if (*Gain_p3pk <= CONSTANT_DATA->OFFSET_POT_OORH) {
          // Transition: '<S164>:18'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_nvbt =
            MX_Gtwy_Control_IN_NORMAL_nwda;

          // Entry Internal 'NORMAL': '<S164>:4'
          // Transition: '<S164>:108'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_nbax =
            MX_Gtwy_Control_IN_Inactive;

          // Entry 'Inactive': '<S164>:106'
          MX_Gtwy_Control_B.state_LeftPot_l1es = NEUTRAL;
          MX_Gtwy_Control_DWork.base_Threshold_anks = (uint16_T)(int32_T)
            ((int32_T)CONSTANT_DATA->OFFSET_POT_CENTER_RATIO - (int32_T)
             CONSTANT_DATA->OFFSET_POT_DEADBAND);
          MX_Gtwy_Control_DWork.rod_Threshold_h3xp = (uint16_T)(int32_T)
            ((int32_T)CONSTANT_DATA->OFFSET_POT_CENTER_RATIO + (int32_T)
             CONSTANT_DATA->OFFSET_POT_DEADBAND);
          MX_Gtwy_Control_B.position_LeftPotOut = (int16_T)
            CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
        }
      }
      break;

     default:
      // During 'debounce_OORL': '<S164>:6'
      if (MX_Gtwy_Control_DWork.temporalCounter_i2_kv1i >=
          CONSTANT_DATA->OFFSET_POT_OOR_DB) {
        // Transition: '<S164>:22'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_nvbt =
          MX_Gtwy_Control_IN_OORL_liz5;

        // Entry 'OORL': '<S164>:7'
        MX_Gtwy_Control_B.state_LeftPot_l1es = OORL;
      } else {
        if (*Gain_p3pk >= CONSTANT_DATA->OFFSET_POT_OORL) {
          // Transition: '<S164>:23'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_nvbt =
            MX_Gtwy_Control_IN_NORMAL_nwda;

          // Entry Internal 'NORMAL': '<S164>:4'
          // Transition: '<S164>:108'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_nbax =
            MX_Gtwy_Control_IN_Inactive;

          // Entry 'Inactive': '<S164>:106'
          MX_Gtwy_Control_B.state_LeftPot_l1es = NEUTRAL;
          MX_Gtwy_Control_DWork.base_Threshold_anks = (uint16_T)(int32_T)
            ((int32_T)CONSTANT_DATA->OFFSET_POT_CENTER_RATIO - (int32_T)
             CONSTANT_DATA->OFFSET_POT_DEADBAND);
          MX_Gtwy_Control_DWork.rod_Threshold_h3xp = (uint16_T)(int32_T)
            ((int32_T)CONSTANT_DATA->OFFSET_POT_CENTER_RATIO + (int32_T)
             CONSTANT_DATA->OFFSET_POT_DEADBAND);
          MX_Gtwy_Control_B.position_LeftPotOut = (int16_T)
            CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
        }
      }
      break;
    }
  }
}

// System initialize for enable system: '<S76>/Normal_Pot'
void MX_Gtwy_Control_Normal_Pot_Init(void)
{
  // SystemInitialize for Chart: '<S163>/Pot'
  MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration_gikl =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
  MX_Gtwy_Control_DWork.temporalCounter_i1_cczi = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State_groi =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_nvbt =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_nbax =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
  MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_eura =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_adkg =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
  MX_Gtwy_Control_DWork.temporalCounter_i2_kv1i = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_active_c104_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.offset_LeftPotCal = 0;
  MX_Gtwy_Control_DWork.state_LeftPotCal = 0U;
  MX_Gtwy_Control_DWork.base_Threshold_anks = 0U;
  MX_Gtwy_Control_DWork.rod_Threshold_h3xp = 0U;
  MX_Gtwy_Control_B.state_LeftPot_l1es = 0U;
  MX_Gtwy_Control_B.position_LeftPotOut = 0;

  // SystemInitialize for Outport: '<S163>/state_LeftPot'
  state_LeftPot = ((uint8_T)8U);

  // SystemInitialize for Outport: '<S163>/position_LeftPot'
  MX_Gtwy_Control_B.OutportBufferForposition_LeftPo = 500;

  // SystemInitialize for Outport: '<S163>/rm_LeftPot'
  rm_LeftPot = ((uint16_T)500U);
}

// System reset for enable system: '<S76>/Normal_Pot'
void MX_Gtwy_Contro_Normal_Pot_Reset(void)
{
  // SystemReset for Chart: '<S163>/Pot'
  MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration_gikl =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
  MX_Gtwy_Control_DWork.temporalCounter_i1_cczi = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State_groi =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_nvbt =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_nbax =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
  MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_eura =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_adkg =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ah1x;
  MX_Gtwy_Control_DWork.temporalCounter_i2_kv1i = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_active_c104_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.offset_LeftPotCal = 0;
  MX_Gtwy_Control_DWork.state_LeftPotCal = 0U;
  MX_Gtwy_Control_DWork.base_Threshold_anks = 0U;
  MX_Gtwy_Control_DWork.rod_Threshold_h3xp = 0U;
  MX_Gtwy_Control_B.state_LeftPot_l1es = 0U;
  MX_Gtwy_Control_B.position_LeftPotOut = 0;
}

// Disable for enable system: '<S76>/Normal_Pot'
void MX_Gtwy_Cont_Normal_Pot_Disable(void)
{
  // Disable for Outport: '<S163>/state_LeftPot'
  state_LeftPot = ((uint8_T)8U);

  // Disable for Outport: '<S163>/position_LeftPot'
  MX_Gtwy_Control_B.OutportBufferForposition_LeftPo = 500;

  // Disable for Outport: '<S163>/rm_LeftPot'
  rm_LeftPot = ((uint16_T)500U);
  MX_Gtwy_Control_DWork.Normal_Pot_MODE_kkjt = false;
}

// Output and update for enable system: '<S76>/Normal_Pot'
void MX_Gtwy_Control_Normal_Pot(void)
{
  uint16_T Gain_p3pk;
  int16_T DataTypeConversion_k01y;
  uint16_T Gain_p3pk_0;

  // Outputs for Enabled SubSystem: '<S76>/Normal_Pot' incorporates:
  //   EnablePort: '<S163>/Enable'

  if (MX_Gtwy_Control_B.LogicalOperator_avca) {
    if (!MX_Gtwy_Control_DWork.Normal_Pot_MODE_kkjt) {
      MX_Gtwy_Contro_Normal_Pot_Reset();
      MX_Gtwy_Control_DWork.Normal_Pot_MODE_kkjt = true;
    }

    // Gain: '<S165>/Gain' incorporates:
    //   Inport: '<Root>/ain_OffsetPot'
    //   Inport: '<Root>/ain_SensorSupply2'
    //   Product: '<S165>/Product'

    Gain_p3pk = (uint16_T)(uint32_T)((uint32_T)((uint32_T)
      CONSTANT_DATA->OFFSET_POT_RATIO_GAIN * (uint32_T)(uint16_T)((uint32_T)
      ain_SensorSupply2 == 0U ? MAX_uint32_T : (uint32_T)((uint32_T)((uint32_T)
      ain_OffsetPot << 15) / (uint32_T)ain_SensorSupply2))) >> 15);

    // Switch: '<S165>/Switch' incorporates:
    //   Constant: '<S165>/Constant1'
    //   Constant: '<S165>/Constant2'
    //   Constant: '<S166>/Constant'
    //   RelationalOperator: '<S166>/Compare'
    //   Saturate: '<S165>/Saturation'
    //   Sum: '<S165>/Sum'

    if (CONSTANT_DATA->EMEA_CONTROLS_REVERSE == NON_FUNCTIONAL) {
      // Saturate: '<S165>/Saturation'
      if (Gain_p3pk < ((uint16_T)1000U)) {
        rm_LeftPot = Gain_p3pk;
      } else {
        rm_LeftPot = ((uint16_T)1000U);
      }
    } else {
      if (Gain_p3pk < ((uint16_T)1000U)) {
        // Saturate: '<S165>/Saturation'
        Gain_p3pk_0 = Gain_p3pk;
      } else {
        // Saturate: '<S165>/Saturation'
        Gain_p3pk_0 = ((uint16_T)1000U);
      }

      rm_LeftPot = (uint16_T)(int32_T)((int32_T)((uint16_T)1000U) - (int32_T)
        Gain_p3pk_0);
    }

    // End of Switch: '<S165>/Switch'

    // DataTypeConversion: '<S163>/Data Type Conversion'
    DataTypeConversion_k01y = (int16_T)rm_LeftPot;

    // Chart: '<S163>/Pot'
    // Gateway: MX_Gtwy_Control/Inputs/EMEA_Left_Control/Normal_Pot/Pot
    if ((uint32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_cczi < 63U) {
      MX_Gtwy_Control_DWork.temporalCounter_i1_cczi = (uint8_T)(int32_T)
        ((int32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_cczi + 1);
    }

    if ((uint32_T)MX_Gtwy_Control_DWork.temporalCounter_i2_kv1i < 255U) {
      MX_Gtwy_Control_DWork.temporalCounter_i2_kv1i = (uint8_T)(int32_T)
        ((int32_T)MX_Gtwy_Control_DWork.temporalCounter_i2_kv1i + 1);
    }

    // During: MX_Gtwy_Control/Inputs/EMEA_Left_Control/Normal_Pot/Pot
    if ((uint32_T)
        MX_Gtwy_Control_DWork.bitsForTID0.is_active_c104_MX_Gtwy_Control == 0U)
    {
      // Entry: MX_Gtwy_Control/Inputs/EMEA_Left_Control/Normal_Pot/Pot
      MX_Gtwy_Control_DWork.bitsForTID0.is_active_c104_MX_Gtwy_Control = 1U;

      // Entry Internal: MX_Gtwy_Control/Inputs/EMEA_Left_Control/Normal_Pot/Pot 
      // Entry Internal 'Pot_Calibration': '<S164>:2'
      // Transition: '<S164>:42'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration_gikl =
        MX_Gtwy_Control_IN_InitDelay;
      MX_Gtwy_Control_DWork.temporalCounter_i1_cczi = 0U;

      // Entry 'InitDelay': '<S164>:14'
      MX_Gtwy_Control_DWork.state_LeftPotCal = INACTIVE;
      MX_Gtwy_Control_DWork.offset_LeftPotCal = 0;

      // Entry Internal 'Pot_State': '<S164>:9'
      // Transition: '<S164>:115'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State_groi =
        MX_Gtwy_Contr_IN_Supply_OK_mzcm;

      // Entry Internal 'Supply_OK': '<S164>:114'
      // Transition: '<S164>:43'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_nvbt =
        MX_Gtwy_Control_IN_NORMAL_nwda;

      // Entry Internal 'NORMAL': '<S164>:4'
      // Transition: '<S164>:108'
      MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_nbax =
        MX_Gtwy_Control_IN_Inactive;

      // Entry 'Inactive': '<S164>:106'
      MX_Gtwy_Control_B.state_LeftPot_l1es = NEUTRAL;
      MX_Gtwy_Control_DWork.base_Threshold_anks = (uint16_T)(int32_T)((int32_T)
        CONSTANT_DATA->OFFSET_POT_CENTER_RATIO - (int32_T)
        CONSTANT_DATA->OFFSET_POT_DEADBAND);
      MX_Gtwy_Control_DWork.rod_Threshold_h3xp = (uint16_T)(int32_T)((int32_T)
        CONSTANT_DATA->OFFSET_POT_CENTER_RATIO + (int32_T)
        CONSTANT_DATA->OFFSET_POT_DEADBAND);
      MX_Gtwy_Control_B.position_LeftPotOut = (int16_T)
        CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
    } else {
      // During 'Pot_Calibration': '<S164>:2'
      switch (MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration_gikl) {
       case MX_Gtwy_Control_IN_InitDelay:
        // During 'InitDelay': '<S164>:14'
        if (MX_Gtwy_Control_DWork.temporalCounter_i1_cczi >=
            MX_Gtwy_Control_ONE_SECOND_omgv) {
          // Transition: '<S164>:27'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration_gikl =
            MX_Gtwy_IN_Wait_For_Cal_Attempt;
        }
        break;

       case MX_Gtwy_IN_Wait_For_Cal_Attempt:
        // During 'Wait_For_Cal_Attempt': '<S164>:1'
        if ((MX_Gtwy_Control_B.UnitDelay13 &&
             (MX_Gtwy_Control_B.state_LeftPot_l1es != OORL) &&
             (MX_Gtwy_Control_B.state_LeftPot_l1es != OORH) &&
             (MX_Gtwy_Control_B.RateTransition10_bex1 == NORMAL)) ||
            ((state_Console == ACTIVE) && (state_Engine != ENGINE_CRANKING) &&
             (MX_Gtwy_Control_B.state_LeftPot_l1es != OORL) &&
             (MX_Gtwy_Control_B.state_LeftPot_l1es != OORH) &&
             (MX_Gtwy_Control_B.RateTransition10_bex1 == NORMAL))) {
          // Transition: '<S164>:118'
          // Transition: '<S164>:125'
          // Transition: '<S164>:28'
          // Transition: '<S164>:120'
          if (((int32_T)DataTypeConversion_k01y >= (int32_T)
               CONSTANT_DATA->EMEA_POT_CAL_DEADBAND_LOW) && ((int32_T)
               DataTypeConversion_k01y <= (int32_T)
               CONSTANT_DATA->EMEA_POT_CAL_DEADBAND_HIGH)) {
            // Transition: '<S164>:29'
            // Transition: '<S164>:32'
            MX_Gtwy_Control_DWork.state_LeftPotCal = NORMAL;
            MX_Gtwy_Control_DWork.offset_LeftPotCal = (int16_T)(int32_T)
              ((int32_T)(int16_T)CONSTANT_DATA->OFFSET_POT_CENTER_RATIO -
               (int32_T)DataTypeConversion_k01y);

            // Transition: '<S164>:39'
          } else {
            // Transition: '<S164>:137'
            if (MX_Gtwy_Control_DWork.state_LeftPotCal != NOT_IN_NEUTRAL) {
              // Transition: '<S164>:135'
              // Transition: '<S164>:136'
              MX_Gtwy_Control_DWork.state_LeftPotCal = NOT_IN_NEUTRAL;
              MX_Gtwy_Control_DWork.offset_LeftPotCal = 0;
              state_Buzzer = TRIPLE_SHORT_BEEP;
            } else {
              // Transition: '<S164>:133'
              state_Buzzer = BEEP_NONE;

              // Transition: '<S164>:138'
            }

            // Transition: '<S164>:134'
          }

          MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration_gikl =
            MX_Gtw_IN_Wait_For_New_Cal_jhju;
        }
        break;

       default:
        // During 'Wait_For_New_Cal': '<S164>:13'
        if ((state_Console != ACTIVE) || (state_Engine == ENGINE_CRANKING) ||
            (MX_Gtwy_Control_B.RateTransition10_bex1 != NORMAL)) {
          // Transition: '<S164>:41'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration_gikl =
            MX_Gtwy_IN_Wait_For_Cal_Attempt;
        } else {
          if (MX_Gtwy_Control_B.UnitDelay13) {
            // Transition: '<S164>:122'
            // Transition: '<S164>:123'
            // Transition: '<S164>:125'
            // Transition: '<S164>:120'
            if (((int32_T)DataTypeConversion_k01y >= (int32_T)
                 CONSTANT_DATA->EMEA_POT_CAL_DEADBAND_LOW) && ((int32_T)
                 DataTypeConversion_k01y <= (int32_T)
                 CONSTANT_DATA->EMEA_POT_CAL_DEADBAND_HIGH)) {
              // Transition: '<S164>:29'
              // Transition: '<S164>:32'
              MX_Gtwy_Control_DWork.state_LeftPotCal = NORMAL;
              MX_Gtwy_Control_DWork.offset_LeftPotCal = (int16_T)(int32_T)
                ((int32_T)(int16_T)CONSTANT_DATA->OFFSET_POT_CENTER_RATIO -
                 (int32_T)DataTypeConversion_k01y);

              // Transition: '<S164>:39'
            } else {
              // Transition: '<S164>:137'
              if (MX_Gtwy_Control_DWork.state_LeftPotCal != NOT_IN_NEUTRAL) {
                // Transition: '<S164>:135'
                // Transition: '<S164>:136'
                MX_Gtwy_Control_DWork.state_LeftPotCal = NOT_IN_NEUTRAL;
                MX_Gtwy_Control_DWork.offset_LeftPotCal = 0;
                state_Buzzer = TRIPLE_SHORT_BEEP;
              } else {
                // Transition: '<S164>:133'
                state_Buzzer = BEEP_NONE;

                // Transition: '<S164>:138'
              }

              // Transition: '<S164>:134'
            }

            MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration_gikl =
              MX_Gtw_IN_Wait_For_New_Cal_jhju;
          }
        }
        break;
      }

      // During 'Pot_State': '<S164>:9'
      if (MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State_groi ==
          MX_Gtwy_Control_IN_SupplyFault) {
        MX_Gtwy_Control_B.state_LeftPot_l1es = NORMAL;

        // During 'SupplyFault': '<S164>:110'
        if (MX_Gtwy_Control_B.RateTransition10_bex1 == NORMAL) {
          // Transition: '<S164>:112'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State_groi =
            MX_Gtwy_Contr_IN_Supply_OK_mzcm;

          // Entry Internal 'Supply_OK': '<S164>:114'
          // Transition: '<S164>:43'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_nvbt =
            MX_Gtwy_Control_IN_NORMAL_nwda;

          // Entry Internal 'NORMAL': '<S164>:4'
          // Transition: '<S164>:108'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_nbax =
            MX_Gtwy_Control_IN_Inactive;

          // Entry 'Inactive': '<S164>:106'
          MX_Gtwy_Control_B.state_LeftPot_l1es = NEUTRAL;
          MX_Gtwy_Control_DWork.base_Threshold_anks = (uint16_T)(int32_T)
            ((int32_T)CONSTANT_DATA->OFFSET_POT_CENTER_RATIO - (int32_T)
             CONSTANT_DATA->OFFSET_POT_DEADBAND);
          MX_Gtwy_Control_DWork.rod_Threshold_h3xp = (uint16_T)(int32_T)
            ((int32_T)CONSTANT_DATA->OFFSET_POT_CENTER_RATIO + (int32_T)
             CONSTANT_DATA->OFFSET_POT_DEADBAND);
          MX_Gtwy_Control_B.position_LeftPotOut = (int16_T)
            CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
        }
      } else {
        MX_Gtwy_Control_Supply_OK(&Gain_p3pk, &DataTypeConversion_k01y);
      }
    }

    // End of Chart: '<S163>/Pot'

    // SignalConversion: '<S163>/OutportBufferForposition_LeftPot'
    MX_Gtwy_Control_B.OutportBufferForposition_LeftPo =
      MX_Gtwy_Control_B.position_LeftPotOut;

    // SignalConversion: '<S163>/OutportBufferForstate_LeftPot'
    state_LeftPot = MX_Gtwy_Control_B.state_LeftPot_l1es;
  } else {
    if (MX_Gtwy_Control_DWork.Normal_Pot_MODE_kkjt) {
      MX_Gtwy_Cont_Normal_Pot_Disable();
    }
  }

  // End of Outputs for SubSystem: '<S76>/Normal_Pot'
}

// Function for Chart: '<S169>/Right_Pot'
static void MX_G_enter_internal_NORMAL_ifwk(void)
{
  // Entry Internal 'NORMAL': '<S171>:281'
  switch (MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL) {
   case MX_Gtwy_Con_IN_Base_Active_bhhn:
    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo =
      MX_Gtwy_Con_IN_Base_Active_bhhn;
    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL =
      MX_Gtwy_Con_IN_Base_Active_bhhn;

    // Entry 'Base_Active': '<S171>:292'
    MX_Gtwy_Control_B.state_RightPot_nzwp = BASE_ACTIVE;
    break;

   case MX_Gtwy_Control_IN_Neutral_o5nl:
    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo =
      MX_Gtwy_Control_IN_Neutral_o5nl;
    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL =
      MX_Gtwy_Control_IN_Neutral_o5nl;

    // Entry 'Neutral': '<S171>:290'
    MX_Gtwy_Control_B.state_RightPot_nzwp = NEUTRAL;
    break;

   case MX_Gtwy_Cont_IN_Rod_Active_esf2:
    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo =
      MX_Gtwy_Cont_IN_Rod_Active_esf2;
    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL =
      MX_Gtwy_Cont_IN_Rod_Active_esf2;

    // Entry 'Rod_Active': '<S171>:291'
    MX_Gtwy_Control_B.state_RightPot_nzwp = ROD_ACTIVE;
    break;

   default:
    // Transition: '<S171>:283'
    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo =
      MX_Gtwy_Control_IN_Neutral_o5nl;
    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL =
      MX_Gtwy_Control_IN_Neutral_o5nl;

    // Entry 'Neutral': '<S171>:290'
    MX_Gtwy_Control_B.state_RightPot_nzwp = NEUTRAL;
    break;
  }
}

// System initialize for enable system: '<S77>/Right Pot'
void MX_Gtwy_Control_RightPot_Init(void)
{
  // SystemInitialize for Chart: '<S169>/Right_Pot'
  MX_Gtwy_Control_DWork.bitsForTID0.is_Right_Pot_Neutral_Check =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ndhe;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Right_Pot_State =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ndhe;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_cgvo =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ndhe;
  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ndhe;
  MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL = MX_Gtwy_IN_NO_ACTIVE_CHILD_ndhe;
  MX_Gtwy_Control_DWork.temporalCounter_i1_jz1o = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_active_c48_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.offset_RightPotCal = 0;
  MX_Gtwy_Control_DWork.state_RightPotCal = 0U;
  MX_Gtwy_Control_DWork.base_Threshold_ehak = 0U;
  MX_Gtwy_Control_DWork.rod_Threshold_lp24 = 0U;
  MX_Gtwy_Control_B.state_RightPot_nzwp = 0U;
  MX_Gtwy_Control_B.position_RightPotOut = 0;

  // SystemInitialize for Outport: '<S169>/state_RightPot'
  state_RightPot = ((uint8_T)8U);

  // SystemInitialize for Outport: '<S169>/position_RightPot'
  position_RightPot = ((uint16_T)500U);

  // SystemInitialize for Outport: '<S169>/rm_RightPot'
  rm_RightPot = ((uint16_T)500U);
}

// System reset for enable system: '<S77>/Right Pot'
void MX_Gtwy_Control_RightPot_Reset(void)
{
  // SystemReset for Chart: '<S169>/Right_Pot'
  MX_Gtwy_Control_DWork.bitsForTID0.is_Right_Pot_Neutral_Check =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ndhe;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Right_Pot_State =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ndhe;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_cgvo =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ndhe;
  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ndhe;
  MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL = MX_Gtwy_IN_NO_ACTIVE_CHILD_ndhe;
  MX_Gtwy_Control_DWork.temporalCounter_i1_jz1o = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_active_c48_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.offset_RightPotCal = 0;
  MX_Gtwy_Control_DWork.state_RightPotCal = 0U;
  MX_Gtwy_Control_DWork.base_Threshold_ehak = 0U;
  MX_Gtwy_Control_DWork.rod_Threshold_lp24 = 0U;
  MX_Gtwy_Control_B.state_RightPot_nzwp = 0U;
  MX_Gtwy_Control_B.position_RightPotOut = 0;
}

// Disable for enable system: '<S77>/Right Pot'
void MX_Gtwy_Contro_RightPot_Disable(void)
{
  // Disable for Outport: '<S169>/state_RightPot'
  state_RightPot = ((uint8_T)8U);

  // Disable for Outport: '<S169>/position_RightPot'
  position_RightPot = ((uint16_T)500U);

  // Disable for Outport: '<S169>/rm_RightPot'
  rm_RightPot = ((uint16_T)500U);
  MX_Gtwy_Control_DWork.RightPot_MODE = false;
}

// Output and update for enable system: '<S77>/Right Pot'
void MX_Gtwy_Control_RightPot(void)
{
  uint16_T Gain_pnwx;
  int16_T DataTypeConversion_asaf;
  uint16_T Gain_pnwx_0;

  // Outputs for Enabled SubSystem: '<S77>/Right Pot' incorporates:
  //   EnablePort: '<S169>/Enable'

  if (MX_Gtwy_Control_B.LogicalOperator_gls4) {
    if (!MX_Gtwy_Control_DWork.RightPot_MODE) {
      MX_Gtwy_Control_RightPot_Reset();
      MX_Gtwy_Control_DWork.RightPot_MODE = true;
    }

    // Gain: '<S170>/Gain' incorporates:
    //   Inport: '<Root>/ain_AuxPot'
    //   Inport: '<Root>/ain_SensorSupply2'
    //   Product: '<S170>/Product'

    Gain_pnwx = (uint16_T)(uint32_T)((uint32_T)((uint32_T)
      CONSTANT_DATA->AUXPOT_RATIO_GAIN * (uint32_T)(uint16_T)((uint32_T)
      ain_SensorSupply2 == 0U ? MAX_uint32_T : (uint32_T)((uint32_T)((uint32_T)
      ain_AuxPot << 15) / (uint32_T)ain_SensorSupply2))) >> 15);

    // Switch: '<S170>/Switch' incorporates:
    //   Constant: '<S170>/Constant1'
    //   Constant: '<S170>/Constant2'
    //   Constant: '<S172>/Constant'
    //   RelationalOperator: '<S172>/Compare'
    //   Saturate: '<S170>/Saturation'
    //   Sum: '<S170>/Sum'

    if (CONSTANT_DATA->EMEA_CONTROLS_REVERSE == NON_FUNCTIONAL) {
      // Saturate: '<S170>/Saturation'
      if (Gain_pnwx < ((uint16_T)1000U)) {
        rm_RightPot = Gain_pnwx;
      } else {
        rm_RightPot = ((uint16_T)1000U);
      }
    } else {
      if (Gain_pnwx < ((uint16_T)1000U)) {
        // Saturate: '<S170>/Saturation'
        Gain_pnwx_0 = Gain_pnwx;
      } else {
        // Saturate: '<S170>/Saturation'
        Gain_pnwx_0 = ((uint16_T)1000U);
      }

      rm_RightPot = (uint16_T)(int32_T)((int32_T)((uint16_T)1000U) - (int32_T)
        Gain_pnwx_0);
    }

    // End of Switch: '<S170>/Switch'

    // DataTypeConversion: '<S169>/Data Type Conversion'
    DataTypeConversion_asaf = (int16_T)rm_RightPot;

    // Chart: '<S169>/Right_Pot'
    // Gateway: MX_Gtwy_Control/Inputs/EMEA_Right_Control/Right Pot/Right_Pot
    if ((uint32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_jz1o < 255U) {
      MX_Gtwy_Control_DWork.temporalCounter_i1_jz1o = (uint8_T)(int32_T)
        ((int32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_jz1o + 1);
    }

    // During: MX_Gtwy_Control/Inputs/EMEA_Right_Control/Right Pot/Right_Pot
    if ((uint32_T)
        MX_Gtwy_Control_DWork.bitsForTID0.is_active_c48_MX_Gtwy_Control == 0U) {
      // Entry: MX_Gtwy_Control/Inputs/EMEA_Right_Control/Right Pot/Right_Pot
      MX_Gtwy_Control_DWork.bitsForTID0.is_active_c48_MX_Gtwy_Control = 1U;

      // Entry Internal: MX_Gtwy_Control/Inputs/EMEA_Right_Control/Right Pot/Right_Pot 
      // Entry Internal 'Right_Pot_Neutral_Check': '<S171>:339'
      // Transition: '<S171>:350'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Right_Pot_Neutral_Check =
        MX_Gtwy_Cont_IN_Initialize_h1pp;

      // Entry 'Initialize': '<S171>:368'
      MX_Gtwy_Control_DWork.state_RightPotCal = NORMAL;
      MX_Gtwy_Control_DWork.offset_RightPotCal = 0;

      // Entry Internal 'Right_Pot_State': '<S171>:265'
      // Transition: '<S171>:266'
      MX_Gtwy_Control_DWork.base_Threshold_ehak = (uint16_T)(int32_T)((int32_T)
        CONSTANT_DATA->AUXPOT_CENTER_RATIO - (int32_T)
        CONSTANT_DATA->AUXPOT_DEADBAND);
      MX_Gtwy_Control_DWork.rod_Threshold_lp24 = (uint16_T)(int32_T)((int32_T)
        CONSTANT_DATA->AUXPOT_CENTER_RATIO + (int32_T)
        CONSTANT_DATA->AUXPOT_DEADBAND);
      MX_Gtwy_Control_DWork.bitsForTID0.is_Right_Pot_State =
        MX_Gtwy_Contr_IN_Supply_OK_nhl1;

      // Entry Internal 'Supply_OK': '<S171>:269'
      // Transition: '<S171>:270'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_cgvo =
        MX_Gtwy_Control_IN_NORMAL_c0wi;

      // Entry 'NORMAL': '<S171>:281'
      MX_Gtwy_Control_B.position_RightPotOut = (int16_T)(int32_T)((int32_T)
        DataTypeConversion_asaf + (int32_T)
        MX_Gtwy_Control_DWork.offset_RightPotCal);
      MX_G_enter_internal_NORMAL_ifwk();
    } else {
      // During 'Right_Pot_Neutral_Check': '<S171>:339'
      switch (MX_Gtwy_Control_DWork.bitsForTID0.is_Right_Pot_Neutral_Check) {
       case MX_Gtwy_Cont_IN_Initialize_h1pp:
        // During 'Initialize': '<S171>:368'
        // Transition: '<S171>:351'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Right_Pot_Neutral_Check =
          MX_Gtwy_Co_IN_WaitForPress_lmmj;
        break;

       case MX_Gtwy_Co_IN_WaitForPress_lmmj:
        // During 'WaitForPress': '<S171>:369'
        if ((((MX_Gtwy_Control_B.UnitDelay9 == AUX_FLOW_LOW) ||
              (MX_Gtwy_Control_B.UnitDelay9 == AUX_FLOW_MEDIUM) ||
              (MX_Gtwy_Control_B.UnitDelay9 == AUX_FLOW_STANDARD) ||
              (MX_Gtwy_Control_B.UnitDelay9 == AUX_FLOW_HIGH)) && (state_Console
              == ACTIVE) && (state_Engine != ENGINE_CRANKING) &&
             (MX_Gtwy_Control_B.state_RightPot_nzwp != OORL) &&
             (MX_Gtwy_Control_B.state_RightPot_nzwp != OORH) &&
             (MX_Gtwy_Control_B.RateTransition9_nsj3 == NORMAL)) || (((((int32_T)
                aux_DebounceButton != 0) || ((int32_T)aux_DetentHold != 0)) && (
               !MX_Gtwy_Control_B.UnitDelay14) && (MX_Gtwy_Control_B.UnitDelay10
               != MODE_RIGHT_OFFSET) && ((MX_Gtwy_Control_B.UnitDelay17 ==
                INACTIVE) || (MX_Gtwy_Control_B.UnitDelay9 == AUX_FLOW_INACTIVE))
              && (MX_Gtwy_Control_B.state_RightPot_nzwp != OORL) &&
              (MX_Gtwy_Control_B.state_RightPot_nzwp != OORH) &&
              (MX_Gtwy_Control_B.RateTransition9_nsj3 == NORMAL)) ||
             (MX_Gtwy_Control_B.UnitDelay15 &&
              (MX_Gtwy_Control_B.state_RightPot_nzwp != OORL) &&
              (MX_Gtwy_Control_B.state_RightPot_nzwp != OORH) &&
              (MX_Gtwy_Control_B.RateTransition9_nsj3 == NORMAL)))) {
          // Transition: '<S171>:352'
          // Transition: '<S171>:361'
          // Transition: '<S171>:376'
          // Transition: '<S171>:374'
          // Transition: '<S171>:362'
          // Transition: '<S171>:355'
          // Transition: '<S171>:353'
          if (((int32_T)DataTypeConversion_asaf >= (int32_T)
               CONSTANT_DATA->EMEA_POT_CAL_DEADBAND_LOW) && ((int32_T)
               DataTypeConversion_asaf <= (int32_T)
               CONSTANT_DATA->EMEA_POT_CAL_DEADBAND_HIGH)) {
            // Transition: '<S171>:354'
            // Transition: '<S171>:357'
            MX_Gtwy_Control_DWork.state_RightPotCal = NORMAL;
            MX_Gtwy_Control_DWork.offset_RightPotCal = (int16_T)(int32_T)
              ((int32_T)(int16_T)CONSTANT_DATA->AUXPOT_CENTER_RATIO - (int32_T)
               DataTypeConversion_asaf);

            // Transition: '<S171>:363'
          } else {
            // Transition: '<S171>:356'
            if (MX_Gtwy_Control_B.state_RightPot_nzwp != NOT_IN_NEUTRAL) {
              // Transition: '<S171>:358'
              // Transition: '<S171>:360'
              MX_Gtwy_Control_DWork.state_RightPotCal = NOT_IN_NEUTRAL;
              MX_Gtwy_Control_DWork.offset_RightPotCal = 0;
              state_Buzzer = TRIPLE_SHORT_BEEP;
            } else {
              // Transition: '<S171>:359'
              state_Buzzer = BEEP_NONE;

              // Transition: '<S171>:364'
            }

            // Transition: '<S171>:365'
          }

          MX_Gtwy_Control_DWork.bitsForTID0.is_Right_Pot_Neutral_Check =
            MX_Gtw_IN_Wait_For_New_Cal_dzyf;
        }
        break;

       default:
        // During 'Wait_For_New_Cal': '<S171>:370'
        if ((state_Console != ACTIVE) || (state_Engine == ENGINE_CRANKING) ||
            (MX_Gtwy_Control_B.state_RightPot_nzwp == OORL) ||
            (MX_Gtwy_Control_B.state_RightPot_nzwp == OORH) ||
            (MX_Gtwy_Control_B.RateTransition9_nsj3 != NORMAL)) {
          // Transition: '<S171>:367'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Right_Pot_Neutral_Check =
            MX_Gtwy_Co_IN_WaitForPress_lmmj;
        } else {
          if (((((int32_T)aux_DebounceButton != 0) || ((int32_T)aux_DetentHold
                 != 0)) && (!MX_Gtwy_Control_B.UnitDelay14) &&
               ((MX_Gtwy_Control_B.UnitDelay10 != MODE_RIGHT_OFFSET) ||
                (MX_Gtwy_Control_DWork.state_RightPotCal == NOT_IN_NEUTRAL)) &&
               ((MX_Gtwy_Control_B.UnitDelay17 == INACTIVE) ||
                (MX_Gtwy_Control_B.UnitDelay9 == AUX_FLOW_INACTIVE)) &&
               (MX_Gtwy_Control_B.state_RightPot_nzwp != OORL) &&
               (MX_Gtwy_Control_B.state_RightPot_nzwp != OORH) &&
               (MX_Gtwy_Control_B.RateTransition9_nsj3 == NORMAL)) ||
              MX_Gtwy_Control_B.UnitDelay15) {
            // Transition: '<S171>:366'
            // Transition: '<S171>:375'
            // Transition: '<S171>:374'
            // Transition: '<S171>:362'
            // Transition: '<S171>:355'
            // Transition: '<S171>:353'
            if (((int32_T)DataTypeConversion_asaf >= (int32_T)
                 CONSTANT_DATA->EMEA_POT_CAL_DEADBAND_LOW) && ((int32_T)
                 DataTypeConversion_asaf <= (int32_T)
                 CONSTANT_DATA->EMEA_POT_CAL_DEADBAND_HIGH)) {
              // Transition: '<S171>:354'
              // Transition: '<S171>:357'
              MX_Gtwy_Control_DWork.state_RightPotCal = NORMAL;
              MX_Gtwy_Control_DWork.offset_RightPotCal = (int16_T)(int32_T)
                ((int32_T)(int16_T)CONSTANT_DATA->AUXPOT_CENTER_RATIO - (int32_T)
                 DataTypeConversion_asaf);

              // Transition: '<S171>:363'
            } else {
              // Transition: '<S171>:356'
              if (MX_Gtwy_Control_B.state_RightPot_nzwp != NOT_IN_NEUTRAL) {
                // Transition: '<S171>:358'
                // Transition: '<S171>:360'
                MX_Gtwy_Control_DWork.state_RightPotCal = NOT_IN_NEUTRAL;
                MX_Gtwy_Control_DWork.offset_RightPotCal = 0;
                state_Buzzer = TRIPLE_SHORT_BEEP;
              } else {
                // Transition: '<S171>:359'
                state_Buzzer = BEEP_NONE;

                // Transition: '<S171>:364'
              }

              // Transition: '<S171>:365'
            }

            MX_Gtwy_Control_DWork.bitsForTID0.is_Right_Pot_Neutral_Check =
              MX_Gtw_IN_Wait_For_New_Cal_dzyf;
          }
        }
        break;
      }

      // During 'Right_Pot_State': '<S171>:265'
      if (MX_Gtwy_Control_DWork.bitsForTID0.is_Right_Pot_State ==
          MX_Gtwy_Co_IN_Supply_Fault_mt5d) {
        MX_Gtwy_Control_B.state_RightPot_nzwp = NORMAL;

        // During 'Supply_Fault': '<S171>:298'
        if (MX_Gtwy_Control_B.RateTransition9_nsj3 == NORMAL) {
          // Transition: '<S171>:268'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Right_Pot_State =
            MX_Gtwy_Contr_IN_Supply_OK_nhl1;

          // Entry Internal 'Supply_OK': '<S171>:269'
          // Transition: '<S171>:270'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_cgvo =
            MX_Gtwy_Control_IN_NORMAL_c0wi;

          // Entry 'NORMAL': '<S171>:281'
          MX_Gtwy_Control_B.position_RightPotOut = (int16_T)(int32_T)((int32_T)
            DataTypeConversion_asaf + (int32_T)
            MX_Gtwy_Control_DWork.offset_RightPotCal);
          MX_G_enter_internal_NORMAL_ifwk();
        }
      } else {
        // During 'Supply_OK': '<S171>:269'
        if (MX_Gtwy_Control_B.RateTransition9_nsj3 != NORMAL) {
          // Transition: '<S171>:267'
          // Exit Internal 'Supply_OK': '<S171>:269'
          // Exit Internal 'NORMAL': '<S171>:281'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_ndhe;
          MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_cgvo =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_ndhe;
          MX_Gtwy_Control_DWork.bitsForTID0.is_Right_Pot_State =
            MX_Gtwy_Co_IN_Supply_Fault_mt5d;

          // Entry 'Supply_Fault': '<S171>:298'
          MX_Gtwy_Control_B.state_RightPot_nzwp = NORMAL;
          MX_Gtwy_Control_B.position_RightPotOut = (int16_T)
            CONSTANT_DATA->AUXPOT_CENTER_RATIO;
        } else {
          switch (MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_cgvo) {
           case MX_Gtwy_Control_IN_NORMAL_c0wi:
            // During 'NORMAL': '<S171>:281'
            if (Gain_pnwx > CONSTANT_DATA->AUXPOT_OORH) {
              // Transition: '<S171>:271'
              // Exit Internal 'NORMAL': '<S171>:281'
              MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo =
                MX_Gtwy_IN_NO_ACTIVE_CHILD_ndhe;
              MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_cgvo =
                MX_Gtwy_C_IN_debounce_OORH_abjr;
              MX_Gtwy_Control_DWork.temporalCounter_i1_jz1o = 0U;

              // Entry 'debounce_OORH': '<S171>:294'
              MX_Gtwy_Control_B.position_RightPotOut = (int16_T)
                CONSTANT_DATA->AUXPOT_CENTER_RATIO;
            } else if (Gain_pnwx < CONSTANT_DATA->AUXPOT_OORL) {
              // Transition: '<S171>:275'
              // Exit Internal 'NORMAL': '<S171>:281'
              MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo =
                MX_Gtwy_IN_NO_ACTIVE_CHILD_ndhe;
              MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_cgvo =
                MX_Gtwy_C_IN_debounce_OORL_gtjq;
              MX_Gtwy_Control_DWork.temporalCounter_i1_jz1o = 0U;

              // Entry 'debounce_OORL': '<S171>:296'
              MX_Gtwy_Control_B.position_RightPotOut = (int16_T)
                CONSTANT_DATA->AUXPOT_CENTER_RATIO;
            } else if (MX_Gtwy_Control_DWork.state_RightPotCal == NOT_IN_NEUTRAL)
            {
              // Transition: '<S171>:279'
              // Exit Internal 'NORMAL': '<S171>:281'
              MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo =
                MX_Gtwy_IN_NO_ACTIVE_CHILD_ndhe;
              MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_cgvo =
                MX_Gtwy__IN_NOT_IN_NEUTRAL_has4;

              // Entry 'NOT_IN_NEUTRAL': '<S171>:297'
              MX_Gtwy_Control_B.state_RightPot_nzwp = NOT_IN_NEUTRAL;
              MX_Gtwy_Control_B.position_RightPotOut = (int16_T)
                CONSTANT_DATA->AUXPOT_CENTER_RATIO;
            } else {
              DataTypeConversion_asaf = (int16_T)(int32_T)((int32_T)
                DataTypeConversion_asaf + (int32_T)
                MX_Gtwy_Control_DWork.offset_RightPotCal);
              MX_Gtwy_Control_B.position_RightPotOut = DataTypeConversion_asaf;
              switch (MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo) {
               case MX_Gtwy_Con_IN_Base_Active_bhhn:
                MX_Gtwy_Control_B.state_RightPot_nzwp = BASE_ACTIVE;

                // During 'Base_Active': '<S171>:292'
                if (((int32_T)DataTypeConversion_asaf >= (int32_T)
                     MX_Gtwy_Control_DWork.rod_Threshold_lp24) && ((int32_T)
                     DataTypeConversion_asaf > (int32_T)
                     MX_Gtwy_Control_DWork.base_Threshold_ehak)) {
                  // Transition: '<S171>:289'
                  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo =
                    MX_Gtwy_Cont_IN_Rod_Active_esf2;
                  MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL =
                    MX_Gtwy_Cont_IN_Rod_Active_esf2;

                  // Entry 'Rod_Active': '<S171>:291'
                  MX_Gtwy_Control_B.state_RightPot_nzwp = ROD_ACTIVE;
                } else {
                  if ((int32_T)DataTypeConversion_asaf >= (int32_T)
                      MX_Gtwy_Control_DWork.base_Threshold_ehak) {
                    // Transition: '<S171>:287'
                    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo =
                      MX_Gtwy_Control_IN_Neutral_o5nl;
                    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL =
                      MX_Gtwy_Control_IN_Neutral_o5nl;

                    // Entry 'Neutral': '<S171>:290'
                    MX_Gtwy_Control_B.state_RightPot_nzwp = NEUTRAL;
                  }
                }
                break;

               case MX_Gtwy_Control_IN_Neutral_o5nl:
                MX_Gtwy_Control_B.state_RightPot_nzwp = NEUTRAL;

                // During 'Neutral': '<S171>:290'
                if ((int32_T)DataTypeConversion_asaf > (int32_T)
                    MX_Gtwy_Control_DWork.rod_Threshold_lp24) {
                  // Transition: '<S171>:285'
                  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo =
                    MX_Gtwy_Cont_IN_Rod_Active_esf2;
                  MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL =
                    MX_Gtwy_Cont_IN_Rod_Active_esf2;

                  // Entry 'Rod_Active': '<S171>:291'
                  MX_Gtwy_Control_B.state_RightPot_nzwp = ROD_ACTIVE;
                } else {
                  if ((int32_T)DataTypeConversion_asaf < (int32_T)
                      MX_Gtwy_Control_DWork.base_Threshold_ehak) {
                    // Transition: '<S171>:284'
                    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo =
                      MX_Gtwy_Con_IN_Base_Active_bhhn;
                    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL =
                      MX_Gtwy_Con_IN_Base_Active_bhhn;

                    // Entry 'Base_Active': '<S171>:292'
                    MX_Gtwy_Control_B.state_RightPot_nzwp = BASE_ACTIVE;
                  }
                }
                break;

               default:
                MX_Gtwy_Control_B.state_RightPot_nzwp = ROD_ACTIVE;

                // During 'Rod_Active': '<S171>:291'
                if (((int32_T)DataTypeConversion_asaf <= (int32_T)
                     MX_Gtwy_Control_DWork.rod_Threshold_lp24) && ((int32_T)
                     DataTypeConversion_asaf < (int32_T)
                     MX_Gtwy_Control_DWork.base_Threshold_ehak)) {
                  // Transition: '<S171>:288'
                  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo =
                    MX_Gtwy_Con_IN_Base_Active_bhhn;
                  MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL =
                    MX_Gtwy_Con_IN_Base_Active_bhhn;

                  // Entry 'Base_Active': '<S171>:292'
                  MX_Gtwy_Control_B.state_RightPot_nzwp = BASE_ACTIVE;
                } else {
                  if ((int32_T)DataTypeConversion_asaf <= (int32_T)
                      MX_Gtwy_Control_DWork.rod_Threshold_lp24) {
                    // Transition: '<S171>:286'
                    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_b4lo =
                      MX_Gtwy_Control_IN_Neutral_o5nl;
                    MX_Gtwy_Control_DWork.bitsForTID0.was_NORMAL =
                      MX_Gtwy_Control_IN_Neutral_o5nl;

                    // Entry 'Neutral': '<S171>:290'
                    MX_Gtwy_Control_B.state_RightPot_nzwp = NEUTRAL;
                  }
                }
                break;
              }
            }
            break;

           case MX_Gtwy__IN_NOT_IN_NEUTRAL_has4:
            MX_Gtwy_Control_B.state_RightPot_nzwp = NOT_IN_NEUTRAL;

            // During 'NOT_IN_NEUTRAL': '<S171>:297'
            if (MX_Gtwy_Control_DWork.state_RightPotCal != NOT_IN_NEUTRAL) {
              // Transition: '<S171>:280'
              MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_cgvo =
                MX_Gtwy_Control_IN_NORMAL_c0wi;

              // Entry 'NORMAL': '<S171>:281'
              MX_Gtwy_Control_B.position_RightPotOut = (int16_T)(int32_T)
                ((int32_T)DataTypeConversion_asaf + (int32_T)
                 MX_Gtwy_Control_DWork.offset_RightPotCal);
              MX_G_enter_internal_NORMAL_ifwk();
            }
            break;

           case MX_Gtwy_Control_IN_OORH_jkoi:
            MX_Gtwy_Control_B.state_RightPot_nzwp = OORH;

            // During 'OORH': '<S171>:293'
            break;

           case MX_Gtwy_Control_IN_OORL_arko:
            MX_Gtwy_Control_B.state_RightPot_nzwp = OORL;

            // During 'OORL': '<S171>:295'
            break;

           case MX_Gtwy_C_IN_debounce_OORH_abjr:
            // During 'debounce_OORH': '<S171>:294'
            if (MX_Gtwy_Control_DWork.temporalCounter_i1_jz1o >=
                CONSTANT_DATA->AUXPOT_OOR_DB) {
              // Transition: '<S171>:272'
              MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_cgvo =
                MX_Gtwy_Control_IN_OORH_jkoi;

              // Entry 'OORH': '<S171>:293'
              MX_Gtwy_Control_B.state_RightPot_nzwp = OORH;
            } else {
              if (Gain_pnwx <= CONSTANT_DATA->AUXPOT_OORH) {
                // Transition: '<S171>:273'
                MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_cgvo =
                  MX_Gtwy_Control_IN_NORMAL_c0wi;

                // Entry 'NORMAL': '<S171>:281'
                MX_Gtwy_Control_B.position_RightPotOut = (int16_T)(int32_T)
                  ((int32_T)DataTypeConversion_asaf + (int32_T)
                   MX_Gtwy_Control_DWork.offset_RightPotCal);
                MX_G_enter_internal_NORMAL_ifwk();
              }
            }
            break;

           default:
            // During 'debounce_OORL': '<S171>:296'
            if (MX_Gtwy_Control_DWork.temporalCounter_i1_jz1o >=
                CONSTANT_DATA->AUXPOT_OOR_DB) {
              // Transition: '<S171>:276'
              MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_cgvo =
                MX_Gtwy_Control_IN_OORL_arko;

              // Entry 'OORL': '<S171>:295'
              MX_Gtwy_Control_B.state_RightPot_nzwp = OORL;
            } else {
              if (Gain_pnwx >= CONSTANT_DATA->AUXPOT_OORL) {
                // Transition: '<S171>:277'
                MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK_cgvo =
                  MX_Gtwy_Control_IN_NORMAL_c0wi;

                // Entry 'NORMAL': '<S171>:281'
                MX_Gtwy_Control_B.position_RightPotOut = (int16_T)(int32_T)
                  ((int32_T)DataTypeConversion_asaf + (int32_T)
                   MX_Gtwy_Control_DWork.offset_RightPotCal);
                MX_G_enter_internal_NORMAL_ifwk();
              }
            }
            break;
          }
        }
      }
    }

    // End of Chart: '<S169>/Right_Pot'

    // SignalConversion: '<S169>/OutportBufferForstate_RightPot'
    state_RightPot = MX_Gtwy_Control_B.state_RightPot_nzwp;

    // DataTypeConversion: '<S169>/Data Type Conversion3'
    Gain_pnwx = (uint16_T)MX_Gtwy_Control_B.position_RightPotOut;

    // Saturate: '<S169>/Saturation'
    if (Gain_pnwx < ((uint16_T)1000U)) {
      position_RightPot = Gain_pnwx;
    } else {
      position_RightPot = ((uint16_T)1000U);
    }

    // End of Saturate: '<S169>/Saturation'
  } else {
    if (MX_Gtwy_Control_DWork.RightPot_MODE) {
      MX_Gtwy_Contro_RightPot_Disable();
    }
  }

  // End of Outputs for SubSystem: '<S77>/Right Pot'
}

// Function for Chart: '<S175>/ErrorDetection'
static void MX_Gtwy_Control_SENSOR(void)
{
  // During 'SENSOR': '<S178>:108'
  // During 'VALUE': '<S178>:22'
  if (MX_Gtwy_Control_DWork.bitsForTID1.is_VALUE_n0kh ==
      MX_Gtwy_Control_IN_INIT_pb2u) {
    // During 'INIT': '<S178>:23'
    if (MX_Gtwy_Control_B.RateTransition12 == SYS_NORMAL) {
      // Transition: '<S178>:59'
      MX_Gtwy_Control_DWork.bitsForTID1.is_VALUE_n0kh =
        MX_Gtwy_Control_IN_NORMAL_jvma;
    }
  } else {
    // During 'NORMAL': '<S178>:24'
    MX_Gtwy_Control_B.flt_EOP_d3se = MX_Gtwy_Control_B.flt_EOP_in;
  }

  // During 'STATE': '<S178>:1'
  switch (MX_Gtwy_Control_DWork.bitsForTID1.is_STATE) {
   case MX_Gtwy_IN_NON_FUNCTIONAL_cpdob:
    MX_Gtwy_Control_B.state_EOPSr_k5no = NORMAL;

    // During 'NON_FUNCTIONAL': '<S178>:2'
    if ((MX_Gtwy_Control_B.state_SensorSupply == NORMAL) &&
        (MX_Gtwy_Control_B.RateTransition12 == SYS_NORMAL)) {
      // Transition: '<S178>:48'
      MX_Gtwy_Control_DWork.bitsForTID1.is_STATE =
        MX_Gtwy_Control_IN_NORMAL_jvma;

      // Entry Internal 'NORMAL': '<S178>:3'
      // Transition: '<S178>:33'
      MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_py0w =
        MX_Gtwy_Control_IN_NORMAL_jvmau;

      // Entry Internal 'NORMAL': '<S178>:4'
      // Transition: '<S178>:35'
      MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_gzef =
        MX_Gtwy_Contro_IN_DEBOUNCE_n0jr;

      // Entry 'DEBOUNCE': '<S178>:6'
      MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
    }
    break;

   case MX_Gtwy_Control_IN_NORMAL_jvma:
    // During 'NORMAL': '<S178>:3'
    if ((MX_Gtwy_Control_B.state_SensorSupply != NORMAL) ||
        (MX_Gtwy_Control_B.RateTransition12 != SYS_NORMAL)) {
      // Transition: '<S178>:47'
      // Exit Internal 'NORMAL': '<S178>:3'
      // Exit Internal 'EXTREMELY_LOW': '<S178>:7'
      MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_afl1 =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
      MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_py0w =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;

      // Exit Internal 'LOW': '<S178>:10'
      MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_isyi =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;

      // Exit Internal 'NORMAL': '<S178>:4'
      MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_gzef =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;

      // Exit Internal 'SHUTDOWN': '<S178>:13'
      MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_nwv4 =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
      MX_Gtwy_Control_DWork.bitsForTID1.is_STATE =
        MX_Gtwy_IN_NON_FUNCTIONAL_cpdob;

      // Entry 'NON_FUNCTIONAL': '<S178>:2'
      MX_Gtwy_Control_B.state_EOPSr_k5no = NORMAL;
    } else if ((MX_Gtwy_Control_B.DataTypeConversion1_ntef <=
                CONSTANT_DATA->EOP_OORL) && (MX_Gtwy_Control_B.state_EOPSr_k5no
                != SHUTDOWN)) {
      // Transition: '<S178>:51'
      // Exit Internal 'NORMAL': '<S178>:3'
      // Exit Internal 'EXTREMELY_LOW': '<S178>:7'
      MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_afl1 =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
      MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_py0w =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;

      // Exit Internal 'LOW': '<S178>:10'
      MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_isyi =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;

      // Exit Internal 'NORMAL': '<S178>:4'
      MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_gzef =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;

      // Exit Internal 'SHUTDOWN': '<S178>:13'
      MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_nwv4 =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
      MX_Gtwy_Control_DWork.bitsForTID1.is_STATE =
        MX_Gtw_IN_OUT_OF_RANGE_LOW_n05d;

      // Entry Internal 'OUT_OF_RANGE_LOW': '<S178>:19'
      // Transition: '<S178>:45'
      MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_LOW =
        MX_Gtwy_Contro_IN_DEBOUNCE_n0jr;

      // Entry 'DEBOUNCE': '<S178>:21'
      MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
    } else if ((MX_Gtwy_Control_B.DataTypeConversion1_ntef >=
                CONSTANT_DATA->EOP_OORH) && (MX_Gtwy_Control_B.state_EOPSr_k5no
                != SHUTDOWN)) {
      // Transition: '<S178>:49'
      // Exit Internal 'NORMAL': '<S178>:3'
      // Exit Internal 'EXTREMELY_LOW': '<S178>:7'
      MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_afl1 =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
      MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_py0w =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;

      // Exit Internal 'LOW': '<S178>:10'
      MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_isyi =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;

      // Exit Internal 'NORMAL': '<S178>:4'
      MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_gzef =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;

      // Exit Internal 'SHUTDOWN': '<S178>:13'
      MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_nwv4 =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
      MX_Gtwy_Control_DWork.bitsForTID1.is_STATE =
        MX_Gt_IN_OUT_OF_RANGE_HIGH_jp15;

      // Entry Internal 'OUT_OF_RANGE_HIGH': '<S178>:16'
      // Transition: '<S178>:43'
      MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_HIGH =
        MX_Gtwy_Contro_IN_DEBOUNCE_n0jr;

      // Entry 'DEBOUNCE': '<S178>:18'
      MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
    } else {
      switch (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_py0w) {
       case MX_Gtwy_Contro_IN_EXTREMELY_LOW:
        // During 'EXTREMELY_LOW': '<S178>:7'
        if (((int32_T)MX_Gtwy_Control_B.flt_EOP_in > (int32_T)((int32_T)
              MX_Gtwy_Control_B.level_ShutdownEOP_eqoa + (int32_T)
              CONSTANT_DATA->PRESSURE_HYSTERESIS)) &&
            (MX_Gtwy_Control_B.flt_EOP_in <=
             MX_Gtwy_Control_B.level_WarningEOP_cn2w)) {
          // Transition: '<S178>:27'
          // Exit Internal 'EXTREMELY_LOW': '<S178>:7'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_afl1 =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_py0w =
            MX_Gtwy_Control_IN_LOW;

          // Entry Internal 'LOW': '<S178>:10'
          // Transition: '<S178>:39'
          MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_isyi =
            MX_Gtwy_Contro_IN_DEBOUNCE_n0jr;

          // Entry 'DEBOUNCE': '<S178>:12'
          MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
        } else if ((CONSTANT_DATA->SHUTDOWN_FUNCTION != NON_FUNCTIONAL) &&
                   (MX_Gtwy_Control_B.state_EOPSr_k5no == EXTREMELY_LOW)) {
          // Transition: '<S178>:26'
          // Exit Internal 'EXTREMELY_LOW': '<S178>:7'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_afl1 =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_py0w =
            MX_Gtwy_Cont_IN_SHUTDOWN_a1gun4;

          // Entry Internal 'SHUTDOWN': '<S178>:13'
          // Transition: '<S178>:41'
          MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_nwv4 =
            MX_Gtwy_Contro_IN_DEBOUNCE_n0jr;

          // Entry 'DEBOUNCE': '<S178>:15'
          MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
        } else if (((int32_T)MX_Gtwy_Control_B.flt_EOP_in > (int32_T)((int32_T)
                     MX_Gtwy_Control_B.level_WarningEOP_cn2w + (int32_T)
                     CONSTANT_DATA->PRESSURE_HYSTERESIS)) ||
                   (MX_Gtwy_Control_B.RateTransition2 != ENGINE_RUNNING)) {
          // Transition: '<S178>:31'
          // Exit Internal 'EXTREMELY_LOW': '<S178>:7'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_afl1 =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_py0w =
            MX_Gtwy_Control_IN_NORMAL_jvmau;

          // Entry Internal 'NORMAL': '<S178>:4'
          // Transition: '<S178>:35'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_gzef =
            MX_Gtwy_Contro_IN_DEBOUNCE_n0jr;

          // Entry 'DEBOUNCE': '<S178>:6'
          MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_afl1 ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_n0jr) {
          // During 'DEBOUNCE': '<S178>:9'
          if ((MX_Gtwy_Control_DWork.debounceCount_ofy4 >=
               CONSTANT_DATA->EOP_DEBOUNCE_EXTREMELY_LOW) ||
              (MX_Gtwy_Control_B.state_EOPSr_k5no == EXTREMELY_LOW)) {
            // Transition: '<S178>:36'
            MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_afl1 =
              MX_Gtwy_C_IN_EXTREMELY_LOW_mkqb;

            // Entry 'EXTREMELY_LOW': '<S178>:8'
            MX_Gtwy_Control_B.state_EOPSr_k5no = EXTREMELY_LOW;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_ofy4 = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ofy4 + 1);
          }
        } else {
          MX_Gtwy_Control_B.state_EOPSr_k5no = EXTREMELY_LOW;

          // During 'EXTREMELY_LOW': '<S178>:8'
        }
        break;

       case MX_Gtwy_Control_IN_LOW:
        // During 'LOW': '<S178>:10'
        if (((int32_T)MX_Gtwy_Control_B.flt_EOP_in > (int32_T)((int32_T)
              MX_Gtwy_Control_B.level_WarningEOP_cn2w + (int32_T)
              CONSTANT_DATA->PRESSURE_HYSTERESIS)) ||
            (MX_Gtwy_Control_B.RateTransition2 != ENGINE_RUNNING)) {
          // Transition: '<S178>:30'
          // Exit Internal 'LOW': '<S178>:10'
          MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_isyi =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_py0w =
            MX_Gtwy_Control_IN_NORMAL_jvmau;

          // Entry Internal 'NORMAL': '<S178>:4'
          // Transition: '<S178>:35'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_gzef =
            MX_Gtwy_Contro_IN_DEBOUNCE_n0jr;

          // Entry 'DEBOUNCE': '<S178>:6'
          MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
        } else if (MX_Gtwy_Control_B.flt_EOP_in <=
                   MX_Gtwy_Control_B.level_ShutdownEOP_eqoa) {
          // Transition: '<S178>:28'
          // Exit Internal 'LOW': '<S178>:10'
          MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_isyi =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_py0w =
            MX_Gtwy_Contro_IN_EXTREMELY_LOW;

          // Entry Internal 'EXTREMELY_LOW': '<S178>:7'
          // Transition: '<S178>:37'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_afl1 =
            MX_Gtwy_Contro_IN_DEBOUNCE_n0jr;

          // Entry 'DEBOUNCE': '<S178>:9'
          MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_isyi ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_n0jr) {
          // During 'DEBOUNCE': '<S178>:12'
          if ((MX_Gtwy_Control_DWork.debounceCount_ofy4 >=
               CONSTANT_DATA->EOP_DEBOUNCE_LOW) ||
              (MX_Gtwy_Control_B.state_EOPSr_k5no == LOW)) {
            // Transition: '<S178>:38'
            MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_isyi =
              MX_Gtwy_Control_IN_LOW;

            // Entry 'LOW': '<S178>:11'
            MX_Gtwy_Control_B.state_EOPSr_k5no = LOW;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_ofy4 = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ofy4 + 1);
          }
        } else {
          MX_Gtwy_Control_B.state_EOPSr_k5no = LOW;

          // During 'LOW': '<S178>:11'
        }
        break;

       case MX_Gtwy_Control_IN_NORMAL_jvmau:
        // During 'NORMAL': '<S178>:4'
        if ((MX_Gtwy_Control_B.flt_EOP_in <=
             MX_Gtwy_Control_B.level_WarningEOP_cn2w) &&
            (MX_Gtwy_Control_B.flt_EOP_in >
             MX_Gtwy_Control_B.level_ShutdownEOP_eqoa) &&
            (MX_Gtwy_Control_B.RateTransition2 == ENGINE_RUNNING) &&
            (CONSTANT_DATA->EOP_FAULT_DETECTION_FUNCTION != NON_FUNCTIONAL)) {
          // Transition: '<S178>:29'
          // Exit Internal 'NORMAL': '<S178>:4'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_gzef =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_py0w =
            MX_Gtwy_Control_IN_LOW;

          // Entry Internal 'LOW': '<S178>:10'
          // Transition: '<S178>:39'
          MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_isyi =
            MX_Gtwy_Contro_IN_DEBOUNCE_n0jr;

          // Entry 'DEBOUNCE': '<S178>:12'
          MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
        } else if ((MX_Gtwy_Control_B.flt_EOP_in <=
                    MX_Gtwy_Control_B.level_ShutdownEOP_eqoa) &&
                   (MX_Gtwy_Control_B.RateTransition2 == ENGINE_RUNNING) &&
                   (CONSTANT_DATA->EOP_FAULT_DETECTION_FUNCTION !=
                    NON_FUNCTIONAL)) {
          // Transition: '<S178>:32'
          // Exit Internal 'NORMAL': '<S178>:4'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_gzef =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_py0w =
            MX_Gtwy_Contro_IN_EXTREMELY_LOW;

          // Entry Internal 'EXTREMELY_LOW': '<S178>:7'
          // Transition: '<S178>:37'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_afl1 =
            MX_Gtwy_Contro_IN_DEBOUNCE_n0jr;

          // Entry 'DEBOUNCE': '<S178>:9'
          MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_gzef ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_n0jr) {
          // During 'DEBOUNCE': '<S178>:6'
          if ((MX_Gtwy_Control_DWork.debounceCount_ofy4 >=
               CONSTANT_DATA->EOP_DEBOUNCE_NORMAL) ||
              (MX_Gtwy_Control_B.state_EOPSr_k5no == NORMAL)) {
            // Transition: '<S178>:34'
            MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_gzef =
              MX_Gtwy_Control_IN_NORMAL_jvma;

            // Entry 'NORMAL': '<S178>:5'
            MX_Gtwy_Control_B.state_EOPSr_k5no = NORMAL;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_ofy4 = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ofy4 + 1);
          }
        } else {
          MX_Gtwy_Control_B.state_EOPSr_k5no = NORMAL;

          // During 'NORMAL': '<S178>:5'
        }
        break;

       default:
        // During 'SHUTDOWN': '<S178>:13'
        if (((int32_T)MX_Gtwy_Control_B.flt_EOP_in > (int32_T)((int32_T)
              MX_Gtwy_Control_B.level_ShutdownEOP_eqoa + (int32_T)
              CONSTANT_DATA->PRESSURE_HYSTERESIS)) &&
            (MX_Gtwy_Control_B.state_EOPSr_k5no != SHUTDOWN)) {
          // Transition: '<S178>:25'
          // Exit Internal 'SHUTDOWN': '<S178>:13'
          MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_nwv4 =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_py0w =
            MX_Gtwy_Control_IN_LOW;

          // Entry Internal 'LOW': '<S178>:10'
          // Transition: '<S178>:39'
          MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_isyi =
            MX_Gtwy_Contro_IN_DEBOUNCE_n0jr;

          // Entry 'DEBOUNCE': '<S178>:12'
          MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_nwv4 ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_n0jr) {
          // During 'DEBOUNCE': '<S178>:15'
          if (MX_Gtwy_Control_DWork.debounceCount_ofy4 >=
              CONSTANT_DATA->EOP_DEBOUNCE_SHUTDOWN) {
            // Transition: '<S178>:40'
            MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_nwv4 =
              MX_Gtwy_Contr_IN_SHUTDOWN_a1gun;

            // Entry 'SHUTDOWN': '<S178>:14'
            MX_Gtwy_Control_B.state_EOPSr_k5no = SHUTDOWN;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_ofy4 = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ofy4 + 1);
          }
        } else {
          MX_Gtwy_Control_B.state_EOPSr_k5no = SHUTDOWN;

          // During 'SHUTDOWN': '<S178>:14'
        }
        break;
      }
    }
    break;

   case MX_Gt_IN_OUT_OF_RANGE_HIGH_jp15:
    // During 'OUT_OF_RANGE_HIGH': '<S178>:16'
    if (MX_Gtwy_Control_B.DataTypeConversion1_ntef < CONSTANT_DATA->EOP_OORH) {
      // Transition: '<S178>:50'
      // Exit Internal 'OUT_OF_RANGE_HIGH': '<S178>:16'
      MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_HIGH =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
      MX_Gtwy_Control_DWork.bitsForTID1.is_STATE =
        MX_Gtwy_Control_IN_NORMAL_jvma;

      // Entry Internal 'NORMAL': '<S178>:3'
      // Transition: '<S178>:33'
      MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_py0w =
        MX_Gtwy_Control_IN_NORMAL_jvmau;

      // Entry Internal 'NORMAL': '<S178>:4'
      // Transition: '<S178>:35'
      MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_gzef =
        MX_Gtwy_Contro_IN_DEBOUNCE_n0jr;

      // Entry 'DEBOUNCE': '<S178>:6'
      MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
    } else if ((MX_Gtwy_Control_B.state_SensorSupply != NORMAL) &&
               (MX_Gtwy_Control_B.state_EOPSr_k5no != OORH)) {
      // Transition: '<S178>:98'
      // Exit Internal 'OUT_OF_RANGE_HIGH': '<S178>:16'
      MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_HIGH =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
      MX_Gtwy_Control_DWork.bitsForTID1.is_STATE =
        MX_Gtwy_IN_NON_FUNCTIONAL_cpdob;

      // Entry 'NON_FUNCTIONAL': '<S178>:2'
      MX_Gtwy_Control_B.state_EOPSr_k5no = NORMAL;
    } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_HIGH ==
               MX_Gtwy_Contro_IN_DEBOUNCE_n0jr) {
      // During 'DEBOUNCE': '<S178>:18'
      if ((MX_Gtwy_Control_DWork.debounceCount_ofy4 >=
           CONSTANT_DATA->EOP_DEBOUNCE_OORH) ||
          (MX_Gtwy_Control_B.state_EOPSr_k5no == OORH)) {
        // Transition: '<S178>:42'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_HIGH =
          MX_Gtwy_Control_IN_OORH_arpe;

        // Entry 'OORH': '<S178>:17'
        MX_Gtwy_Control_B.state_EOPSr_k5no = OORH;
      } else {
        MX_Gtwy_Control_DWork.debounceCount_ofy4 = (uint16_T)(int32_T)((int32_T)
          MX_Gtwy_Control_DWork.debounceCount_ofy4 + 1);
      }
    } else {
      MX_Gtwy_Control_B.state_EOPSr_k5no = OORH;

      // During 'OORH': '<S178>:17'
    }
    break;

   default:
    // During 'OUT_OF_RANGE_LOW': '<S178>:19'
    if (MX_Gtwy_Control_B.DataTypeConversion1_ntef > CONSTANT_DATA->EOP_OORL) {
      // Transition: '<S178>:52'
      // Exit Internal 'OUT_OF_RANGE_LOW': '<S178>:19'
      MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_LOW =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
      MX_Gtwy_Control_DWork.bitsForTID1.is_STATE =
        MX_Gtwy_Control_IN_NORMAL_jvma;

      // Entry Internal 'NORMAL': '<S178>:3'
      // Transition: '<S178>:33'
      MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_py0w =
        MX_Gtwy_Control_IN_NORMAL_jvmau;

      // Entry Internal 'NORMAL': '<S178>:4'
      // Transition: '<S178>:35'
      MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_gzef =
        MX_Gtwy_Contro_IN_DEBOUNCE_n0jr;

      // Entry 'DEBOUNCE': '<S178>:6'
      MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
    } else if ((MX_Gtwy_Control_B.state_SensorSupply != NORMAL) &&
               (MX_Gtwy_Control_B.state_EOPSr_k5no != OORL)) {
      // Transition: '<S178>:99'
      // Exit Internal 'OUT_OF_RANGE_LOW': '<S178>:19'
      MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_LOW =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
      MX_Gtwy_Control_DWork.bitsForTID1.is_STATE =
        MX_Gtwy_IN_NON_FUNCTIONAL_cpdob;

      // Entry 'NON_FUNCTIONAL': '<S178>:2'
      MX_Gtwy_Control_B.state_EOPSr_k5no = NORMAL;
    } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_LOW ==
               MX_Gtwy_Contro_IN_DEBOUNCE_n0jr) {
      // During 'DEBOUNCE': '<S178>:21'
      if ((MX_Gtwy_Control_DWork.debounceCount_ofy4 >=
           CONSTANT_DATA->EOP_DEBOUNCE_OORL) ||
          (MX_Gtwy_Control_B.state_EOPSr_k5no == OORL)) {
        // Transition: '<S178>:44'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_LOW =
          MX_Gtwy_Control_IN_OORL_dd3t;

        // Entry 'OORL': '<S178>:20'
        MX_Gtwy_Control_B.state_EOPSr_k5no = OORL;
      } else {
        MX_Gtwy_Control_DWork.debounceCount_ofy4 = (uint16_T)(int32_T)((int32_T)
          MX_Gtwy_Control_DWork.debounceCount_ofy4 + 1);
      }
    } else {
      MX_Gtwy_Control_B.state_EOPSr_k5no = OORL;

      // During 'OORL': '<S178>:20'
    }
    break;
  }
}

// System initialize for atomic system: '<S3>/EOP'
void MX_Gtwy_Control_EOP_Init(void)
{
  uint16_T rtb_fltValue_out;

  // SystemInitialize for Enabled SubSystem: '<S78>/SensorInput'
  // SystemInitialize for Enabled SubSystem: '<S175>/Sensor_Calculations'

  // SystemInitialize for Atomic SubSystem: '<S182>/LP_Filter'
  MX_Gtwy_Con_LP_Filter_as2q_Init(&MX_Gtwy_Control_DWork.LP_Filter_eika);

  // End of SystemInitialize for SubSystem: '<S182>/LP_Filter'

  // SystemInitialize for Atomic SubSystem: '<S182>/Remove_OOR_Levels'
  MX_Gtwy__Remove_OOR_Levels_Init(&rtb_fltValue_out,
    &MX_Gtwy_Control_DWork.Remove_OOR_Levels_akpq);

  // End of SystemInitialize for SubSystem: '<S182>/Remove_OOR_Levels'

  // SystemInitialize for Atomic SubSystem: '<S182>/LP_Filter_Adj_Gain'
  MX_Gtwy_LP_Filter_Adj_Gain_Init(&MX_Gtwy_Control_B.Output_hwan,
    &MX_Gtwy_Control_DWork.LP_Filter_Adj_Gain_e3cl);

  // End of SystemInitialize for SubSystem: '<S182>/LP_Filter_Adj_Gain'

  // SystemInitialize for Outport: '<S179>/state_SensorSupply'
  MX_Gtwy_Control_B.state_SensorSupply = ((uint8_T)8U);

  // End of SystemInitialize for SubSystem: '<S175>/Sensor_Calculations'

  // SystemInitialize for Chart: '<S175>/ErrorDetection'
  MX_Gtwy_Control_DWork.bitsForTID1.is_ECU_nc20 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_COMMUNICATING =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_hh3d =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_npmn =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_e0wx =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NON_FUNCTIONAL =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_STATE = MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_py0w =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_afl1 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_isyi =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_gzef =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_nwv4 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_HIGH =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_OUT_OF_RANGE_LOW =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_VALUE_n0kh =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c53_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_c53_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
  MX_Gtwy_Control_B.state_EOPSr_k5no = 0U;
  MX_Gtwy_Control_B.flt_EOP_d3se = 0U;

  // SystemInitialize for Outport: '<S175>/state_EOPSr'
  MX_Gtwy_Control_B.state_EOPSr = ((uint8_T)8U);

  // End of SystemInitialize for SubSystem: '<S78>/SensorInput'

  // SystemInitialize for Enabled SubSystem: '<S78>/SwitchInput'
  // SystemInitialize for Chart: '<S176>/SwitchInput'
  MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_ijig =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ntxn =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_iopf =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c55_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_c55_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
  MX_Gtwy_Control_DWork.debounceCount_nzxz = 0U;
  MX_Gtwy_Control_B.state_EOPSw_lo1y = 0U;

  // SystemInitialize for Outport: '<S176>/state_EOPSw'
  MX_Gtwy_Control_B.state_EOPSw = ((uint8_T)8U);

  // End of SystemInitialize for SubSystem: '<S78>/SwitchInput'
}

// Output and update for atomic system: '<S3>/EOP'
void MX_Gtwy_Control_EOP(void)
{
  uint16_T rtb_fltValue_out;
  int16_T rtb_DataTypeConversion2;
  uint16_T rtb_DataTypeConversion3_kxuv;
  uint16_T rtb_ain_SensorSupply;
  int16_T rtb_Sum1;
  uint16_T rtb_Saturation;

  // RelationalOperator: '<S174>/Compare' incorporates:
  //   Constant: '<S174>/Constant'
  //   Constant: '<S78>/Constant2'

  outputSelect_EOP = (CONSTANT_DATA->EOP_FUNCTION == SWITCH_INPUT);

  // Outputs for Enabled SubSystem: '<S78>/SensorInput' incorporates:
  //   EnablePort: '<S175>/Enable'

  // RelationalOperator: '<S173>/Compare' incorporates:
  //   Constant: '<S173>/Constant'
  //   Constant: '<S175>/ECU Function'
  //   Constant: '<S177>/Constant'
  //   Constant: '<S182>/Constant3'
  //   Constant: '<S78>/Constant2'
  //   RelationalOperator: '<S177>/Compare'

  if (CONSTANT_DATA->EOP_FUNCTION != SWITCH_INPUT) {
    if (!MX_Gtwy_Control_DWork.SensorInput_MODE) {
      MX_Gtwy_Control_DWork.SensorInput_MODE = true;
    }

    // Outputs for Enabled SubSystem: '<S175>/Sensor_Calculations' incorporates:
    //   EnablePort: '<S179>/Enable'

    if (CONSTANT_DATA->ECU_FUNCTION == NON_FUNCTIONAL) {
      if (!MX_Gtwy_Control_DWork.Sensor_Calculations_MODE) {
        // SystemReset for Atomic SubSystem: '<S182>/LP_Filter'
        MX_Gtwy_Co_LP_Filter_j43b_Reset(&MX_Gtwy_Control_DWork.LP_Filter_eika);

        // End of SystemReset for SubSystem: '<S182>/LP_Filter'

        // SystemReset for Atomic SubSystem: '<S182>/Remove_OOR_Levels'
        MX_Gtwy_Remove_OOR_Levels_Reset(&rtb_fltValue_out,
          &MX_Gtwy_Control_DWork.Remove_OOR_Levels_akpq);

        // End of SystemReset for SubSystem: '<S182>/Remove_OOR_Levels'

        // SystemReset for Atomic SubSystem: '<S182>/LP_Filter_Adj_Gain'
        MX_Gtw_LP_Filter_Adj_Gain_Reset(&MX_Gtwy_Control_B.Output_hwan,
          &MX_Gtwy_Control_DWork.LP_Filter_Adj_Gain_e3cl);

        // End of SystemReset for SubSystem: '<S182>/LP_Filter_Adj_Gain'
        MX_Gtwy_Control_DWork.Sensor_Calculations_MODE = true;
      }

      // Switch: '<S179>/Switch_Supply' incorporates:
      //   Constant: '<S179>/Constant2'
      //   Constant: '<S180>/Constant'
      //   RelationalOperator: '<S180>/Compare'

      if (CONSTANT_DATA->EOP_FUNCTION == ((uint8_T)0U)) {
        rtb_ain_SensorSupply = MX_Gtwy_Control_B.RateTransition27;
      } else {
        rtb_ain_SensorSupply = MX_Gtwy_Control_B.RateTransition33;
      }

      // End of Switch: '<S179>/Switch_Supply'

      // Outputs for Atomic SubSystem: '<S179>/Ratiometric_Converter'
      MX_Gtwy_C_Ratiometric_Converter(MX_Gtwy_Control_B.RateTransition49,
        rtb_ain_SensorSupply, &rtb_Saturation, ((uint16_T)1000U));

      // End of Outputs for SubSystem: '<S179>/Ratiometric_Converter'

      // Outputs for Atomic SubSystem: '<S182>/LP_Filter'
      MX_Gtwy_Control_LP_Filter_dijo(rtb_Saturation, &rtb_Sum1,
        &MX_Gtwy_Control_DWork.LP_Filter_eika);

      // End of Outputs for SubSystem: '<S182>/LP_Filter'

      // DataTypeConversion: '<S182>/Data Type Conversion1'
      MX_Gtwy_Control_B.DataTypeConversion1_ntef = (uint16_T)(int32_T)((int32_T)
        rtb_Sum1 >> 5);

      // Outputs for Atomic SubSystem: '<S182>/Remove_OOR_Levels'
      MX_Gtwy_Contr_Remove_OOR_Levels(rtb_Saturation, &rtb_fltValue_out,
        &MX_Gtwy_Control_DWork.Remove_OOR_Levels_akpq, CONSTANT_DATA->EOP_OORH,
        CONSTANT_DATA->EOP_OORL);

      // End of Outputs for SubSystem: '<S182>/Remove_OOR_Levels'

      // DataTypeConversion: '<S182>/Data Type Conversion2'
      rtb_DataTypeConversion2 = (int16_T)rtb_fltValue_out;

      // Outputs for Atomic SubSystem: '<S182>/LP_Filter_Adj_Gain'
      MX_Gtwy_Cont_LP_Filter_Adj_Gain(CONSTANT_DATA->EOP_FILTER_VALUE,
        rtb_DataTypeConversion2, &MX_Gtwy_Control_B.Output_hwan,
        &MX_Gtwy_Control_DWork.LP_Filter_Adj_Gain_e3cl);

      // End of Outputs for SubSystem: '<S182>/LP_Filter_Adj_Gain'

      // DataTypeConversion: '<S182>/Data Type Conversion3' incorporates:
      //   Constant: '<S182>/Constant3'

      rtb_DataTypeConversion3_kxuv = (uint16_T)(int32_T)
        (MX_Gtwy_Control_B.Output_hwan >> 16);

      // Lookup: '<S182>/GaugeTable1'
      //
      //  About '<S182>/GaugeTable1':
      //  Input0  Data Type:  Integer        U16
      //  Output0 Data Type:  Integer        U16
      //  Round Mode: Zero
      //  Saturation Mode: Saturate
      //  Lookup Method: Nearest
      //
      //  XData parameter uses the same data type and scaling as Input0
      //  YData parameter uses the same data type and scaling as Output0

      {
        uint32_T iLeft;
        BINARYSEARCH_U16_Near_iL( &(iLeft), rtb_DataTypeConversion3_kxuv,
          (&(MXGTW_EOPSND[0])), 150U);
        MX_Gtwy_Control_B.flt_EOP_in = (MX_Gtwy_Control_ConstP.pooled19[iLeft]);
      }

      // Switch: '<S179>/Switch1' incorporates:
      //   Constant: '<S179>/Constant1'
      //   Constant: '<S181>/Constant'
      //   RelationalOperator: '<S181>/Compare'

      if (CONSTANT_DATA->EOP_FUNCTION == ((uint8_T)0U)) {
        MX_Gtwy_Control_B.state_SensorSupply = state_SensorSupply1;
      } else {
        MX_Gtwy_Control_B.state_SensorSupply = state_SensorSupply2;
      }

      // End of Switch: '<S179>/Switch1'

      // Lookup: '<S179>/ShutdownTable'
      //
      //  About '<S179>/ShutdownTable':
      //  Input0  Data Type:  Integer        U16
      //  Output0 Data Type:  Integer        U16
      //  Round Mode: Zero
      //  Saturation Mode: Saturate
      //  Lookup Method: Nearest
      //
      //  XData is inlined and evenly spaced, so the algorithm only needs
      //  the value of the first element, the last element, and the spacing.
      //  For efficiency, XData is excluded from the generated code.
      //  YData parameter uses the same data type and scaling as Output0

      {
        uint32_T iLeft;

        // Find the location of current input value in the data table.
        //
        //  Based on the data type of the input, it is impossible for the
        //  search value to be less than the smallest point in the table.

        if (MX_Gtwy_Control_B.RateTransition28 >= 5000U ) {
          // Greater than or equal to the largest point in the table.
          iLeft = 50U;
        } else {
          // The table is inlined and evenly spaced.
          //  The index is found directly by use of division.

          iLeft = (uint32_T)( MX_Gtwy_Control_B.RateTransition28 ) / 100U;

          // Adjust the index, if necessary, so that it always
          //  gives the data point nearest the current input value.
          //  It is necessary to round up iff the remainder is greater
          //  than or equal to half the data spacing.
          //      ( spacing / 2 ) <= remainder
          //  To avoid both division and multiplication and issues of
          //  rounding and overflow, this test is rearranged.
          //      ( spacing - remainder ) <= remainder

          {
            uint32_T remainder;
            remainder = (uint32_T)( MX_Gtwy_Control_B.RateTransition28 ) % 100U;
            if (( 100U - remainder ) <= remainder ) {
              iLeft++;
            }
          }
        }

        MX_Gtwy_Control_B.level_ShutdownEOP_eqoa = MXGTW_EOPSHUTDOWN[iLeft];
      }

      // Lookup: '<S179>/WarningTable'
      //
      //  About '<S179>/WarningTable':
      //  Input0  Data Type:  Integer        U16
      //  Output0 Data Type:  Integer        U16
      //  Round Mode: Zero
      //  Saturation Mode: Saturate
      //  Lookup Method: Nearest
      //
      //  XData is inlined and evenly spaced, so the algorithm only needs
      //  the value of the first element, the last element, and the spacing.
      //  For efficiency, XData is excluded from the generated code.
      //  YData parameter uses the same data type and scaling as Output0

      {
        uint32_T iLeft;

        // Find the location of current input value in the data table.
        //
        //  Based on the data type of the input, it is impossible for the
        //  search value to be less than the smallest point in the table.

        if (MX_Gtwy_Control_B.RateTransition28 >= 5000U ) {
          // Greater than or equal to the largest point in the table.
          iLeft = 50U;
        } else {
          // The table is inlined and evenly spaced.
          //  The index is found directly by use of division.

          iLeft = (uint32_T)( MX_Gtwy_Control_B.RateTransition28 ) / 100U;

          // Adjust the index, if necessary, so that it always
          //  gives the data point nearest the current input value.
          //  It is necessary to round up iff the remainder is greater
          //  than or equal to half the data spacing.
          //      ( spacing / 2 ) <= remainder
          //  To avoid both division and multiplication and issues of
          //  rounding and overflow, this test is rearranged.
          //      ( spacing - remainder ) <= remainder

          {
            uint32_T remainder;
            remainder = (uint32_T)( MX_Gtwy_Control_B.RateTransition28 ) % 100U;
            if (( 100U - remainder ) <= remainder ) {
              iLeft++;
            }
          }
        }

        MX_Gtwy_Control_B.level_WarningEOP_cn2w = MXGTW_EOPWARN[iLeft];
      }
    } else {
      if (MX_Gtwy_Control_DWork.Sensor_Calculations_MODE) {
        MX_Gtwy_Control_DWork.Sensor_Calculations_MODE = false;
      }
    }

    // End of Outputs for SubSystem: '<S175>/Sensor_Calculations'

    // Chart: '<S175>/ErrorDetection' incorporates:
    //   Constant: '<S175>/ECU Function'
    //   Constant: '<S177>/Constant'
    //   Constant: '<S182>/Constant3'
    //   RelationalOperator: '<S177>/Compare'

    // Gateway: MX_Gtwy_Control/Inputs/EOP/SensorInput/ErrorDetection
    // During: MX_Gtwy_Control/Inputs/EOP/SensorInput/ErrorDetection
    if ((uint32_T)
        MX_Gtwy_Control_DWork.bitsForTID1.is_active_c53_MX_Gtwy_Control == 0U) {
      // Entry: MX_Gtwy_Control/Inputs/EOP/SensorInput/ErrorDetection
      MX_Gtwy_Control_DWork.bitsForTID1.is_active_c53_MX_Gtwy_Control = 1U;

      // Entry Internal: MX_Gtwy_Control/Inputs/EOP/SensorInput/ErrorDetection
      // Transition: '<S178>:194'
      MX_Gtwy_Control_DWork.bitsForTID1.is_c53_MX_Gtwy_Control =
        MX_Gtwy__IN_NON_FUNCTIONAL_cpdo;

      // Entry Internal 'NON_FUNCTIONAL': '<S178>:193'
      // Transition: '<S178>:228'
      MX_Gtwy_Control_DWork.bitsForTID1.is_NON_FUNCTIONAL =
        MX_Gtwy__IN_NON_FUNCTIONAL_cpdo;

      // Entry 'NON_FUNCTIONAL': '<S178>:226'
      MX_Gtwy_Control_B.state_EOPSr_k5no = NORMAL;
      MX_Gtwy_Control_B.flt_EOP_d3se = 0U;
    } else {
      switch (MX_Gtwy_Control_DWork.bitsForTID1.is_c53_MX_Gtwy_Control) {
       case MX_Gtwy_Control_IN_ECU_obok:
        // During 'ECU': '<S178>:196'
        if (MX_Gtwy_Control_DWork.bitsForTID1.is_ECU_nc20 ==
            MX_Gtwy_Contro_IN_COMMUNICATING) {
          // During 'COMMUNICATING': '<S178>:200'
          if (MX_Gtwy_Control_B.RateTransition30 == NO_COMMUNICATION) {
            // Transition: '<S178>:199'
            // Exit Internal 'COMMUNICATING': '<S178>:200'
            // Exit Internal 'EXTREMELY_LOW': '<S178>:213'
            MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_hh3d =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
            MX_Gtwy_Control_DWork.bitsForTID1.is_COMMUNICATING =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;

            // Exit Internal 'NORMAL': '<S178>:207'
            MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_npmn =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;

            // Exit Internal 'SHUTDOWN': '<S178>:218'
            MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_e0wx =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
            MX_Gtwy_Control_DWork.bitsForTID1.is_ECU_nc20 =
              MX_Gtw_IN_NO_COMMUNICATION_ksuk;

            // Entry 'NO_COMMUNICATION': '<S178>:223'
            MX_Gtwy_Control_B.flt_EOP_d3se = 0U;
            MX_Gtwy_Control_B.state_EOPSr_k5no = NORMAL;
          } else {
            MX_Gtwy_Control_B.flt_EOP_d3se = (uint16_T)
              MX_Gtwy_Control_B.RateTransition29;
            switch (MX_Gtwy_Control_DWork.bitsForTID1.is_COMMUNICATING) {
             case MX_Gtwy_Contro_IN_EXTREMELY_LOW:
              // During 'EXTREMELY_LOW': '<S178>:213'
              if ((MX_Gtwy_Control_B.flt_EOP_d3se >=
                   CONSTANT_DATA->EOP_SWITCH_LOW) ||
                  (MX_Gtwy_Control_B.RateTransition2 != ENGINE_RUNNING)) {
                // Transition: '<S178>:203'
                // Exit Internal 'EXTREMELY_LOW': '<S178>:213'
                MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_hh3d =
                  MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
                MX_Gtwy_Control_DWork.bitsForTID1.is_COMMUNICATING =
                  MX_Gtwy_Control_IN_NORMAL_jvma;

                // Entry Internal 'NORMAL': '<S178>:207'
                // Transition: '<S178>:209'
                MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_npmn =
                  MX_Gtwy_IN_DEBOUNCE_NORMAL_nxye;

                // Entry 'DEBOUNCE_NORMAL': '<S178>:211'
                MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
              } else if ((CONSTANT_DATA->SHUTDOWN_FUNCTION != NON_FUNCTIONAL) &&
                         (MX_Gtwy_Control_B.state_EOPSr_k5no == EXTREMELY_LOW))
              {
                // Transition: '<S178>:205'
                // Exit Internal 'EXTREMELY_LOW': '<S178>:213'
                MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_hh3d =
                  MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
                MX_Gtwy_Control_DWork.bitsForTID1.is_COMMUNICATING =
                  MX_Gtwy_Contro_IN_SHUTDOWN_a1gu;

                // Entry Internal 'SHUTDOWN': '<S178>:218'
                // Transition: '<S178>:219'
                MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_e0wx =
                  MX_Gtwy_Contro_IN_DEBOUNCE_n0jr;

                // Entry 'DEBOUNCE': '<S178>:222'
                MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
              } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_hh3d
                         == MX_Gt_IN_DEBOUNCE_EXTREMELY_LOW) {
                // During 'DEBOUNCE_EXTREMELY_LOW': '<S178>:216'
                if ((MX_Gtwy_Control_DWork.debounceCount_ofy4 >=
                     CONSTANT_DATA->EOP_DEBOUNCE_EXTREMELY_LOW) ||
                    (MX_Gtwy_Control_B.state_EOPSr_k5no == EXTREMELY_LOW)) {
                  // Transition: '<S178>:215'
                  MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_hh3d =
                    MX_Gtwy_C_IN_EXTREMELY_LOW_mkqb;

                  // Entry 'EXTREMELY_LOW': '<S178>:217'
                  MX_Gtwy_Control_B.state_EOPSr_k5no = EXTREMELY_LOW;
                } else {
                  MX_Gtwy_Control_DWork.debounceCount_ofy4 = (uint16_T)(int32_T)
                    ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ofy4 + 1);
                }
              } else {
                MX_Gtwy_Control_B.state_EOPSr_k5no = EXTREMELY_LOW;

                // During 'EXTREMELY_LOW': '<S178>:217'
              }
              break;

             case MX_Gtwy_Control_IN_NORMAL_jvma:
              // During 'NORMAL': '<S178>:207'
              if ((MX_Gtwy_Control_B.flt_EOP_d3se <=
                   CONSTANT_DATA->EOP_SWITCH_LOW) &&
                  (MX_Gtwy_Control_B.RateTransition2 == ENGINE_RUNNING)) {
                // Transition: '<S178>:204'
                // Exit Internal 'NORMAL': '<S178>:207'
                MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_npmn =
                  MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
                MX_Gtwy_Control_DWork.bitsForTID1.is_COMMUNICATING =
                  MX_Gtwy_Contro_IN_EXTREMELY_LOW;

                // Entry Internal 'EXTREMELY_LOW': '<S178>:213'
                // Transition: '<S178>:214'
                MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_hh3d =
                  MX_Gt_IN_DEBOUNCE_EXTREMELY_LOW;

                // Entry 'DEBOUNCE_EXTREMELY_LOW': '<S178>:216'
                MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
              } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_npmn ==
                         MX_Gtwy_IN_DEBOUNCE_NORMAL_nxye) {
                // During 'DEBOUNCE_NORMAL': '<S178>:211'
                if ((MX_Gtwy_Control_DWork.debounceCount_ofy4 >=
                     CONSTANT_DATA->EOP_DEBOUNCE_NORMAL) ||
                    (MX_Gtwy_Control_B.state_EOPSr_k5no == NORMAL)) {
                  // Transition: '<S178>:210'
                  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_npmn =
                    MX_Gtwy_Control_IN_NORMAL_jvma;

                  // Entry 'NORMAL': '<S178>:212'
                  MX_Gtwy_Control_B.state_EOPSr_k5no = NORMAL;
                } else {
                  MX_Gtwy_Control_DWork.debounceCount_ofy4 = (uint16_T)(int32_T)
                    ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ofy4 + 1);
                }
              } else {
                MX_Gtwy_Control_B.state_EOPSr_k5no = NORMAL;

                // During 'NORMAL': '<S178>:212'
              }
              break;

             default:
              // During 'SHUTDOWN': '<S178>:218'
              if (((MX_Gtwy_Control_B.flt_EOP_d3se >=
                    CONSTANT_DATA->EOP_SWITCH_LOW) ||
                   (MX_Gtwy_Control_B.RateTransition2 != ENGINE_RUNNING)) &&
                  (MX_Gtwy_Control_B.state_EOPSr_k5no != SHUTDOWN)) {
                // Transition: '<S178>:206'
                // Exit Internal 'SHUTDOWN': '<S178>:218'
                MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_e0wx =
                  MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
                MX_Gtwy_Control_DWork.bitsForTID1.is_COMMUNICATING =
                  MX_Gtwy_Contro_IN_EXTREMELY_LOW;

                // Entry Internal 'EXTREMELY_LOW': '<S178>:213'
                // Transition: '<S178>:214'
                MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_hh3d =
                  MX_Gt_IN_DEBOUNCE_EXTREMELY_LOW;

                // Entry 'DEBOUNCE_EXTREMELY_LOW': '<S178>:216'
                MX_Gtwy_Control_DWork.debounceCount_ofy4 = 0U;
              } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_e0wx ==
                         MX_Gtwy_Contro_IN_DEBOUNCE_n0jr) {
                // During 'DEBOUNCE': '<S178>:222'
                if (MX_Gtwy_Control_DWork.debounceCount_ofy4 >=
                    CONSTANT_DATA->EOP_DEBOUNCE_SHUTDOWN) {
                  // Transition: '<S178>:220'
                  MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_e0wx =
                    MX_Gtwy_Contr_IN_SHUTDOWN_a1gun;

                  // Entry 'SHUTDOWN': '<S178>:221'
                  MX_Gtwy_Control_B.state_EOPSr_k5no = SHUTDOWN;
                } else {
                  MX_Gtwy_Control_DWork.debounceCount_ofy4 = (uint16_T)(int32_T)
                    ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ofy4 + 1);
                }
              } else {
                MX_Gtwy_Control_B.state_EOPSr_k5no = SHUTDOWN;

                // During 'SHUTDOWN': '<S178>:221'
              }
              break;
            }
          }
        } else {
          MX_Gtwy_Control_B.state_EOPSr_k5no = NORMAL;

          // During 'NO_COMMUNICATION': '<S178>:223'
          if (MX_Gtwy_Control_B.RateTransition30 != NO_COMMUNICATION) {
            // Transition: '<S178>:198'
            MX_Gtwy_Control_DWork.bitsForTID1.is_ECU_nc20 =
              MX_Gtwy_Contro_IN_COMMUNICATING;

            // Entry Internal 'COMMUNICATING': '<S178>:200'
            // Transition: '<S178>:202'
            MX_Gtwy_Control_DWork.bitsForTID1.is_COMMUNICATING =
              MX_Gtwy_Control_IN_NORMAL_jvma;
            MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_npmn =
              MX_Gtwy_Control_IN_NORMAL_jvma;

            // Entry 'NORMAL': '<S178>:212'
          }
        }
        break;

       case MX_Gtwy__IN_NON_FUNCTIONAL_cpdo:
        // During 'NON_FUNCTIONAL': '<S178>:193'
        if ((CONSTANT_DATA->EOP_FUNCTION != NON_FUNCTIONAL) &&
            (CONSTANT_DATA->ECU_FUNCTION == NON_FUNCTIONAL)) {
          // Transition: '<S178>:111'
          // Exit Internal 'NON_FUNCTIONAL': '<S178>:193'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NON_FUNCTIONAL =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
          MX_Gtwy_Control_DWork.bitsForTID1.is_c53_MX_Gtwy_Control =
            MX_Gtwy_Control_IN_SENSOR_fbj5;

          // Entry Internal 'SENSOR': '<S178>:108'
          // Entry Internal 'VALUE': '<S178>:22'
          // Transition: '<S178>:58'
          MX_Gtwy_Control_DWork.bitsForTID1.is_VALUE_n0kh =
            MX_Gtwy_Control_IN_INIT_pb2u;

          // Entry 'INIT': '<S178>:23'
          MX_Gtwy_Control_B.flt_EOP_d3se = 0U;

          // Entry Internal 'INIT': '<S178>:23'
          // Transition: '<S178>:53'
          if ((MX_Gtwy_Control_B.DataTypeConversion1_ntef <=
               CONSTANT_DATA->EOP_OORL) ||
              (MX_Gtwy_Control_B.DataTypeConversion1_ntef >=
               CONSTANT_DATA->EOP_OORH)) {
            // Transition: '<S178>:54'
            // Transition: '<S178>:56'
            MX_Gtwy_Control_B.flt_EOP_d3se = 0U;

            // Transition: '<S178>:57'
          } else {
            // Transition: '<S178>:55'
            MX_Gtwy_Control_B.flt_EOP_d3se = MX_Gtwy_Control_B.flt_EOP_in;
          }

          // Entry Internal 'STATE': '<S178>:1'
          // Transition: '<S178>:46'
          MX_Gtwy_Control_DWork.bitsForTID1.is_STATE =
            MX_Gtwy_IN_NON_FUNCTIONAL_cpdob;

          // Entry 'NON_FUNCTIONAL': '<S178>:2'
          MX_Gtwy_Control_B.state_EOPSr_k5no = NORMAL;
        } else if ((CONSTANT_DATA->EOP_FUNCTION != NON_FUNCTIONAL) &&
                   (CONSTANT_DATA->ECU_FUNCTION != NON_FUNCTIONAL)) {
          // Transition: '<S178>:195'
          // Exit Internal 'NON_FUNCTIONAL': '<S178>:193'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NON_FUNCTIONAL =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
          MX_Gtwy_Control_DWork.bitsForTID1.is_c53_MX_Gtwy_Control =
            MX_Gtwy_Control_IN_ECU_obok;

          // Entry Internal 'ECU': '<S178>:196'
          // Transition: '<S178>:197'
          MX_Gtwy_Control_DWork.bitsForTID1.is_ECU_nc20 =
            MX_Gtwy_Contro_IN_COMMUNICATING;

          // Entry Internal 'COMMUNICATING': '<S178>:200'
          // Transition: '<S178>:202'
          MX_Gtwy_Control_DWork.bitsForTID1.is_COMMUNICATING =
            MX_Gtwy_Control_IN_NORMAL_jvma;
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_npmn =
            MX_Gtwy_Control_IN_NORMAL_jvma;

          // Entry 'NORMAL': '<S178>:212'
          MX_Gtwy_Control_B.state_EOPSr_k5no = NORMAL;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NON_FUNCTIONAL ==
                   MX_Gtwy_Control_IN_ECU_FUNCTION) {
          MX_Gtwy_Control_B.state_EOPSr_k5no = NORMAL;

          // During 'ECU_FUNCTION': '<S178>:227'
          MX_Gtwy_Control_B.flt_EOP_d3se = (uint16_T)
            MX_Gtwy_Control_B.RateTransition29;
        } else {
          MX_Gtwy_Control_B.state_EOPSr_k5no = NORMAL;

          // During 'NON_FUNCTIONAL': '<S178>:226'
          if (CONSTANT_DATA->ECU_FUNCTION != NON_FUNCTIONAL) {
            // Transition: '<S178>:230'
            MX_Gtwy_Control_DWork.bitsForTID1.is_NON_FUNCTIONAL =
              MX_Gtwy_Control_IN_ECU_FUNCTION;

            // Entry 'ECU_FUNCTION': '<S178>:227'
          }
        }
        break;

       default:
        MX_Gtwy_Control_SENSOR();
        break;
      }
    }

    // End of Chart: '<S175>/ErrorDetection'

    // SignalConversion: '<S175>/OutportBufferForflt_EOP'
    MX_Gtwy_Control_B.flt_EOP_b0gx = MX_Gtwy_Control_B.flt_EOP_d3se;

    // SignalConversion: '<S175>/OutportBufferForlevel_ShutdownEOP'
    level_ShutdownEOP = MX_Gtwy_Control_B.level_ShutdownEOP_eqoa;

    // SignalConversion: '<S175>/OutportBufferForlevel_WarningEOP'
    level_WarningEOP = MX_Gtwy_Control_B.level_WarningEOP_cn2w;

    // SignalConversion: '<S175>/OutportBufferForrm_EOP'
    rm_EOP = MX_Gtwy_Control_B.DataTypeConversion1_ntef;

    // SignalConversion: '<S175>/OutportBufferForstate_EOPSr'
    MX_Gtwy_Control_B.state_EOPSr = MX_Gtwy_Control_B.state_EOPSr_k5no;

    // Lookup: '<S175>/percent'
    //
    //  About '<S175>/percent':
    //  Input0  Data Type:  Integer        U16
    //  Output0 Data Type:  Integer        U16
    //  Round Mode: Zero
    //  Saturation Mode: Saturate
    //  Lookup Method: Nearest
    //
    //  XData is inlined and evenly spaced, so the algorithm only needs
    //  the value of the first element, the last element, and the spacing.
    //  For efficiency, XData is excluded from the generated code.
    //  YData parameter uses the same data type and scaling as Output0

    {
      uint32_T iLeft;

      // Find the location of current input value in the data table.
      //
      //  Based on the data type of the input, it is impossible for the
      //  search value to be less than the smallest point in the table.

      if (MX_Gtwy_Control_B.flt_EOP_d3se >= 150U ) {
        // Greater than or equal to the largest point in the table.
        iLeft = 150U;
      } else {
        iLeft = (uint32_T)( MX_Gtwy_Control_B.flt_EOP_d3se );
      }

      MX_Gtwy_Control_B.gau_EOP_dohu = MXGTW_EOPGAUGE[iLeft];
    }
  } else {
    if (MX_Gtwy_Control_DWork.SensorInput_MODE) {
      // Disable for Enabled SubSystem: '<S175>/Sensor_Calculations'
      if (MX_Gtwy_Control_DWork.Sensor_Calculations_MODE) {
        MX_Gtwy_Control_DWork.Sensor_Calculations_MODE = false;
      }

      // End of Disable for SubSystem: '<S175>/Sensor_Calculations'
      MX_Gtwy_Control_DWork.SensorInput_MODE = false;
    }
  }

  // End of RelationalOperator: '<S173>/Compare'
  // End of Outputs for SubSystem: '<S78>/SensorInput'

  // Outputs for Enabled SubSystem: '<S78>/SwitchInput' incorporates:
  //   EnablePort: '<S176>/Enable'

  if (outputSelect_EOP) {
    // Chart: '<S176>/SwitchInput'
    // Gateway: MX_Gtwy_Control/Inputs/EOP/SwitchInput/SwitchInput
    // During: MX_Gtwy_Control/Inputs/EOP/SwitchInput/SwitchInput
    if ((uint32_T)
        MX_Gtwy_Control_DWork.bitsForTID1.is_active_c55_MX_Gtwy_Control == 0U) {
      // Entry: MX_Gtwy_Control/Inputs/EOP/SwitchInput/SwitchInput
      MX_Gtwy_Control_DWork.bitsForTID1.is_active_c55_MX_Gtwy_Control = 1U;

      // Entry Internal: MX_Gtwy_Control/Inputs/EOP/SwitchInput/SwitchInput
      // Transition: '<S190>:10'
      MX_Gtwy_Control_DWork.bitsForTID1.is_c55_MX_Gtwy_Control =
        MX_Gtwy_Control_IN_NORMAL_jvma;
      MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ntxn =
        MX_Gtwy_Control_IN_NORMAL_jvma;

      // Entry 'NORMAL': '<S190>:1'
      MX_Gtwy_Control_B.state_EOPSw_lo1y = NORMAL;
    } else {
      switch (MX_Gtwy_Control_DWork.bitsForTID1.is_c55_MX_Gtwy_Control) {
       case MX_Gtwy_Contro_IN_EXTREMELY_LOW:
        // During 'EXTREMELY_LOW': '<S190>:8'
        if ((MX_Gtwy_Control_B.RateTransition49 >= CONSTANT_DATA->EOP_SWITCH_LOW)
            || (MX_Gtwy_Control_B.RateTransition2 != ENGINE_RUNNING)) {
          // Transition: '<S190>:14'
          // Exit Internal 'EXTREMELY_LOW': '<S190>:8'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_ijig =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
          MX_Gtwy_Control_DWork.bitsForTID1.is_c55_MX_Gtwy_Control =
            MX_Gtwy_Control_IN_NORMAL_jvma;

          // Entry Internal 'NORMAL': '<S190>:9'
          // Transition: '<S190>:15'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ntxn =
            MX_Gtwy_IN_DEBOUNCE_NORMAL_nxye;

          // Entry 'DEBOUNCE_NORMAL': '<S190>:5'
          MX_Gtwy_Control_DWork.debounceCount_nzxz = 0U;
        } else if ((CONSTANT_DATA->SHUTDOWN_FUNCTION != NON_FUNCTIONAL) &&
                   (MX_Gtwy_Control_B.state_EOPSw_lo1y == EXTREMELY_LOW)) {
          // Transition: '<S190>:20'
          // Exit Internal 'EXTREMELY_LOW': '<S190>:8'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_ijig =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
          MX_Gtwy_Control_DWork.bitsForTID1.is_c55_MX_Gtwy_Control =
            MX_Gtwy_Contro_IN_SHUTDOWN_a1gu;

          // Entry Internal 'SHUTDOWN': '<S190>:7'
          // Transition: '<S190>:19'
          MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_iopf =
            MX_Gtwy_Contro_IN_DEBOUNCE_n0jr;

          // Entry 'DEBOUNCE': '<S190>:6'
          MX_Gtwy_Control_DWork.debounceCount_nzxz = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_ijig ==
                   MX_Gt_IN_DEBOUNCE_EXTREMELY_LOW) {
          // During 'DEBOUNCE_EXTREMELY_LOW': '<S190>:4'
          if ((MX_Gtwy_Control_DWork.debounceCount_nzxz >=
               CONSTANT_DATA->EOP_DEBOUNCE_EXTREMELY_LOW) ||
              (MX_Gtwy_Control_B.state_EOPSw_lo1y == EXTREMELY_LOW)) {
            // Transition: '<S190>:13'
            MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_ijig =
              MX_Gtwy_C_IN_EXTREMELY_LOW_mkqb;

            // Entry 'EXTREMELY_LOW': '<S190>:2'
            MX_Gtwy_Control_B.state_EOPSw_lo1y = EXTREMELY_LOW;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_nzxz = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_nzxz + 1);
          }
        } else {
          MX_Gtwy_Control_B.state_EOPSw_lo1y = EXTREMELY_LOW;

          // During 'EXTREMELY_LOW': '<S190>:2'
        }
        break;

       case MX_Gtwy_Control_IN_NORMAL_jvma:
        // During 'NORMAL': '<S190>:9'
        if ((MX_Gtwy_Control_B.RateTransition49 <= CONSTANT_DATA->EOP_SWITCH_LOW)
            && (MX_Gtwy_Control_B.RateTransition2 == ENGINE_RUNNING)) {
          // Transition: '<S190>:11'
          // Exit Internal 'NORMAL': '<S190>:9'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ntxn =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
          MX_Gtwy_Control_DWork.bitsForTID1.is_c55_MX_Gtwy_Control =
            MX_Gtwy_Contro_IN_EXTREMELY_LOW;

          // Entry Internal 'EXTREMELY_LOW': '<S190>:8'
          // Transition: '<S190>:12'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_ijig =
            MX_Gt_IN_DEBOUNCE_EXTREMELY_LOW;

          // Entry 'DEBOUNCE_EXTREMELY_LOW': '<S190>:4'
          MX_Gtwy_Control_DWork.debounceCount_nzxz = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ntxn ==
                   MX_Gtwy_IN_DEBOUNCE_NORMAL_nxye) {
          // During 'DEBOUNCE_NORMAL': '<S190>:5'
          if ((MX_Gtwy_Control_DWork.debounceCount_nzxz >=
               CONSTANT_DATA->EOP_DEBOUNCE_NORMAL) ||
              (MX_Gtwy_Control_B.state_EOPSw_lo1y == NORMAL)) {
            // Transition: '<S190>:16'
            MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ntxn =
              MX_Gtwy_Control_IN_NORMAL_jvma;

            // Entry 'NORMAL': '<S190>:1'
            MX_Gtwy_Control_B.state_EOPSw_lo1y = NORMAL;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_nzxz = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_nzxz + 1);
          }
        } else {
          MX_Gtwy_Control_B.state_EOPSw_lo1y = NORMAL;

          // During 'NORMAL': '<S190>:1'
        }
        break;

       default:
        // During 'SHUTDOWN': '<S190>:7'
        if (((MX_Gtwy_Control_B.RateTransition49 >=
              CONSTANT_DATA->EOP_SWITCH_LOW) ||
             (MX_Gtwy_Control_B.RateTransition2 != ENGINE_RUNNING)) &&
            (MX_Gtwy_Control_B.state_EOPSw_lo1y != SHUTDOWN)) {
          // Transition: '<S190>:18'
          // Exit Internal 'SHUTDOWN': '<S190>:7'
          MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_iopf =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_iool;
          MX_Gtwy_Control_DWork.bitsForTID1.is_c55_MX_Gtwy_Control =
            MX_Gtwy_Contro_IN_EXTREMELY_LOW;

          // Entry Internal 'EXTREMELY_LOW': '<S190>:8'
          // Transition: '<S190>:12'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_ijig =
            MX_Gt_IN_DEBOUNCE_EXTREMELY_LOW;

          // Entry 'DEBOUNCE_EXTREMELY_LOW': '<S190>:4'
          MX_Gtwy_Control_DWork.debounceCount_nzxz = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_iopf ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_n0jr) {
          // During 'DEBOUNCE': '<S190>:6'
          if (MX_Gtwy_Control_DWork.debounceCount_nzxz >=
              CONSTANT_DATA->EOP_DEBOUNCE_SHUTDOWN) {
            // Transition: '<S190>:17'
            MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_iopf =
              MX_Gtwy_Contr_IN_SHUTDOWN_a1gun;

            // Entry 'SHUTDOWN': '<S190>:3'
            MX_Gtwy_Control_B.state_EOPSw_lo1y = SHUTDOWN;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_nzxz = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_nzxz + 1);
          }
        } else {
          MX_Gtwy_Control_B.state_EOPSw_lo1y = SHUTDOWN;

          // During 'SHUTDOWN': '<S190>:3'
        }
        break;
      }
    }

    // End of Chart: '<S176>/SwitchInput'

    // SignalConversion: '<S176>/OutportBufferForstate_EOPSw'
    MX_Gtwy_Control_B.state_EOPSw = MX_Gtwy_Control_B.state_EOPSw_lo1y;

    // SignalConversion: '<S176>/OutportBufferForflt_EOP' incorporates:
    //   Constant: '<S176>/Constant1'

    MX_Gtwy_Control_B.OutportBufferForflt_EOP =
      CONSTANT_DATA->EOP_SWITCH_PRESSURE_VALUE;

    // SignalConversion: '<S176>/OutportBufferForgau_EOP' incorporates:
    //   Constant: '<S176>/Constant'

    MX_Gtwy_Control_B.OutportBufferForgau_EOP =
      CONSTANT_DATA->EOP_SWITCH_GAUGE_VALUE;
  }

  // End of Outputs for SubSystem: '<S78>/SwitchInput'

  // Switch: '<S78>/sel_State'
  if (outputSelect_EOP) {
    state_EOP = MX_Gtwy_Control_B.state_EOPSw;
  } else {
    state_EOP = MX_Gtwy_Control_B.state_EOPSr;
  }

  // End of Switch: '<S78>/sel_State'

  // Switch: '<S78>/sel_State1'
  if (outputSelect_EOP) {
    flt_EOP = MX_Gtwy_Control_B.OutportBufferForflt_EOP;
  } else {
    flt_EOP = MX_Gtwy_Control_B.flt_EOP_b0gx;
  }

  // End of Switch: '<S78>/sel_State1'

  // Switch: '<S78>/sel_State2'
  if (outputSelect_EOP) {
    gau_EOP = MX_Gtwy_Control_B.OutportBufferForgau_EOP;
  } else {
    gau_EOP = MX_Gtwy_Control_B.gau_EOP_dohu;
  }

  // End of Switch: '<S78>/sel_State2'
}

// System initialize for atomic system: '<S3>/Eco_Mode'
void MX_Gtwy_Control_Eco_Mode_Init(void)
{
  // SystemInitialize for Chart: '<S79>/Eco_Mode'
  MX_Gtwy_Control_DWork.bitsForTID0.is_Deluxe_G55_oviv =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_px0u;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_cozc =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_px0u;
  MX_Gtwy_Control_DWork.bitsForTID0.is_active_c83_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_c83_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_px0u;
  state_EcoMode = 0U;
}

// Output and update for atomic system: '<S3>/Eco_Mode'
void MX_Gtwy_Control_Eco_Mode(void)
{
  // Chart: '<S79>/Eco_Mode' incorporates:
  //   Inport: '<Root>/dlx_G55_EcoMode'
  //   Inport: '<Root>/flag_InitEERead'
  //   Outport: '<Root>/cmd_TriggerRight'

  // Gateway: MX_Gtwy_Control/Inputs/Eco_Mode/Eco_Mode
  // During: MX_Gtwy_Control/Inputs/Eco_Mode/Eco_Mode
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID0.is_active_c83_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/Eco_Mode/Eco_Mode
    MX_Gtwy_Control_DWork.bitsForTID0.is_active_c83_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/Eco_Mode/Eco_Mode
    // Transition: '<S191>:37'
    if (CONSTANT_DATA->DELUXE_GEN5_5_FUNCTION == NON_FUNCTIONAL) {
      // Transition: '<S191>:38'
      MX_Gtwy_Control_DWork.bitsForTID0.is_c83_MX_Gtwy_Control =
        MX_Gtwy_Control_IN_Normal_gl5b;

      // Entry Internal 'Normal': '<S191>:24'
      // Transition: '<S191>:27'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_cozc = MX_Gtwy_Control_IN_Init;

      // Entry 'Init': '<S191>:35'
      state_EcoMode = INACTIVE;
    } else {
      // Transition: '<S191>:39'
      MX_Gtwy_Control_DWork.bitsForTID0.is_c83_MX_Gtwy_Control =
        MX_Gtwy_Control_IN_Deluxe_G55;

      // Entry Internal 'Deluxe_G55': '<S191>:22'
      // Transition: '<S191>:3'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Deluxe_G55_oviv =
        MX_Gtwy_Control_IN_Off_n0qy;

      // Entry 'Off': '<S191>:2'
      state_EcoMode = INACTIVE;
    }
  } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_c83_MX_Gtwy_Control ==
             MX_Gtwy_Control_IN_Deluxe_G55) {
    // During 'Deluxe_G55': '<S191>:22'
    if (MX_Gtwy_Control_DWork.bitsForTID0.is_Deluxe_G55_oviv ==
        MX_Gtwy_Control_IN_Off_n0qy) {
      state_EcoMode = INACTIVE;

      // During 'Off': '<S191>:2'
      if (dlx_G55_EcoMode == ACTIVE) {
        // Transition: '<S191>:5'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Deluxe_G55_oviv =
          MX_Gtwy_Control_IN_On_e5h5;

        // Entry 'On': '<S191>:1'
        state_EcoMode = ACTIVE;
      }
    } else {
      state_EcoMode = ACTIVE;

      // During 'On': '<S191>:1'
      if (dlx_G55_EcoMode != ACTIVE) {
        // Transition: '<S191>:4'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Deluxe_G55_oviv =
          MX_Gtwy_Control_IN_Off_n0qy;

        // Entry 'Off': '<S191>:2'
        state_EcoMode = INACTIVE;
      }
    }
  } else {
    // During 'Normal': '<S191>:24'
    switch (MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_cozc) {
     case MX_Gtwy_Control_IN_Init:
      state_EcoMode = INACTIVE;

      // During 'Init': '<S191>:35'
      if (flag_InitEERead) {
        // Transition: '<S191>:28'
        if ((eeMirror.ee_EcoMode == ACTIVE) && ((eeMirror.deluxe_G5 == ACTIVE) ||
             (CONSTANT_DATA->DELUXE_GEN5_5_FUNCTION != NON_FUNCTIONAL))) {
          // Transition: '<S191>:29'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_cozc =
            MX_Gtwy_Control_IN_On;

          // Entry 'On': '<S191>:34'
          state_EcoMode = ACTIVE;
          eeMirror.ee_EcoMode = ACTIVE;
          matlab_UpdateEEVar();
        } else {
          // Transition: '<S191>:30'
          // Transition: '<S191>:33'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_cozc =
            MX_Gtwy_Control_IN_Off;

          // Entry 'Off': '<S191>:36'
          eeMirror.ee_EcoMode = INACTIVE;
          matlab_UpdateEEVar();
        }
      }
      break;

     case MX_Gtwy_Control_IN_Off:
      state_EcoMode = INACTIVE;

      // During 'Off': '<S191>:36'
      if (MX_Gtwy_Control_Y.cmd_TriggerRight) {
        // Transition: '<S191>:32'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_cozc = MX_Gtwy_Control_IN_On;

        // Entry 'On': '<S191>:34'
        state_EcoMode = ACTIVE;
        eeMirror.ee_EcoMode = ACTIVE;
        matlab_UpdateEEVar();
      }
      break;

     default:
      state_EcoMode = ACTIVE;

      // During 'On': '<S191>:34'
      if (MX_Gtwy_Control_Y.cmd_TriggerRight) {
        // Transition: '<S191>:31'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_cozc =
          MX_Gtwy_Control_IN_Off;

        // Entry 'Off': '<S191>:36'
        state_EcoMode = INACTIVE;
        eeMirror.ee_EcoMode = INACTIVE;
        matlab_UpdateEEVar();
      }
      break;
    }
  }

  // End of Chart: '<S79>/Eco_Mode'
}

// Function for Chart: '<S80>/EngineSpeed'
static void MX_Gtwy_Control_SENSOR_hjqv(const uint16_T *flt_EngineSpeed_cth2)
{
  // During 'SENSOR': '<S194>:221'
  if (CONSTANT_DATA->ECU_FUNCTION != NON_FUNCTIONAL) {
    // Transition: '<S194>:325'
    // Exit Internal 'SENSOR': '<S194>:221'
    MX_Gtwy_Control_DWork.bitsForTID0.is_SENSOR =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;

    // Exit Internal 'NORMAL': '<S194>:228'
    // Exit Internal 'EXTREMELY_HIGH': '<S194>:254'
    MX_Gtwy_Control_DWork.bitsForTID0.is_EXTREMELY_HIGH_fq5s =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ebxe =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;

    // Exit Internal 'HIGH': '<S194>:249'
    MX_Gtwy_Control_DWork.bitsForTID0.is_HIGH_gpdu =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;

    // Exit Internal 'NORMAL': '<S194>:244'
    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_fms3 =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;

    // Exit Internal 'NO_SIGNAL': '<S194>:238'
    MX_Gtwy_Control_DWork.bitsForTID0.is_NO_SIGNAL =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;

    // Exit Internal 'SHUTDOWN': '<S194>:259'
    MX_Gtwy_Control_DWork.bitsForTID0.is_SHUTDOWN_hv0s =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;

    // Exit Internal 'OUT_OF_RANGE': '<S194>:264'
    MX_Gtwy_Control_DWork.bitsForTID0.is_OUT_OF_RANGE =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
    MX_Gtwy_Control_DWork.bitsForTID0.is_c56_MX_Gtwy_Control =
      MX_Gtwy_Control_IN_ECU_cvui;

    // Entry Internal 'ECU': '<S194>:277'
    // Transition: '<S194>:346'
    MX_Gtwy_Control_DWork.bitsForTID0.is_ECU_dizm =
      MX_Gtwy_Contro_IN_NORMAL_pxxxis;

    // Entry 'NORMAL': '<S194>:337'
    state_EngineSpeed = NORMAL;
  } else {
    flt_EngineSpeed = *flt_EngineSpeed_cth2;
    switch (MX_Gtwy_Control_DWork.bitsForTID0.is_SENSOR) {
     case MX_Gtwy__IN_NON_FUNCTIONAL_lklt:
      state_EngineSpeed = NORMAL;

      // Inport: '<Root>/state_System'
      // During 'NON_FUNCTIONAL': '<S194>:227'
      if ((CONSTANT_DATA->ENGINE_SPEED_FUNCTION != NON_FUNCTIONAL) &&
          (state_System == SYS_NORMAL) && (CONSTANT_DATA->ECU_FUNCTION ==
           NON_FUNCTIONAL)) {
        // Transition: '<S194>:224'
        MX_Gtwy_Control_DWork.bitsForTID0.is_SENSOR =
          MX_Gtwy_Control_IN_NORMAL_pxxx;

        // Entry Internal 'NORMAL': '<S194>:228'
        // Transition: '<S194>:231'
        MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ebxe =
          MX_Gtwy_Control_IN_NORMAL_pxxxi;

        // Entry Internal 'NORMAL': '<S194>:244'
        // Transition: '<S194>:245'
        MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_fms3 =
          MX_Gtwy_Contro_IN_DEBOUNCE_gayh;

        // Entry 'DEBOUNCE': '<S194>:248'
        MX_Gtwy_Control_DWork.debounceCount_ot4x = 0U;
      }

      // End of Inport: '<Root>/state_System'
      break;

     case MX_Gtwy_Control_IN_NORMAL_pxxx:
      // During 'NORMAL': '<S194>:228'
      if (*flt_EngineSpeed_cth2 >= CONSTANT_DATA->ENGINE_SPEED_OUT_OF_RANGE) {
        // Transition: '<S194>:225'
        // Exit Internal 'NORMAL': '<S194>:228'
        // Exit Internal 'EXTREMELY_HIGH': '<S194>:254'
        MX_Gtwy_Control_DWork.bitsForTID0.is_EXTREMELY_HIGH_fq5s =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
        MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ebxe =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;

        // Exit Internal 'HIGH': '<S194>:249'
        MX_Gtwy_Control_DWork.bitsForTID0.is_HIGH_gpdu =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;

        // Exit Internal 'NORMAL': '<S194>:244'
        MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_fms3 =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;

        // Exit Internal 'NO_SIGNAL': '<S194>:238'
        MX_Gtwy_Control_DWork.bitsForTID0.is_NO_SIGNAL =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;

        // Exit Internal 'SHUTDOWN': '<S194>:259'
        MX_Gtwy_Control_DWork.bitsForTID0.is_SHUTDOWN_hv0s =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
        MX_Gtwy_Control_DWork.bitsForTID0.is_SENSOR =
          MX_Gtwy_Control_IN_OUT_OF_RANGE;

        // Entry Internal 'OUT_OF_RANGE': '<S194>:264'
        // Transition: '<S194>:265'
        MX_Gtwy_Control_DWork.bitsForTID0.is_OUT_OF_RANGE =
          MX_Gtwy_Contro_IN_DEBOUNCE_gayh;

        // Entry 'DEBOUNCE': '<S194>:268'
        MX_Gtwy_Control_DWork.debounceCount_ot4x = 0U;
      } else if (state_System != SYS_NORMAL) {
        // Transition: '<S194>:223'
        // Exit Internal 'NORMAL': '<S194>:228'
        // Exit Internal 'EXTREMELY_HIGH': '<S194>:254'
        MX_Gtwy_Control_DWork.bitsForTID0.is_EXTREMELY_HIGH_fq5s =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
        MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ebxe =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;

        // Exit Internal 'HIGH': '<S194>:249'
        MX_Gtwy_Control_DWork.bitsForTID0.is_HIGH_gpdu =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;

        // Exit Internal 'NORMAL': '<S194>:244'
        MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_fms3 =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;

        // Exit Internal 'NO_SIGNAL': '<S194>:238'
        MX_Gtwy_Control_DWork.bitsForTID0.is_NO_SIGNAL =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;

        // Exit Internal 'SHUTDOWN': '<S194>:259'
        MX_Gtwy_Control_DWork.bitsForTID0.is_SHUTDOWN_hv0s =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
        MX_Gtwy_Control_DWork.bitsForTID0.is_SENSOR =
          MX_Gtwy__IN_NON_FUNCTIONAL_lklt;

        // Entry 'NON_FUNCTIONAL': '<S194>:227'
        state_EngineSpeed = NORMAL;
      } else {
        switch (MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ebxe) {
         case MX_Gtwy__IN_EXTREMELY_HIGH_d52g:
          // During 'EXTREMELY_HIGH': '<S194>:254'
          if (*flt_EngineSpeed_cth2 < CONSTANT_DATA->ENGINE_SPEED_EXTREMELY_HIGH)
          {
            // Transition: '<S194>:235'
            // Exit Internal 'EXTREMELY_HIGH': '<S194>:254'
            MX_Gtwy_Control_DWork.bitsForTID0.is_EXTREMELY_HIGH_fq5s =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ebxe =
              MX_Gtwy_Control_IN_HIGH_hyvb;

            // Entry Internal 'HIGH': '<S194>:249'
            // Transition: '<S194>:250'
            MX_Gtwy_Control_DWork.bitsForTID0.is_HIGH_gpdu =
              MX_Gtwy_Contro_IN_DEBOUNCE_gayh;

            // Entry 'DEBOUNCE': '<S194>:253'
            MX_Gtwy_Control_DWork.debounceCount_ot4x = 0U;
          } else if ((CONSTANT_DATA->SHUTDOWN_FUNCTION != NON_FUNCTIONAL) &&
                     (state_EngineSpeed == EXTREMELY_HIGH)) {
            // Transition: '<S194>:236'
            // Exit Internal 'EXTREMELY_HIGH': '<S194>:254'
            MX_Gtwy_Control_DWork.bitsForTID0.is_EXTREMELY_HIGH_fq5s =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ebxe =
              MX_Gtwy_Contro_IN_SHUTDOWN_eq2x;

            // Entry Internal 'SHUTDOWN': '<S194>:259'
            // Transition: '<S194>:260'
            MX_Gtwy_Control_DWork.bitsForTID0.is_SHUTDOWN_hv0s =
              MX_Gtwy_Contro_IN_DEBOUNCE_gayh;

            // Entry 'DEBOUNCE': '<S194>:263'
            MX_Gtwy_Control_DWork.debounceCount_ot4x = 0U;
          } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_EXTREMELY_HIGH_fq5s ==
                     MX_Gtwy_Contro_IN_DEBOUNCE_gayh) {
            // During 'DEBOUNCE': '<S194>:258'
            if ((MX_Gtwy_Control_DWork.debounceCount_ot4x >=
                 CONSTANT_DATA->ENGINE_SPEED_DEBOUNCE_EXTREMELY_HIGH) ||
                (state_EngineSpeed == EXTREMELY_HIGH)) {
              // Transition: '<S194>:256'
              MX_Gtwy_Control_DWork.bitsForTID0.is_EXTREMELY_HIGH_fq5s =
                MX_Gtwy_IN_EXTREMELY_HIGH_d52gl;

              // Entry 'EXTREMELY_HIGH': '<S194>:257'
              state_EngineSpeed = EXTREMELY_HIGH;
            } else {
              MX_Gtwy_Control_DWork.debounceCount_ot4x = (uint16_T)(int32_T)
                ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ot4x + 1);
            }
          } else {
            state_EngineSpeed = EXTREMELY_HIGH;

            // During 'EXTREMELY_HIGH': '<S194>:257'
          }
          break;

         case MX_Gtwy_Control_IN_HIGH_hyvb:
          // During 'HIGH': '<S194>:249'
          if (*flt_EngineSpeed_cth2 >=
              CONSTANT_DATA->ENGINE_SPEED_EXTREMELY_HIGH) {
            // Transition: '<S194>:234'
            // Exit Internal 'HIGH': '<S194>:249'
            MX_Gtwy_Control_DWork.bitsForTID0.is_HIGH_gpdu =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ebxe =
              MX_Gtwy__IN_EXTREMELY_HIGH_d52g;

            // Entry Internal 'EXTREMELY_HIGH': '<S194>:254'
            // Transition: '<S194>:255'
            MX_Gtwy_Control_DWork.bitsForTID0.is_EXTREMELY_HIGH_fq5s =
              MX_Gtwy_Contro_IN_DEBOUNCE_gayh;

            // Entry 'DEBOUNCE': '<S194>:258'
            MX_Gtwy_Control_DWork.debounceCount_ot4x = 0U;
          } else if (*flt_EngineSpeed_cth2 < CONSTANT_DATA->ENGINE_SPEED_HIGH) {
            // Transition: '<S194>:233'
            // Exit Internal 'HIGH': '<S194>:249'
            MX_Gtwy_Control_DWork.bitsForTID0.is_HIGH_gpdu =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ebxe =
              MX_Gtwy_Control_IN_NORMAL_pxxxi;

            // Entry Internal 'NORMAL': '<S194>:244'
            // Transition: '<S194>:245'
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_fms3 =
              MX_Gtwy_Contro_IN_DEBOUNCE_gayh;

            // Entry 'DEBOUNCE': '<S194>:248'
            MX_Gtwy_Control_DWork.debounceCount_ot4x = 0U;
          } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_HIGH_gpdu ==
                     MX_Gtwy_Contro_IN_DEBOUNCE_gayh) {
            // During 'DEBOUNCE': '<S194>:253'
            if ((MX_Gtwy_Control_DWork.debounceCount_ot4x >=
                 CONSTANT_DATA->ENGINE_SPEED_DEBOUNCE_HIGH) ||
                (state_EngineSpeed == HIGH)) {
              // Transition: '<S194>:251'
              MX_Gtwy_Control_DWork.bitsForTID0.is_HIGH_gpdu =
                MX_Gtwy_Control_IN_HIGH_hyvb;

              // Entry 'HIGH': '<S194>:252'
              state_EngineSpeed = HIGH;
            } else {
              MX_Gtwy_Control_DWork.debounceCount_ot4x = (uint16_T)(int32_T)
                ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ot4x + 1);
            }
          } else {
            state_EngineSpeed = HIGH;

            // During 'HIGH': '<S194>:252'
          }
          break;

         case MX_Gtwy_Control_IN_NORMAL_pxxxi:
          // Inport: '<Root>/adin_EOP'
          // During 'NORMAL': '<S194>:244'
          if ((*flt_EngineSpeed_cth2 <= CONSTANT_DATA->ENGINE_SPEED_NO_SIGNAL) &&
              (MX_Gtwy_Control_B.RateTransition38 == NORMAL) &&
              (MX_Gtwy_Control_B.RateTransition35 == NORMAL) &&
              (((CONSTANT_DATA->EOP_FUNCTION != SWITCH_INPUT) &&
                (MX_Gtwy_Control_B.RateTransition38 == NORMAL) &&
                (MX_Gtwy_Control_B.RateTransition37 >=
                 CONSTANT_DATA->EOP_NO_ENGINE_SPEED_SIGNAL_VALUE)) ||
               ((CONSTANT_DATA->EOP_FUNCTION == SWITCH_INPUT) && (adin_EOP >
                 CONSTANT_DATA->EOP_SWITCH_LOW)))) {
            // Transition: '<S194>:229'
            // Exit Internal 'NORMAL': '<S194>:244'
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_fms3 =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ebxe =
              MX_Gtwy_Control_IN_NO_SIGNAL;

            // Entry Internal 'NO_SIGNAL': '<S194>:238'
            // Transition: '<S194>:239'
            MX_Gtwy_Control_DWork.bitsForTID0.is_NO_SIGNAL =
              MX_Gtwy_Contro_IN_DEBOUNCE_gayh;

            // Entry 'DEBOUNCE': '<S194>:242'
            MX_Gtwy_Control_DWork.debounceCount_ot4x = 0U;
          } else if (*flt_EngineSpeed_cth2 >= CONSTANT_DATA->ENGINE_SPEED_HIGH)
          {
            // Transition: '<S194>:232'
            // Exit Internal 'NORMAL': '<S194>:244'
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_fms3 =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ebxe =
              MX_Gtwy_Control_IN_HIGH_hyvb;

            // Entry Internal 'HIGH': '<S194>:249'
            // Transition: '<S194>:250'
            MX_Gtwy_Control_DWork.bitsForTID0.is_HIGH_gpdu =
              MX_Gtwy_Contro_IN_DEBOUNCE_gayh;

            // Entry 'DEBOUNCE': '<S194>:253'
            MX_Gtwy_Control_DWork.debounceCount_ot4x = 0U;
          } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_fms3 ==
                     MX_Gtwy_Contro_IN_DEBOUNCE_gayh) {
            // During 'DEBOUNCE': '<S194>:248'
            if ((MX_Gtwy_Control_DWork.debounceCount_ot4x >=
                 CONSTANT_DATA->ENGINE_SPEED_DEBOUNCE_NORMAL) ||
                (state_EngineSpeed == NORMAL)) {
              // Transition: '<S194>:246'
              MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_fms3 =
                MX_Gtwy_Control_IN_NORMAL_pxxx;

              // Entry 'NORMAL': '<S194>:247'
              state_EngineSpeed = NORMAL;
            } else {
              MX_Gtwy_Control_DWork.debounceCount_ot4x = (uint16_T)(int32_T)
                ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ot4x + 1);
            }
          } else {
            state_EngineSpeed = NORMAL;

            // During 'NORMAL': '<S194>:247'
          }
          break;

         case MX_Gtwy_Control_IN_NO_SIGNAL:
          // Inport: '<Root>/adin_EOP'
          // During 'NO_SIGNAL': '<S194>:238'
          if ((*flt_EngineSpeed_cth2 > CONSTANT_DATA->ENGINE_SPEED_NO_SIGNAL) ||
              (MX_Gtwy_Control_B.RateTransition38 != NORMAL) ||
              (MX_Gtwy_Control_B.RateTransition35 != NORMAL) ||
              (((CONSTANT_DATA->EOP_FUNCTION != SWITCH_INPUT) &&
                (MX_Gtwy_Control_B.RateTransition37 <
                 CONSTANT_DATA->EOP_NO_ENGINE_SPEED_SIGNAL_VALUE)) ||
               ((CONSTANT_DATA->EOP_FUNCTION == SWITCH_INPUT) && (adin_EOP <=
                 CONSTANT_DATA->EOP_SWITCH_LOW)))) {
            // Transition: '<S194>:230'
            // Exit Internal 'NO_SIGNAL': '<S194>:238'
            MX_Gtwy_Control_DWork.bitsForTID0.is_NO_SIGNAL =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ebxe =
              MX_Gtwy_Control_IN_NORMAL_pxxxi;

            // Entry Internal 'NORMAL': '<S194>:244'
            // Transition: '<S194>:245'
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_fms3 =
              MX_Gtwy_Contro_IN_DEBOUNCE_gayh;

            // Entry 'DEBOUNCE': '<S194>:248'
            MX_Gtwy_Control_DWork.debounceCount_ot4x = 0U;
          } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_NO_SIGNAL ==
                     MX_Gtwy_Contro_IN_DEBOUNCE_gayh) {
            // During 'DEBOUNCE': '<S194>:242'
            if ((MX_Gtwy_Control_DWork.debounceCount_ot4x >=
                 CONSTANT_DATA->ENGINE_SPEED_DEBOUNCE_NO_SIGNAL) ||
                (state_EngineSpeed == NO_SIGNAL)) {
              // Transition: '<S194>:240'
              MX_Gtwy_Control_DWork.bitsForTID0.is_NO_SIGNAL =
                MX_Gtwy_Contr_IN_NO_SIGNAL_i3pr;

              // Entry 'NO_SIGNAL': '<S194>:241'
              state_EngineSpeed = NO_SIGNAL;
            } else {
              MX_Gtwy_Control_DWork.debounceCount_ot4x = (uint16_T)(int32_T)
                ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ot4x + 1);
            }
          } else {
            state_EngineSpeed = NO_SIGNAL;

            // During 'NO_SIGNAL': '<S194>:241'
          }
          break;

         default:
          // During 'SHUTDOWN': '<S194>:259'
          if ((state_EngineSpeed != SHUTDOWN) && (*flt_EngineSpeed_cth2 <
               CONSTANT_DATA->ENGINE_SPEED_EXTREMELY_HIGH)) {
            // Transition: '<S194>:237'
            // Exit Internal 'SHUTDOWN': '<S194>:259'
            MX_Gtwy_Control_DWork.bitsForTID0.is_SHUTDOWN_hv0s =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ebxe =
              MX_Gtwy__IN_EXTREMELY_HIGH_d52g;

            // Entry Internal 'EXTREMELY_HIGH': '<S194>:254'
            // Transition: '<S194>:255'
            MX_Gtwy_Control_DWork.bitsForTID0.is_EXTREMELY_HIGH_fq5s =
              MX_Gtwy_Contro_IN_DEBOUNCE_gayh;

            // Entry 'DEBOUNCE': '<S194>:258'
            MX_Gtwy_Control_DWork.debounceCount_ot4x = 0U;
          } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_SHUTDOWN_hv0s ==
                     MX_Gtwy_Contro_IN_DEBOUNCE_gayh) {
            // During 'DEBOUNCE': '<S194>:263'
            if (MX_Gtwy_Control_DWork.debounceCount_ot4x >=
                CONSTANT_DATA->ENGINE_SPEED_DEBOUNCE_SHUTDOWN) {
              // Transition: '<S194>:261'
              MX_Gtwy_Control_DWork.bitsForTID0.is_SHUTDOWN_hv0s =
                MX_Gtwy_Contr_IN_SHUTDOWN_eq2x0;

              // Entry 'SHUTDOWN': '<S194>:262'
              state_EngineSpeed = SHUTDOWN;
            } else {
              MX_Gtwy_Control_DWork.debounceCount_ot4x = (uint16_T)(int32_T)
                ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ot4x + 1);
            }
          } else {
            state_EngineSpeed = SHUTDOWN;

            // During 'SHUTDOWN': '<S194>:262'
          }
          break;
        }
      }
      break;

     default:
      // During 'OUT_OF_RANGE': '<S194>:264'
      if (*flt_EngineSpeed_cth2 < CONSTANT_DATA->ENGINE_SPEED_OUT_OF_RANGE) {
        // Transition: '<S194>:226'
        // Exit Internal 'OUT_OF_RANGE': '<S194>:264'
        MX_Gtwy_Control_DWork.bitsForTID0.is_OUT_OF_RANGE =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
        MX_Gtwy_Control_DWork.bitsForTID0.is_SENSOR =
          MX_Gtwy_Control_IN_NORMAL_pxxx;

        // Entry Internal 'NORMAL': '<S194>:228'
        // Transition: '<S194>:231'
        MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ebxe =
          MX_Gtwy_Control_IN_NORMAL_pxxxi;

        // Entry Internal 'NORMAL': '<S194>:244'
        // Transition: '<S194>:245'
        MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_fms3 =
          MX_Gtwy_Contro_IN_DEBOUNCE_gayh;

        // Entry 'DEBOUNCE': '<S194>:248'
        MX_Gtwy_Control_DWork.debounceCount_ot4x = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_OUT_OF_RANGE ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_gayh) {
        // During 'DEBOUNCE': '<S194>:268'
        if ((MX_Gtwy_Control_DWork.debounceCount_ot4x >=
             CONSTANT_DATA->ENGINE_SPEED_DEBOUNCE_OUT_OF_RANGE) ||
            (state_EngineSpeed == OUT_OF_RANGE)) {
          // Transition: '<S194>:266'
          MX_Gtwy_Control_DWork.bitsForTID0.is_OUT_OF_RANGE =
            MX_Gtwy_Co_IN_OUT_OF_RANGE_kvq1;

          // Entry 'OUT_OF_RANGE': '<S194>:267'
          state_EngineSpeed = OUT_OF_RANGE;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_ot4x = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_ot4x + 1);
        }
      } else {
        state_EngineSpeed = OUT_OF_RANGE;

        // During 'OUT_OF_RANGE': '<S194>:267'
      }
      break;
    }
  }
}

// System initialize for atomic system: '<S3>/EngineSpeed'
void MX_Gtwy_Contro_EngineSpeed_Init(void)
{
  // SystemInitialize for Chart: '<S80>/Gain'
  MX_Gtwy_Control_DWork.bitsForTID0.is_FILTER_pqgh =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
  MX_Gtwy_Control_DWork.bitsForTID0.is_GAIN = MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
  MX_Gtwy_Control_DWork.bitsForTID0.is_FILTER = MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
  MX_Gtwy_Control_DWork.bitsForTID0.is_active_c18_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.count_Factor = 0U;
  MX_Gtwy_Control_DWork.change_EngineSpeed = 0U;
  gain_EngineSpeed = 0U;
  MX_Gtwy_Control_B.flt_EngineSpeed_jpwv = 0;

  // SystemInitialize for Chart: '<S80>/EngineSpeed'
  MX_Gtwy_Control_DWork.bitsForTID0.is_ECU_dizm =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
  MX_Gtwy_Control_DWork.bitsForTID0.is_SENSOR = MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_ebxe =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
  MX_Gtwy_Control_DWork.bitsForTID0.is_EXTREMELY_HIGH_fq5s =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
  MX_Gtwy_Control_DWork.bitsForTID0.is_HIGH_gpdu =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_fms3 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
  MX_Gtwy_Control_DWork.bitsForTID0.is_NO_SIGNAL =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
  MX_Gtwy_Control_DWork.bitsForTID0.is_SHUTDOWN_hv0s =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
  MX_Gtwy_Control_DWork.bitsForTID0.is_OUT_OF_RANGE =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
  MX_Gtwy_Control_DWork.bitsForTID0.is_active_c56_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_c56_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
  MX_Gtwy_Control_DWork.debounceCount_ot4x = 0U;
  state_EngineSpeed = 0U;
  flt_EngineSpeed = 0U;
}

// Output and update for atomic system: '<S3>/EngineSpeed'
void MX_Gtwy_Control_EngineSpeed(void)
{
  int16_T rtb_convEngineSpeed;
  uint16_T flt_EngineSpeed_cth2;
  uint32_T tmp;

  // Outputs for Enabled SubSystem: '<S80>/calculate_engine_speed' incorporates:
  //   EnablePort: '<S196>/Enable'

  // RelationalOperator: '<S192>/Compare' incorporates:
  //   Constant: '<S192>/Constant'
  //   Constant: '<S80>/Constant'

  if (CONSTANT_DATA->ECU_FUNCTION == NON_FUNCTIONAL) {
    // Product: '<S196>/Divide' incorporates:
    //   Constant: '<S196>/Flywheel_Teeth'
    //   Constant: '<S196>/Period_Counts_Per_Second'
    //   Gain: '<S196>/Gain1'
    //   Inport: '<Root>/freq_EngineSpeed'
    //   Product: '<S196>/Product'

    tmp = (uint32_T)(freq_EngineSpeed * (uint32_T)CONSTANT_DATA->FLYWHEEL_TEETH);
    calc_EngineSpeed = (uint16_T)(tmp == 0U ? MAX_uint32_T : (uint32_T)
      ((uint32_T)((uint32_T)((uint8_T)60U) * PERIOD_COUNTS_PER_SECOND) / tmp));
  }

  // End of RelationalOperator: '<S192>/Compare'
  // End of Outputs for SubSystem: '<S80>/calculate_engine_speed'

  // Switch: '<S80>/Switch' incorporates:
  //   Constant: '<S193>/Constant'
  //   Constant: '<S80>/Constant1'
  //   RelationalOperator: '<S193>/Compare'

  if (CONSTANT_DATA->ECU_FUNCTION == NON_FUNCTIONAL) {
    // DataTypeConversion: '<S80>/Data Type Conversion2'
    rtb_convEngineSpeed = (int16_T)calc_EngineSpeed;
  } else {
    // DataTypeConversion: '<S80>/Data Type Conversion2' incorporates:
    //   Inport: '<Root>/ecu_EngineSpeed'

    rtb_convEngineSpeed = (int16_T)ecu_EngineSpeed;
  }

  // End of Switch: '<S80>/Switch'

  // Chart: '<S80>/Gain'
  // Gateway: MX_Gtwy_Control/Inputs/EngineSpeed/Gain
  // During: MX_Gtwy_Control/Inputs/EngineSpeed/Gain
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID0.is_active_c18_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/EngineSpeed/Gain
    MX_Gtwy_Control_DWork.bitsForTID0.is_active_c18_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/EngineSpeed/Gain
    // Entry Internal 'GAIN': '<S195>:1'
    // Transition: '<S195>:48'
    MX_Gtwy_Control_DWork.bitsForTID0.is_GAIN = MX_Gtwy_Control_IN_SLOW_FILTER;

    // Entry Internal 'FILTER': '<S195>:2'
    // Transition: '<S195>:17'
    MX_Gtwy_Control_DWork.bitsForTID0.is_FILTER_pqgh =
      MX_Gtwy_Control_IN_INITIAL_lc3j;

    // Entry 'INITIAL': '<S195>:3'
    MX_Gtwy_Control_B.flt_EngineSpeed_jpwv = (int32_T)((int32_T)
      rtb_convEngineSpeed << 16);
  } else {
    // During 'GAIN': '<S195>:1'
    if (MX_Gtwy_Control_DWork.bitsForTID0.is_GAIN ==
        MX_Gtwy_Control_IN_FAST_FILTER) {
      // During 'FAST_FILTER': '<S195>:41'
      if ((MX_Gtwy_Control_DWork.change_EngineSpeed <=
           CONSTANT_DATA->ENGINE_RPM_FACTOR) && ((int32_T)rtb_convEngineSpeed >=
           (int32_T)CONSTANT_DATA->ENGINE_SPEED_RUNNING)) {
        // Transition: '<S195>:43'
        // Exit Internal 'FAST_FILTER': '<S195>:41'
        // Exit Internal 'FILTER': '<S195>:59'
        MX_Gtwy_Control_DWork.bitsForTID0.is_FILTER =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_hxbn;
        MX_Gtwy_Control_DWork.bitsForTID0.is_GAIN =
          MX_Gtwy_Control_IN_SLOW_FILTER;
      } else {
        // During 'CHANGE': '<S195>:60'
        // Transition: '<S195>:103'
        if (MX_Gtwy_Control_B.flt_EngineSpeed_jpwv > (int32_T)((int32_T)
             rtb_convEngineSpeed << 16)) {
          // Transition: '<S195>:104'
          // Transition: '<S195>:105'
          MX_Gtwy_Control_DWork.change_EngineSpeed = (uint16_T)(int32_T)
            ((int32_T)(MX_Gtwy_Control_B.flt_EngineSpeed_jpwv - (int32_T)
                       ((int32_T)rtb_convEngineSpeed << 16)) >> 16);

          // Transition: '<S195>:107'
        } else {
          // Transition: '<S195>:106'
          MX_Gtwy_Control_DWork.change_EngineSpeed = (uint16_T)(int32_T)
            ((int32_T)((int32_T)((int32_T)rtb_convEngineSpeed << 16) -
                       MX_Gtwy_Control_B.flt_EngineSpeed_jpwv) >> 16);
        }

        // During 'FILTER': '<S195>:59'
        switch (MX_Gtwy_Control_DWork.bitsForTID0.is_FILTER) {
         case MX_Gtwy_Control_IN_FILTER:
          // During 'FILTER': '<S195>:46'
          if ((int32_T)rtb_convEngineSpeed == 0) {
            // Transition: '<S195>:131'
            MX_Gtwy_Control_DWork.bitsForTID0.is_FILTER =
              MX_Gtwy_Control_IN_FILTER1;
          } else {
            gain_EngineSpeed = CONSTANT_DATA->ENGINE_SPEED_FILTER_FAST_VALUE;
          }
          break;

         case MX_Gtwy_Control_IN_FILTER1:
          // During 'FILTER1': '<S195>:128'
          if ((int32_T)rtb_convEngineSpeed != 0) {
            // Transition: '<S195>:133'
            MX_Gtwy_Control_DWork.bitsForTID0.is_FILTER =
              MX_Gtwy_Control_IN_FILTER_COUNT;

            // Entry 'FILTER_COUNT': '<S195>:44'
            MX_Gtwy_Control_DWork.count_Factor = 0U;
          } else {
            gain_EngineSpeed = 0U;
          }
          break;

         default:
          // During 'FILTER_COUNT': '<S195>:44'
          if (((int32_T)MX_Gtwy_Control_DWork.count_Factor > 1) || ((int32_T)
               rtb_convEngineSpeed < (int32_T)
               CONSTANT_DATA->ENGINE_SPEED_RUNNING)) {
            // Transition: '<S195>:47'
            MX_Gtwy_Control_DWork.bitsForTID0.is_FILTER =
              MX_Gtwy_Control_IN_FILTER;
          } else if ((int32_T)rtb_convEngineSpeed == 0) {
            // Transition: '<S195>:132'
            MX_Gtwy_Control_DWork.bitsForTID0.is_FILTER =
              MX_Gtwy_Control_IN_FILTER1;
          } else {
            MX_Gtwy_Control_DWork.count_Factor = (uint8_T)(int32_T)((int32_T)
              MX_Gtwy_Control_DWork.count_Factor + 1);
          }
          break;
        }
      }
    } else {
      // During 'SLOW_FILTER': '<S195>:39'
      if ((MX_Gtwy_Control_DWork.change_EngineSpeed >
           CONSTANT_DATA->ENGINE_RPM_FACTOR) || ((int32_T)rtb_convEngineSpeed <
           (int32_T)CONSTANT_DATA->ENGINE_SPEED_RUNNING)) {
        // Transition: '<S195>:42'
        MX_Gtwy_Control_DWork.bitsForTID0.is_GAIN =
          MX_Gtwy_Control_IN_FAST_FILTER;

        // Entry Internal 'FAST_FILTER': '<S195>:41'
        // Entry Internal 'FILTER': '<S195>:59'
        // Transition: '<S195>:45'
        MX_Gtwy_Control_DWork.bitsForTID0.is_FILTER =
          MX_Gtwy_Control_IN_FILTER_COUNT;

        // Entry 'FILTER_COUNT': '<S195>:44'
        MX_Gtwy_Control_DWork.count_Factor = 0U;
      } else {
        gain_EngineSpeed = CONSTANT_DATA->ENGINE_SPEED_FILTER_SLOW_VALUE;

        // Transition: '<S195>:54'
        if (MX_Gtwy_Control_B.flt_EngineSpeed_jpwv > (int32_T)((int32_T)
             rtb_convEngineSpeed << 16)) {
          // Transition: '<S195>:55'
          // Transition: '<S195>:56'
          MX_Gtwy_Control_DWork.change_EngineSpeed = (uint16_T)(int32_T)
            ((int32_T)(MX_Gtwy_Control_B.flt_EngineSpeed_jpwv - (int32_T)
                       ((int32_T)rtb_convEngineSpeed << 16)) >> 16);

          // Transition: '<S195>:58'
        } else {
          // Transition: '<S195>:57'
          MX_Gtwy_Control_DWork.change_EngineSpeed = (uint16_T)(int32_T)
            ((int32_T)((int32_T)((int32_T)rtb_convEngineSpeed << 16) -
                       MX_Gtwy_Control_B.flt_EngineSpeed_jpwv) >> 16);
        }
      }
    }

    // During 'FILTER': '<S195>:2'
    switch (MX_Gtwy_Control_DWork.bitsForTID0.is_FILTER_pqgh) {
     case MX_Gtwy_Control_IN_INITIAL_lc3j:
      // During 'INITIAL': '<S195>:3'
      if ((int32_T)((int32_T)rtb_convEngineSpeed << 16) >
          MX_Gtwy_Control_B.flt_EngineSpeed_jpwv) {
        // Transition: '<S195>:35'
        MX_Gtwy_Control_DWork.bitsForTID0.is_FILTER_pqgh =
          MX_Gtwy_Co_IN_LP_FILTER_GREATER;
      } else {
        // Transition: '<S195>:18'
        MX_Gtwy_Control_DWork.bitsForTID0.is_FILTER_pqgh =
          MX_Gtwy_Contr_IN_LP_FILTER_e4rv;
      }
      break;

     case MX_Gtwy_Contr_IN_LP_FILTER_e4rv:
      // During 'LP_FILTER': '<S195>:4'
      if ((int32_T)((int32_T)rtb_convEngineSpeed << 16) >
          MX_Gtwy_Control_B.flt_EngineSpeed_jpwv) {
        // Transition: '<S195>:37'
        MX_Gtwy_Control_DWork.bitsForTID0.is_FILTER_pqgh =
          MX_Gtwy_Co_IN_LP_FILTER_GREATER;
      } else {
        MX_Gtwy_Control_B.flt_EngineSpeed_jpwv = (int32_T)((int32_T)((int32_T)
          (MX_Gtwy_Control_B.flt_EngineSpeed_jpwv >> 16) - (int32_T)((int32_T)
          ((int32_T)(MX_Gtwy_Control_B.flt_EngineSpeed_jpwv - (int32_T)((int32_T)
          rtb_convEngineSpeed << 16)) >> 16) >> (int32_T)gain_EngineSpeed)) <<
          16);
      }
      break;

     default:
      // During 'LP_FILTER_GREATER': '<S195>:34'
      if ((int32_T)((int32_T)rtb_convEngineSpeed << 16) <=
          MX_Gtwy_Control_B.flt_EngineSpeed_jpwv) {
        // Transition: '<S195>:36'
        MX_Gtwy_Control_DWork.bitsForTID0.is_FILTER_pqgh =
          MX_Gtwy_Contr_IN_LP_FILTER_e4rv;
      } else {
        MX_Gtwy_Control_B.flt_EngineSpeed_jpwv = (int32_T)((int32_T)((int32_T)
          (MX_Gtwy_Control_B.flt_EngineSpeed_jpwv >> 16) + (int32_T)((int32_T)
          ((int32_T)((int32_T)((int32_T)rtb_convEngineSpeed << 16) -
                     MX_Gtwy_Control_B.flt_EngineSpeed_jpwv) >> 16) >> (int32_T)
          gain_EngineSpeed)) << 16);
      }
      break;
    }
  }

  // End of Chart: '<S80>/Gain'

  // DataTypeConversion: '<S80>/Data Type Conversion1'
  flt_EngineSpeed_cth2 = (uint16_T)(int32_T)
    (MX_Gtwy_Control_B.flt_EngineSpeed_jpwv >> 16);

  // Chart: '<S80>/EngineSpeed'
  // Gateway: MX_Gtwy_Control/Inputs/EngineSpeed/EngineSpeed
  // During: MX_Gtwy_Control/Inputs/EngineSpeed/EngineSpeed
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID0.is_active_c56_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/EngineSpeed/EngineSpeed
    MX_Gtwy_Control_DWork.bitsForTID0.is_active_c56_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/EngineSpeed/EngineSpeed
    // Transition: '<S194>:275'
    MX_Gtwy_Control_DWork.bitsForTID0.is_c56_MX_Gtwy_Control =
      MX_Gtwy_Control_IN_SENSOR_eivs;

    // Entry Internal 'SENSOR': '<S194>:221'
    // Transition: '<S194>:222'
    MX_Gtwy_Control_DWork.bitsForTID0.is_SENSOR =
      MX_Gtwy__IN_NON_FUNCTIONAL_lklt;

    // Entry 'NON_FUNCTIONAL': '<S194>:227'
    state_EngineSpeed = NORMAL;
  } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_c56_MX_Gtwy_Control ==
             MX_Gtwy_Control_IN_ECU_cvui) {
    // During 'ECU': '<S194>:277'
    if (MX_Gtwy_Control_DWork.bitsForTID0.is_ECU_dizm ==
        MX_Gtwy_Contro_IN_NORMAL_pxxxis) {
      state_EngineSpeed = NORMAL;

      // During 'NORMAL': '<S194>:337'
      if (state_CommECU == NO_COMMUNICATION) {
        // Transition: '<S194>:348'
        MX_Gtwy_Control_DWork.bitsForTID0.is_ECU_dizm =
          MX_Gtw_IN_NO_COMMUNICATION_p4qg;

        // Entry 'NO_COMMUNICATION': '<S194>:347'
        flt_EngineSpeed = 0U;
      } else {
        flt_EngineSpeed = flt_EngineSpeed_cth2;
      }
    } else {
      // During 'NO_COMMUNICATION': '<S194>:347'
      if (state_CommECU != NO_COMMUNICATION) {
        // Transition: '<S194>:349'
        MX_Gtwy_Control_DWork.bitsForTID0.is_ECU_dizm =
          MX_Gtwy_Contro_IN_NORMAL_pxxxis;

        // Entry 'NORMAL': '<S194>:337'
        state_EngineSpeed = NORMAL;
      }
    }
  } else {
    MX_Gtwy_Control_SENSOR_hjqv(&flt_EngineSpeed_cth2);
  }

  // End of Chart: '<S80>/EngineSpeed'
}

// System initialize for atomic system: '<S3>/Engine_Oil_Temperature'
void MX__Engine_Oil_Temperature_Init(void)
{
  // SystemInitialize for Chart: '<S81>/ErrorDetection'
  MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_g1eo =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_mqdg;
  MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_g4sj =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_mqdg;
  MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_kgdx =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_mqdg;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ggmx =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_mqdg;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c32_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_c32_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_mqdg;
  MX_Gtwy_Control_DWork.debounceCount_oeeq = 0U;
  state_EOT = 0U;
}

// Output and update for atomic system: '<S3>/Engine_Oil_Temperature'
void MX_Gtwy__Engine_Oil_Temperature(void)
{
  // Chart: '<S81>/ErrorDetection'
  // Gateway: MX_Gtwy_Control/Inputs/Engine_Oil_Temperature/ErrorDetection
  // During: MX_Gtwy_Control/Inputs/Engine_Oil_Temperature/ErrorDetection
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID1.is_active_c32_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/Engine_Oil_Temperature/ErrorDetection
    MX_Gtwy_Control_DWork.bitsForTID1.is_active_c32_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/Engine_Oil_Temperature/ErrorDetection 
    // Transition: '<S197>:276'
    MX_Gtwy_Control_DWork.bitsForTID1.is_c32_MX_Gtwy_Control =
      MX_Gtwy__IN_NON_FUNCTIONAL_cjmf;

    // Entry 'NON_FUNCTIONAL': '<S197>:275'
    state_EOT = INACTIVE;
  } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_c32_MX_Gtwy_Control ==
             MX_Gtwy_Cont_IN_FUNCTIONAL_bcs0) {
    // During 'FUNCTIONAL': '<S197>:109'
    switch (MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_g1eo) {
     case MX_Gtwy_C_IN_EXTREMELY_LOW_djc2:
      // During 'EXTREMELY_LOW': '<S197>:330'
      if ((int32_T)MX_Gtwy_Control_B.RateTransition72 > (int32_T)((int32_T)
           CONSTANT_DATA->EOT_EXTREMELY_LOW + (int32_T)
           CONSTANT_DATA->EOT_TEMPERATURE_HYSTERESIS)) {
        // Transition: '<S197>:347'
        // Exit Internal 'EXTREMELY_LOW': '<S197>:330'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_g4sj =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_mqdg;
        MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_g1eo =
          MX_Gtwy_Control_IN_LOW_igxp;

        // Entry Internal 'LOW': '<S197>:335'
        // Transition: '<S197>:336'
        MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_kgdx =
          MX_Gtwy_Contro_IN_DEBOUNCE_m5nh;

        // Entry 'DEBOUNCE': '<S197>:339'
        MX_Gtwy_Control_DWork.debounceCount_oeeq = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_g4sj ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_m5nh) {
        // During 'DEBOUNCE': '<S197>:333'
        if ((MX_Gtwy_Control_DWork.debounceCount_oeeq >=
             CONSTANT_DATA->EOT_DEBOUNCE_EXTREMELY_LOW) || (state_EOT ==
             EXTREMELY_LOW)) {
          // Transition: '<S197>:332'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_g4sj =
            MX_Gtwy__IN_EXTREMELY_LOW_djc2v;

          // Entry 'EXTREMELY_LOW': '<S197>:334'
          state_EOT = EXTREMELY_LOW;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_oeeq = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_oeeq + 1);
        }
      } else {
        state_EOT = EXTREMELY_LOW;

        // During 'EXTREMELY_LOW': '<S197>:334'
      }
      break;

     case MX_Gtwy_Control_IN_LOW_igxp:
      // During 'LOW': '<S197>:335'
      if ((int32_T)MX_Gtwy_Control_B.RateTransition72 > (int32_T)((int32_T)
           CONSTANT_DATA->EOT_LOW + (int32_T)
           CONSTANT_DATA->EOT_TEMPERATURE_HYSTERESIS)) {
        // Transition: '<S197>:350'
        // Exit Internal 'LOW': '<S197>:335'
        MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_kgdx =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_mqdg;
        MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_g1eo =
          MX_Gtwy_Control_IN_NORMAL_jhgw;

        // Entry Internal 'NORMAL': '<S197>:340'
        // Transition: '<S197>:341'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ggmx =
          MX_Gtwy_IN_DEBOUNCE_NORMAL_ov12;

        // Entry 'DEBOUNCE_NORMAL': '<S197>:343'
        MX_Gtwy_Control_DWork.debounceCount_oeeq = 0U;
      } else if (MX_Gtwy_Control_B.RateTransition72 <=
                 CONSTANT_DATA->EOT_EXTREMELY_LOW) {
        // Transition: '<S197>:348'
        // Exit Internal 'LOW': '<S197>:335'
        MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_kgdx =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_mqdg;
        MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_g1eo =
          MX_Gtwy_C_IN_EXTREMELY_LOW_djc2;

        // Entry Internal 'EXTREMELY_LOW': '<S197>:330'
        // Transition: '<S197>:331'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW_g4sj =
          MX_Gtwy_Contro_IN_DEBOUNCE_m5nh;

        // Entry 'DEBOUNCE': '<S197>:333'
        MX_Gtwy_Control_DWork.debounceCount_oeeq = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_kgdx ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_m5nh) {
        // During 'DEBOUNCE': '<S197>:339'
        if ((MX_Gtwy_Control_DWork.debounceCount_oeeq >=
             CONSTANT_DATA->EOT_DEBOUNCE_LOW) || (state_EOT == LOW)) {
          // Transition: '<S197>:337'
          MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_kgdx =
            MX_Gtwy_Control_IN_LOW_igxp;

          // Entry 'LOW': '<S197>:338'
          state_EOT = LOW;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_oeeq = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_oeeq + 1);
        }
      } else {
        state_EOT = LOW;

        // During 'LOW': '<S197>:338'
      }
      break;

     case MX_Gtwy_Control_IN_NORMAL_jhgw:
      // During 'NORMAL': '<S197>:340'
      if (MX_Gtwy_Control_B.RateTransition72 <= CONSTANT_DATA->EOT_LOW) {
        // Transition: '<S197>:349'
        // Exit Internal 'NORMAL': '<S197>:340'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ggmx =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_mqdg;
        MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_g1eo =
          MX_Gtwy_Control_IN_LOW_igxp;

        // Entry Internal 'LOW': '<S197>:335'
        // Transition: '<S197>:336'
        MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_kgdx =
          MX_Gtwy_Contro_IN_DEBOUNCE_m5nh;

        // Entry 'DEBOUNCE': '<S197>:339'
        MX_Gtwy_Control_DWork.debounceCount_oeeq = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ggmx ==
                 MX_Gtwy_IN_DEBOUNCE_NORMAL_ov12) {
        // During 'DEBOUNCE_NORMAL': '<S197>:343'
        if ((MX_Gtwy_Control_DWork.debounceCount_oeeq >=
             CONSTANT_DATA->EOT_DEBOUNCE_NORMAL) || (state_EOT == NORMAL)) {
          // Transition: '<S197>:342'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ggmx =
            MX_Gtwy_Control_IN_NORMAL_jhgwg;

          // Entry 'NORMAL': '<S197>:344'
          state_EOT = NORMAL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_oeeq = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_oeeq + 1);
        }
      } else {
        state_EOT = NORMAL;

        // During 'NORMAL': '<S197>:344'
      }
      break;

     default:
      state_EOT = INACTIVE;

      // During 'WAIT_FOR_ECT1': '<S197>:355'
      if ((MX_Gtwy_Control_B.RateTransition74 == NORMAL) &&
          (MX_Gtwy_Control_B.RateTransition72 <= CONSTANT_DATA->EOT_LOW)) {
        // Transition: '<S197>:358'
        MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_g1eo =
          MX_Gtwy_Control_IN_LOW_igxp;

        // Entry Internal 'LOW': '<S197>:335'
        // Transition: '<S197>:336'
        MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_kgdx =
          MX_Gtwy_Contro_IN_DEBOUNCE_m5nh;

        // Entry 'DEBOUNCE': '<S197>:339'
        MX_Gtwy_Control_DWork.debounceCount_oeeq = 0U;
      } else {
        if ((MX_Gtwy_Control_B.RateTransition74 == NORMAL) &&
            (MX_Gtwy_Control_B.RateTransition72 > CONSTANT_DATA->EOT_LOW)) {
          // Transition: '<S197>:359'
          MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_g1eo =
            MX_Gtwy_Control_IN_NORMAL_jhgw;

          // Entry Internal 'NORMAL': '<S197>:340'
          // Transition: '<S197>:341'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ggmx =
            MX_Gtwy_IN_DEBOUNCE_NORMAL_ov12;

          // Entry 'DEBOUNCE_NORMAL': '<S197>:343'
          MX_Gtwy_Control_DWork.debounceCount_oeeq = 0U;
        }
      }
      break;
    }
  } else {
    state_EOT = INACTIVE;

    // During 'NON_FUNCTIONAL': '<S197>:275'
    if ((CONSTANT_DATA->EOT_FUNCTION != NON_FUNCTIONAL) &&
        (MX_Gtwy_Control_B.RateTransition73 == SYS_NORMAL)) {
      // Transition: '<S197>:185'
      MX_Gtwy_Control_DWork.bitsForTID1.is_c32_MX_Gtwy_Control =
        MX_Gtwy_Cont_IN_FUNCTIONAL_bcs0;

      // Entry Internal 'FUNCTIONAL': '<S197>:109'
      // Transition: '<S197>:356'
      MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_g1eo =
        MX_Gtwy_Contro_IN_WAIT_FOR_ECT1;

      // Entry 'WAIT_FOR_ECT1': '<S197>:355'
    }
  }

  // End of Chart: '<S81>/ErrorDetection'
}

// System initialize for atomic system: '<S3>/Engine_Start'
void Engine_Start_Init(void)
{
  // SystemInitialize for Chart: '<S82>/Engine_Start'
  MX_Gtwy_Control_DWork.bitsForTID0.is_active_c14_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_c14_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ocsj;
  MX_Gtwy_Control_DWork.debounceDelay = 0U;
  state_EngineStart = 0U;
}

// Output and update for atomic system: '<S3>/Engine_Start'
void Engine_Start(void)
{
  // Chart: '<S82>/Engine_Start' incorporates:
  //   Inport: '<Root>/can_ACD_EngineStart'
  //   Inport: '<Root>/can_ST_EngineStart'
  //   Inport: '<Root>/din_EngineStart'
  //   Inport: '<Root>/din_RemoteKey'
  //   Inport: '<Root>/state_ACD_CAN'
  //   Inport: '<Root>/state_ST_CAN'

  // Gateway: MX_Gtwy_Control/Inputs/Engine_Start/Engine_Start
  // During: MX_Gtwy_Control/Inputs/Engine_Start/Engine_Start
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID0.is_active_c14_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/Engine_Start/Engine_Start
    MX_Gtwy_Control_DWork.bitsForTID0.is_active_c14_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/Engine_Start/Engine_Start
    // Transition: '<S198>:7'
    MX_Gtwy_Control_DWork.bitsForTID0.is_c14_MX_Gtwy_Control =
      MX_Gtwy_Control_IN_OFF_nkkh;

    // Entry 'OFF': '<S198>:1'
    state_EngineStart = INACTIVE;
  } else {
    switch (MX_Gtwy_Control_DWork.bitsForTID0.is_c14_MX_Gtwy_Control) {
     case MX_Gtwy_Control_IN_OFF_nkkh:
      state_EngineStart = INACTIVE;

      // During 'OFF': '<S198>:1'
      if ((din_EngineStart == ACTIVE) && (state_MachineLock != ACTIVE) &&
          (din_RemoteKey != ACTIVE) && (MX_Gtwy_Control_B.UnitDelay10_kkg2 !=
           ENGINE_RUNNING)) {
        // Transition: '<S198>:9'
        MX_Gtwy_Control_DWork.bitsForTID0.is_c14_MX_Gtwy_Control =
          MX_Gtwy_Co_IN_START_MACHINE_KEY;

        // Entry 'START_MACHINE_KEY': '<S198>:2'
        state_EngineStart = ACTIVE;
      } else if ((can_ACD_EngineStart == ACTIVE) && (state_ACD_CAN == NORMAL)) {
        // Transition: '<S198>:59'
        MX_Gtwy_Control_DWork.bitsForTID0.is_c14_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_START_ACD;

        // Entry 'START_ACD': '<S198>:57'
        state_EngineStart = ACTIVE;
      } else {
        if ((can_ST_EngineStart == ACTIVE) && (state_ST_CAN == NORMAL)) {
          // Transition: '<S198>:10'
          MX_Gtwy_Control_DWork.bitsForTID0.is_c14_MX_Gtwy_Control =
            MX_Gtwy_C_IN_START_SERVICE_TOOL;

          // Entry 'START_SERVICE_TOOL': '<S198>:50'
          state_EngineStart = ACTIVE;
        }
      }
      break;

     case MX_Gtwy_Control_IN_START_ACD:
      state_EngineStart = ACTIVE;

      // During 'START_ACD': '<S198>:57'
      if ((can_ACD_EngineStart != ACTIVE) || (state_ACD_CAN != NORMAL)) {
        // Transition: '<S198>:58'
        MX_Gtwy_Control_DWork.bitsForTID0.is_c14_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_OFF_nkkh;

        // Entry 'OFF': '<S198>:1'
        state_EngineStart = INACTIVE;
      }
      break;

     case MX_Gtwy__IN_START_MACHINE_DELAY:
      // During 'START_MACHINE_DELAY': '<S198>:63'
      if ((MX_Gtwy_Control_DWork.debounceDelay >=
           CONSTANT_DATA->ENGINE_START_DELAY_OFF_TIME) || ((flt_EngineSpeed <
            CONSTANT_DATA->ENGINE_START_DELAY_RPM_NO_SIGNAL) &&
           (MX_Gtwy_Control_DWork.debounceDelay >=
            CONSTANT_DATA->ENGINE_START_DELAY_DEBOUNCE_RPM_NO_SIGNAL)) ||
          (MX_Gtwy_Control_B.UnitDelay10_kkg2 == ENGINE_RUNNING)) {
        // Transition: '<S198>:64'
        MX_Gtwy_Control_DWork.bitsForTID0.is_c14_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_OFF_nkkh;

        // Entry 'OFF': '<S198>:1'
        state_EngineStart = INACTIVE;
      } else if (din_EngineStart == ACTIVE) {
        // Transition: '<S198>:69'
        MX_Gtwy_Control_DWork.bitsForTID0.is_c14_MX_Gtwy_Control =
          MX_Gtwy_Co_IN_START_MACHINE_KEY;

        // Entry 'START_MACHINE_KEY': '<S198>:2'
        state_EngineStart = ACTIVE;
      } else {
        MX_Gtwy_Control_DWork.debounceDelay = (uint16_T)(int32_T)((int32_T)
          MX_Gtwy_Control_DWork.debounceDelay + 1);
      }
      break;

     case MX_Gtwy_Co_IN_START_MACHINE_KEY:
      state_EngineStart = ACTIVE;

      // During 'START_MACHINE_KEY': '<S198>:2'
      if (din_EngineStart == INACTIVE) {
        // Transition: '<S198>:49'
        MX_Gtwy_Control_DWork.bitsForTID0.is_c14_MX_Gtwy_Control =
          MX_Gtwy__IN_START_MACHINE_DELAY;

        // Entry 'START_MACHINE_DELAY': '<S198>:63'
        MX_Gtwy_Control_DWork.debounceDelay = 0U;
      }
      break;

     default:
      state_EngineStart = ACTIVE;

      // During 'START_SERVICE_TOOL': '<S198>:50'
      if ((can_ST_EngineStart != ACTIVE) || (state_ST_CAN != NORMAL)) {
        // Transition: '<S198>:15'
        MX_Gtwy_Control_DWork.bitsForTID0.is_c14_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_OFF_nkkh;

        // Entry 'OFF': '<S198>:1'
        state_EngineStart = INACTIVE;
      }
      break;
    }
  }

  // End of Chart: '<S82>/Engine_Start'
}

// System initialize for atomic system: '<S3>/FuelLevel'
void MX_Gtwy_Control_FuelLevel_Init(void)
{
  uint8_T rtb_Gain_f3aj;
  uint16_T rtb_fltValue_out;

  // SystemInitialize for Chart: '<S83>/Gain'
  rtb_Gain_f3aj = 0U;

  // SystemInitialize for Atomic SubSystem: '<S83>/Remove_OOR_Levels'
  MX_Gtwy__Remove_OOR_Levels_Init(&rtb_fltValue_out,
    &MX_Gtwy_Control_DWork.Remove_OOR_Levels_bcwf);

  // End of SystemInitialize for SubSystem: '<S83>/Remove_OOR_Levels'

  // SystemInitialize for Atomic SubSystem: '<S83>/LP_Filter_Adj_Gain'
  MX_LP_Filter_Adj_Gain_gfud_Init(&MX_Gtwy_Control_B.Output_jfkl,
    &MX_Gtwy_Control_DWork.LP_Filter_Adj_Gain_hwrc);

  // End of SystemInitialize for SubSystem: '<S83>/LP_Filter_Adj_Gain'

  // SystemInitialize for Atomic SubSystem: '<S83>/LP_Filter_Adj_Gain1'
  MX_Gtwy_LP_Filter_Adj_Gain_Init(&MX_Gtwy_Control_B.Output_p4na,
    &MX_Gtwy_Control_DWork.LP_Filter_Adj_Gain1);

  // End of SystemInitialize for SubSystem: '<S83>/LP_Filter_Adj_Gain1'

  // SystemInitialize for Chart: '<S83>/Fuel_Level'
  MX_Gtwy_Control_DWork.bitsForTID1.is_FuelFillWarning =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
  MX_Gtwy_Control_DWork.bitsForTID1.is_Active_gsxi =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
  MX_Gtwy_Control_DWork.temporalCounter_i1_pepa = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_Monitor = MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dlii =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
  MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_gqsk =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ngxn =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
  MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_dpbe =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
  MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_iuva =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c22_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.debounceCount_g0kv = 0U;
  MX_Gtwy_Control_DWork.beep_Delay = 0U;
  MX_Gtwy_Control_DWork.delay_Limit = 0U;
  MX_Gtwy_Control_DWork.previous_Delay = 0U;
  MX_Gtwy_Control_DWork.start_FuelLevel = 0U;
  state_FuelLevel = 0U;
}

// Output and update for atomic system: '<S3>/FuelLevel'
void MX_Gtwy_Control_FuelLevel(void)
{
  // local block i/o variables
  uint16_T rtb_fltValue;
  uint16_T rtb_DataTypeConversion1;
  uint8_T rtb_Gain_f05z;
  uint16_T rtb_fltValue_out;
  int16_T rtb_ratiometric;
  uint16_T rtb_Saturation;
  int16_T rtb_DataTypeConversion5;
  uint8_T rtb_gauge;

  // Chart: '<S83>/Gain'
  // Gateway: MX_Gtwy_Control/Inputs/FuelLevel/Gain
  // During: MX_Gtwy_Control/Inputs/FuelLevel/Gain
  // Entry Internal: MX_Gtwy_Control/Inputs/FuelLevel/Gain
  // Transition: '<S200>:5'
  if (MX_Gtwy_Control_B.RateTransition5_af5m != INACTIVE) {
    // Transition: '<S200>:1'
    // Transition: '<S200>:2'
    rtb_Gain_f05z = CONSTANT_DATA->FUEL_LEVEL_FILTER_SLOW_VALUE;

    // Transition: '<S200>:3'
  } else {
    // Transition: '<S200>:4'
    rtb_Gain_f05z = CONSTANT_DATA->FUEL_LEVEL_FILTER_FAST_VALUE;
  }

  // End of Chart: '<S83>/Gain'

  // Outputs for Atomic SubSystem: '<S83>/Ratiometric_Converter'
  MX_Gtwy_C_Ratiometric_Converter(MX_Gtwy_Control_B.RateTransition50,
    MX_Gtwy_Control_B.RateTransition52, &rtb_Saturation, ((uint16_T)1000U));

  // End of Outputs for SubSystem: '<S83>/Ratiometric_Converter'

  // Outputs for Atomic SubSystem: '<S83>/Remove_OOR_Levels'
  MX_Gtwy_Contr_Remove_OOR_Levels(rtb_Saturation, &rtb_fltValue_out,
    &MX_Gtwy_Control_DWork.Remove_OOR_Levels_bcwf,
    CONSTANT_DATA->FUEL_LEVEL_OORH, CONSTANT_DATA->FUEL_LEVEL_OORL);

  // End of Outputs for SubSystem: '<S83>/Remove_OOR_Levels'

  // Lookup: '<S83>/Fuel Gauge Table1'
  //
  //  About '<S83>/Fuel Gauge Table1':
  //  Input0  Data Type:  Integer        U16
  //  Output0 Data Type:  Integer        U16
  //  Lookup Method: Nearest
  //
  //  XData parameter uses the same data type and scaling as Input0
  //  YData parameter uses the same data type and scaling as Output0

  {
    uint32_T iLeft;
    BINARYSEARCH_U16_Near_iL( &(iLeft), rtb_fltValue_out, (&(MXGTW_FUELSND[0])),
      255U);
    rtb_fltValue = MXGTW_FUELGAUGE[iLeft];
  }

  // DataTypeConversion: '<S83>/Data Type Conversion2'
  rtb_ratiometric = (int16_T)rtb_fltValue;

  // Outputs for Atomic SubSystem: '<S83>/LP_Filter_Adj_Gain'
  MX_Gtwy_LP_Filter_Adj_Gain_hwrc(rtb_Gain_f05z, rtb_ratiometric,
    &MX_Gtwy_Control_B.Output_jfkl,
    &MX_Gtwy_Control_DWork.LP_Filter_Adj_Gain_hwrc);

  // End of Outputs for SubSystem: '<S83>/LP_Filter_Adj_Gain'

  // DataTypeConversion: '<S83>/Data Type Conversion1'
  rtb_DataTypeConversion1 = (uint16_T)(int32_T)(MX_Gtwy_Control_B.Output_jfkl >>
    16);

  // DataTypeConversion: '<S83>/Data Type Conversion5'
  rtb_DataTypeConversion5 = (int16_T)rtb_Saturation;

  // Outputs for Atomic SubSystem: '<S83>/LP_Filter_Adj_Gain1'

  // Constant: '<S83>/filter_level'
  MX_Gtwy_Cont_LP_Filter_Adj_Gain(((uint8_T)3U), rtb_DataTypeConversion5,
    &MX_Gtwy_Control_B.Output_p4na, &MX_Gtwy_Control_DWork.LP_Filter_Adj_Gain1);

  // End of Outputs for SubSystem: '<S83>/LP_Filter_Adj_Gain1'

  // DataTypeConversion: '<S83>/Data Type Conversion4'
  rm_FuelLevel = (uint16_T)(int32_T)(MX_Gtwy_Control_B.Output_p4na >> 16);

  // Chart: '<S83>/Fuel_Level'
  // Gateway: MX_Gtwy_Control/Inputs/FuelLevel/Fuel_Level
  if (MX_Gtwy_Control_DWork.temporalCounter_i1_pepa < MAX_uint32_T) {
    MX_Gtwy_Control_DWork.temporalCounter_i1_pepa++;
  }

  // During: MX_Gtwy_Control/Inputs/FuelLevel/Fuel_Level
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID1.is_active_c22_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/FuelLevel/Fuel_Level
    MX_Gtwy_Control_DWork.bitsForTID1.is_active_c22_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/FuelLevel/Fuel_Level
    // Entry Internal 'Monitor': '<S199>:79'
    // Transition: '<S199>:15'
    MX_Gtwy_Control_DWork.bitsForTID1.is_Monitor =
      MX_Gtwy__IN_NON_FUNCTIONAL_a53p;

    // Entry 'NON_FUNCTIONAL': '<S199>:1'
    state_FuelLevel = NORMAL;

    // Entry Internal 'FuelFillWarning': '<S199>:53'
    // Transition: '<S199>:54'
    MX_Gtwy_Control_DWork.bitsForTID1.is_FuelFillWarning =
      MX_Gtwy_Contro_IN_Inactive_fimv;
  } else {
    // During 'Monitor': '<S199>:79'
    switch (MX_Gtwy_Control_DWork.bitsForTID1.is_Monitor) {
     case MX_Gtwy__IN_NON_FUNCTIONAL_a53p:
      state_FuelLevel = NORMAL;

      // During 'NON_FUNCTIONAL': '<S199>:1'
      if (CONSTANT_DATA->FUEL_LEVEL_FUNCTION != NON_FUNCTIONAL) {
        // Transition: '<S199>:16'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Monitor =
          MX_Gtwy_Control_IN_NORMAL_h2nv;

        // Entry Internal 'NORMAL': '<S199>:2'
        // Transition: '<S199>:24'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dlii =
          MX_Gtwy_Control_IN_NORMAL_h2nv;

        // Entry Internal 'NORMAL': '<S199>:8'
        // Transition: '<S199>:23'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ngxn =
          MX_Gtwy_Contro_IN_DEBOUNCE_oqst;

        // Entry 'DEBOUNCE': '<S199>:10'
        MX_Gtwy_Control_DWork.debounceCount_g0kv = 0U;
      }
      break;

     case MX_Gtwy_Control_IN_NORMAL_h2nv:
      // During 'NORMAL': '<S199>:2'
      if (rm_FuelLevel >= CONSTANT_DATA->FUEL_LEVEL_OORH) {
        // Transition: '<S199>:25'
        // Exit Internal 'NORMAL': '<S199>:2'
        // Exit Internal 'LOW': '<S199>:9'
        MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_gqsk =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dlii =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;

        // Exit Internal 'NORMAL': '<S199>:8'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ngxn =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
        MX_Gtwy_Control_DWork.bitsForTID1.is_Monitor =
          MX_Gtwy_Control_IN_OORH_kqw1;

        // Entry Internal 'OORH': '<S199>:12'
        // Transition: '<S199>:30'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_dpbe =
          MX_Gtwy_Contro_IN_DEBOUNCE_oqst;

        // Entry 'DEBOUNCE': '<S199>:13'
        MX_Gtwy_Control_DWork.debounceCount_g0kv = 0U;
      } else if (rm_FuelLevel <= CONSTANT_DATA->FUEL_LEVEL_OORL) {
        // Transition: '<S199>:17'
        // Exit Internal 'NORMAL': '<S199>:2'
        // Exit Internal 'LOW': '<S199>:9'
        MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_gqsk =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dlii =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;

        // Exit Internal 'NORMAL': '<S199>:8'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ngxn =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
        MX_Gtwy_Control_DWork.bitsForTID1.is_Monitor =
          MX_Gtwy_Control_IN_OORL_iygl;

        // Entry Internal 'OORL': '<S199>:5'
        // Transition: '<S199>:20'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_iuva =
          MX_Gtwy_Contro_IN_DEBOUNCE_oqst;

        // Entry 'DEBOUNCE': '<S199>:6'
        MX_Gtwy_Control_DWork.debounceCount_g0kv = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dlii ==
                 MX_Gtwy_Control_IN_LOW_g10j) {
        // During 'LOW': '<S199>:9'
        if (rtb_DataTypeConversion1 > CONSTANT_DATA->FUEL_RESET_VALUE) {
          // Transition: '<S199>:28'
          // Exit Internal 'LOW': '<S199>:9'
          MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_gqsk =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dlii =
            MX_Gtwy_Control_IN_NORMAL_h2nv;

          // Entry Internal 'NORMAL': '<S199>:8'
          // Transition: '<S199>:23'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ngxn =
            MX_Gtwy_Contro_IN_DEBOUNCE_oqst;

          // Entry 'DEBOUNCE': '<S199>:10'
          MX_Gtwy_Control_DWork.debounceCount_g0kv = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_gqsk ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_oqst) {
          // During 'DEBOUNCE': '<S199>:7'
          if ((MX_Gtwy_Control_DWork.debounceCount_g0kv >=
               CONSTANT_DATA->FUEL_LEVEL_DEBOUNCE_LOW) || (state_FuelLevel ==
               LOW)) {
            // Transition: '<S199>:21'
            MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_gqsk =
              MX_Gtwy_Control_IN_LOW_g10jk;

            // Entry 'LOW': '<S199>:4'
            state_FuelLevel = LOW;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_g0kv = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_g0kv + 1);
          }
        } else {
          state_FuelLevel = LOW;

          // During 'LOW': '<S199>:4'
        }
      } else {
        // During 'NORMAL': '<S199>:8'
        if (rtb_DataTypeConversion1 <= CONSTANT_DATA->FUEL_LEVEL_LOW) {
          // Transition: '<S199>:29'
          // Exit Internal 'NORMAL': '<S199>:8'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ngxn =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dlii =
            MX_Gtwy_Control_IN_LOW_g10j;

          // Entry Internal 'LOW': '<S199>:9'
          // Transition: '<S199>:22'
          MX_Gtwy_Control_DWork.bitsForTID1.is_LOW_gqsk =
            MX_Gtwy_Contro_IN_DEBOUNCE_oqst;

          // Entry 'DEBOUNCE': '<S199>:7'
          MX_Gtwy_Control_DWork.debounceCount_g0kv = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ngxn ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_oqst) {
          // During 'DEBOUNCE': '<S199>:10'
          if ((MX_Gtwy_Control_DWork.debounceCount_g0kv >=
               CONSTANT_DATA->FUEL_LEVEL_DEBOUNCE_NORMAL) || (state_FuelLevel ==
               NORMAL)) {
            // Transition: '<S199>:27'
            MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ngxn =
              MX_Gtwy_Control_IN_NORMAL_h2nv;

            // Entry 'NORMAL': '<S199>:11'
            state_FuelLevel = NORMAL;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_g0kv = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_g0kv + 1);
          }
        } else {
          state_FuelLevel = NORMAL;

          // During 'NORMAL': '<S199>:11'
        }
      }
      break;

     case MX_Gtwy_Control_IN_OORH_kqw1:
      // During 'OORH': '<S199>:12'
      if (rm_FuelLevel < CONSTANT_DATA->FUEL_LEVEL_OORH) {
        // Transition: '<S199>:26'
        // Exit Internal 'OORH': '<S199>:12'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_dpbe =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
        MX_Gtwy_Control_DWork.bitsForTID1.is_Monitor =
          MX_Gtwy_Control_IN_NORMAL_h2nv;

        // Entry Internal 'NORMAL': '<S199>:2'
        // Transition: '<S199>:24'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dlii =
          MX_Gtwy_Control_IN_NORMAL_h2nv;

        // Entry Internal 'NORMAL': '<S199>:8'
        // Transition: '<S199>:23'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ngxn =
          MX_Gtwy_Contro_IN_DEBOUNCE_oqst;

        // Entry 'DEBOUNCE': '<S199>:10'
        MX_Gtwy_Control_DWork.debounceCount_g0kv = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_dpbe ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_oqst) {
        // During 'DEBOUNCE': '<S199>:13'
        if ((MX_Gtwy_Control_DWork.debounceCount_g0kv >=
             CONSTANT_DATA->FUEL_LEVEL_DEBOUNCE_OORH) || (state_FuelLevel ==
             OORH)) {
          // Transition: '<S199>:31'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_dpbe =
            MX_Gtwy_Control_IN_NORMAL_h2nv;

          // Entry 'NORMAL': '<S199>:14'
          state_FuelLevel = OORH;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_g0kv = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_g0kv + 1);
        }
      } else {
        state_FuelLevel = OORH;

        // During 'NORMAL': '<S199>:14'
      }
      break;

     default:
      // During 'OORL': '<S199>:5'
      if (rm_FuelLevel > CONSTANT_DATA->FUEL_LEVEL_OORL) {
        // Transition: '<S199>:18'
        // Exit Internal 'OORL': '<S199>:5'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_iuva =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
        MX_Gtwy_Control_DWork.bitsForTID1.is_Monitor =
          MX_Gtwy_Control_IN_NORMAL_h2nv;

        // Entry Internal 'NORMAL': '<S199>:2'
        // Transition: '<S199>:24'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dlii =
          MX_Gtwy_Control_IN_NORMAL_h2nv;

        // Entry Internal 'NORMAL': '<S199>:8'
        // Transition: '<S199>:23'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_ngxn =
          MX_Gtwy_Contro_IN_DEBOUNCE_oqst;

        // Entry 'DEBOUNCE': '<S199>:10'
        MX_Gtwy_Control_DWork.debounceCount_g0kv = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_iuva ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_oqst) {
        // During 'DEBOUNCE': '<S199>:6'
        if ((MX_Gtwy_Control_DWork.debounceCount_g0kv >=
             CONSTANT_DATA->FUEL_LEVEL_DEBOUNCE_OORL) || (state_FuelLevel ==
             OORL)) {
          // Transition: '<S199>:19'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_iuva =
            MX_Gtwy_Control_IN_NORMAL_h2nv;

          // Entry 'NORMAL': '<S199>:3'
          state_FuelLevel = OORL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_g0kv = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_g0kv + 1);
        }
      } else {
        state_FuelLevel = OORL;

        // During 'NORMAL': '<S199>:3'
      }
      break;
    }

    // During 'FuelFillWarning': '<S199>:53'
    if (MX_Gtwy_Control_DWork.bitsForTID1.is_FuelFillWarning ==
        MX_Gtwy_Control_IN_Active_ga4q) {
      // During 'Active': '<S199>:58'
      if ((MX_Gtwy_Control_B.RateTransition5_af5m != INACTIVE) ||
          ((MX_Gtwy_Control_B.RateTransition51 != ENGINE_NOT_RUNNING) &&
           (MX_Gtwy_Control_B.RateTransition51 != ENGINE_INITIALIZE)) ||
          (state_FuelLevel == OORL) || (state_FuelLevel == OORH)) {
        // Transition: '<S199>:55'
        // Exit Internal 'Active': '<S199>:58'
        if (MX_Gtwy_Control_DWork.bitsForTID1.is_Active_gsxi ==
            MX_Gtwy_Control_IN_Continuous) {
          // Exit 'Continuous': '<S199>:78'
          state_Buzzer = NO_BEEP;
          MX_Gtwy_Control_DWork.bitsForTID1.is_Active_gsxi =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
        } else {
          MX_Gtwy_Control_DWork.bitsForTID1.is_Active_gsxi =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_k3rk;
        }

        MX_Gtwy_Control_DWork.bitsForTID1.is_FuelFillWarning =
          MX_Gtwy_Contro_IN_Inactive_fimv;
      } else {
        switch (MX_Gtwy_Control_DWork.bitsForTID1.is_Active_gsxi) {
         case MX_Gtwy_Control_IN_Armed:
          // During 'Armed': '<S199>:77'
          if ((int32_T)rtb_DataTypeConversion1 > (int32_T)((int32_T)
               MX_Gtwy_Control_DWork.start_FuelLevel + (int32_T)
               CONSTANT_DATA->FUEL_WARN_DELTA)) {
            // Transition: '<S199>:66'
            MX_Gtwy_Control_DWork.bitsForTID1.is_Active_gsxi =
              MX_Gtwy_Co_IN_Intermittant_Beep;
            MX_Gtwy_Control_DWork.temporalCounter_i1_pepa = 0U;

            // Entry 'Intermittant_Beep': '<S199>:76'
            MX_Gtwy_Control_DWork.beep_Delay = (uint16_T)(int32_T)((int32_T)
              ((int32_T)(255 - (int32_T)rtb_DataTypeConversion1) / 4) >> 1);
          }
          break;

         case MX_Gtwy_Control_IN_Continuous:
          // During 'Continuous': '<S199>:78'
          if (MX_Gtwy_Control_DWork.temporalCounter_i1_pepa >= (uint32_T)
              CONSTANT_DATA->FUEL_WARN_TIMEOUT) {
            // Transition: '<S199>:75'
            // Exit 'Continuous': '<S199>:78'
            state_Buzzer = NO_BEEP;
            MX_Gtwy_Control_DWork.bitsForTID1.is_Active_gsxi =
              MX_Gtwy_Control_IN_Armed;

            // Entry 'Armed': '<S199>:77'
            MX_Gtwy_Control_DWork.start_FuelLevel = rtb_DataTypeConversion1;
            MX_Gtwy_Control_DWork.previous_Delay = 31U;
            MX_Gtwy_Control_DWork.delay_Limit = 0U;
          }
          break;

         default:
          // During 'Intermittant_Beep': '<S199>:76'
          if ((int32_T)MX_Gtwy_Control_DWork.beep_Delay == 0) {
            // Transition: '<S199>:74'
            MX_Gtwy_Control_DWork.bitsForTID1.is_Active_gsxi =
              MX_Gtwy_Control_IN_Continuous;
            MX_Gtwy_Control_DWork.temporalCounter_i1_pepa = 0U;

            // Entry 'Continuous': '<S199>:78'
            state_Buzzer = CONTINUOUS_BEEP;
          } else if (MX_Gtwy_Control_DWork.temporalCounter_i1_pepa >= (uint32_T)
                     (uint8_T)MX_Gtwy_Control_DWork.beep_Delay) {
            // Transition: '<S199>:65'
            // Transition: '<S199>:67'
            state_Buzzer = SINGLE_SHORT_BEEP;
            if ((uint8_T)MX_Gtwy_Control_DWork.beep_Delay ==
                MX_Gtwy_Control_DWork.previous_Delay) {
              // Transition: '<S199>:68'
              // Transition: '<S199>:70'
              MX_Gtwy_Control_DWork.delay_Limit = (uint16_T)(int32_T)((int32_T)
                MX_Gtwy_Control_DWork.delay_Limit + (int32_T)(uint8_T)
                MX_Gtwy_Control_DWork.beep_Delay);

              // Transition: '<S199>:73'
            } else {
              // Transition: '<S199>:69'
              MX_Gtwy_Control_DWork.previous_Delay = (uint16_T)(uint8_T)
                MX_Gtwy_Control_DWork.beep_Delay;
              MX_Gtwy_Control_DWork.delay_Limit = 0U;
            }

            // Transition: '<S199>:72'
            MX_Gtwy_Control_DWork.bitsForTID1.is_Active_gsxi =
              MX_Gtwy_Co_IN_Intermittant_Beep;
            MX_Gtwy_Control_DWork.temporalCounter_i1_pepa = 0U;

            // Entry 'Intermittant_Beep': '<S199>:76'
            MX_Gtwy_Control_DWork.beep_Delay = (uint16_T)(int32_T)((int32_T)
              ((int32_T)(255 - (int32_T)rtb_DataTypeConversion1) / 4) >> 1);
          } else {
            if (MX_Gtwy_Control_DWork.delay_Limit >
                CONSTANT_DATA->FUEL_WARN_TIMEOUT) {
              // Transition: '<S199>:71'
              MX_Gtwy_Control_DWork.bitsForTID1.is_Active_gsxi =
                MX_Gtwy_Control_IN_Armed;

              // Entry 'Armed': '<S199>:77'
              MX_Gtwy_Control_DWork.start_FuelLevel = rtb_DataTypeConversion1;
              MX_Gtwy_Control_DWork.previous_Delay = 31U;
              MX_Gtwy_Control_DWork.delay_Limit = 0U;
            }
          }
          break;
        }
      }
    } else {
      // During 'Inactive': '<S199>:57'
      if ((CONSTANT_DATA->FUEL_WARN_FUNCTION != NON_FUNCTIONAL) &&
          (MX_Gtwy_Control_B.RateTransition5_af5m == INACTIVE) &&
          ((MX_Gtwy_Control_B.RateTransition51 == ENGINE_NOT_RUNNING) ||
           (MX_Gtwy_Control_B.RateTransition51 == ENGINE_INITIALIZE)) &&
          (state_FuelLevel != OORL) && (state_FuelLevel != OORH)) {
        // Transition: '<S199>:56'
        MX_Gtwy_Control_DWork.bitsForTID1.is_FuelFillWarning =
          MX_Gtwy_Control_IN_Active_ga4q;

        // Entry Internal 'Active': '<S199>:58'
        // Transition: '<S199>:64'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Active_gsxi =
          MX_Gtwy_Control_IN_Armed;

        // Entry 'Armed': '<S199>:77'
        MX_Gtwy_Control_DWork.start_FuelLevel = rtb_DataTypeConversion1;
        MX_Gtwy_Control_DWork.previous_Delay = 31U;
        MX_Gtwy_Control_DWork.delay_Limit = 0U;
      }
    }
  }

  // End of Chart: '<S83>/Fuel_Level'

  // Truth Table: '<S83>/Truth_Table'
  MX_Gtwy_Control_Truth_Table(state_FuelLevel, &rtb_gauge);

  // MultiPortSwitch: '<S83>/Multiport Switch' incorporates:
  //   Constant: '<S83>/max'
  //   Constant: '<S83>/min'

  switch ((int32_T)rtb_gauge) {
   case 1:
    gau_FuelLevel = ((uint16_T)0U);
    break;

   case 2:
    gau_FuelLevel = rtb_DataTypeConversion1;
    break;

   default:
    gau_FuelLevel = ((uint16_T)250U);
    break;
  }

  // End of MultiPortSwitch: '<S83>/Multiport Switch'
}

// System initialize for atomic system: '<S3>/Fuel_Temperature'
void MX_Gtwy_C_Fuel_Temperature_Init(void)
{
  // SystemInitialize for Chart: '<S84>/ErrorDetection'
  MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_a0ji =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
  MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pbku =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
  MX_Gtwy_Control_DWork.bitsForTID1.is_HEAT_SOAK =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
  MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_jamq =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_bawo =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
  MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_l4hv =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c17_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_c17_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
  MX_Gtwy_Control_DWork.debounceCount_isuj = 0U;
  state_FuelTemp = 0U;
}

// Output and update for atomic system: '<S3>/Fuel_Temperature'
void MX_Gtwy_Contro_Fuel_Temperature(void)
{
  // Chart: '<S84>/ErrorDetection'
  // Gateway: MX_Gtwy_Control/Inputs/Fuel_Temperature/ErrorDetection
  // During: MX_Gtwy_Control/Inputs/Fuel_Temperature/ErrorDetection
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID1.is_active_c17_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/Fuel_Temperature/ErrorDetection
    MX_Gtwy_Control_DWork.bitsForTID1.is_active_c17_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/Fuel_Temperature/ErrorDetection
    // Transition: '<S209>:276'
    MX_Gtwy_Control_DWork.bitsForTID1.is_c17_MX_Gtwy_Control =
      MX_Gtwy__IN_NON_FUNCTIONAL_fae3;

    // Entry 'NON_FUNCTIONAL': '<S209>:275'
    state_FuelTemp = NORMAL;
  } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_c17_MX_Gtwy_Control ==
             MX_Gtwy_Cont_IN_FUNCTIONAL_m0kn) {
    // During 'FUNCTIONAL': '<S209>:109'
    if (MX_Gtwy_Control_B.RateTransition70 == NO_COMMUNICATION) {
      // Transition: '<S209>:353'
      // Exit Internal 'FUNCTIONAL': '<S209>:109'
      // Exit Internal 'EXTREMELY_HIGH': '<S209>:330'
      MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pbku =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
      MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_a0ji =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;

      // Exit Internal 'HEAT_SOAK': '<S209>:354'
      MX_Gtwy_Control_DWork.bitsForTID1.is_HEAT_SOAK =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;

      // Exit Internal 'HIGH': '<S209>:335'
      MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_jamq =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;

      // Exit Internal 'NORMAL': '<S209>:340'
      MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_bawo =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;

      // Exit Internal 'SHUTDOWN': '<S209>:325'
      MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_l4hv =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
      MX_Gtwy_Control_DWork.bitsForTID1.is_c17_MX_Gtwy_Control =
        MX_Gtwy__IN_NON_FUNCTIONAL_fae3;

      // Entry 'NON_FUNCTIONAL': '<S209>:275'
      state_FuelTemp = NORMAL;
    } else {
      switch (MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_a0ji) {
       case MX_Gtwy__IN_EXTREMELY_HIGH_jyxj:
        // During 'EXTREMELY_HIGH': '<S209>:330'
        if (((int32_T)MX_Gtwy_Control_B.RateTransition64 < (int32_T)((int32_T)
              CONSTANT_DATA->FUEL_TEMP_EXTREMELY_HIGH - (int32_T)
              CONSTANT_DATA->TEMPERATURE_HYSTERESIS)) ||
            (MX_Gtwy_Control_B.RateTransition71 != ENGINE_RUNNING)) {
          // Transition: '<S209>:347'
          // Exit Internal 'EXTREMELY_HIGH': '<S209>:330'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pbku =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
          MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_a0ji =
            MX_Gtwy_Control_IN_HIGH_iyio;

          // Entry Internal 'HIGH': '<S209>:335'
          // Transition: '<S209>:336'
          MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_jamq =
            MX_Gtwy_Contro_IN_DEBOUNCE_g513;

          // Entry 'DEBOUNCE': '<S209>:339'
          MX_Gtwy_Control_DWork.debounceCount_isuj = 0U;
        } else if ((CONSTANT_DATA->SHUTDOWN_FUNCTION != NON_FUNCTIONAL) &&
                   (MX_Gtwy_Control_B.RateTransition64 >=
                    CONSTANT_DATA->FUEL_TEMP_SHUTDOWN)) {
          // Transition: '<S209>:345'
          // Exit Internal 'EXTREMELY_HIGH': '<S209>:330'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pbku =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
          MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_a0ji =
            MX_Gtwy_Contro_IN_SHUTDOWN_iepy;

          // Entry Internal 'SHUTDOWN': '<S209>:325'
          // Transition: '<S209>:326'
          MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_l4hv =
            MX_Gtwy_Contro_IN_DEBOUNCE_g513;

          // Entry 'DEBOUNCE': '<S209>:329'
          MX_Gtwy_Control_DWork.debounceCount_isuj = 0U;
          state_FuelTemp = PRE_SHUTDOWN;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pbku ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_g513) {
          // During 'DEBOUNCE': '<S209>:333'
          if ((MX_Gtwy_Control_DWork.debounceCount_isuj >=
               CONSTANT_DATA->FUEL_TEMP_DEBOUNCE_EXTREMELY_HIGH) ||
              (state_FuelTemp == EXTREMELY_HIGH)) {
            // Transition: '<S209>:332'
            MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pbku =
              MX_Gtwy_IN_EXTREMELY_HIGH_jyxjq;

            // Entry 'EXTREMELY_HIGH': '<S209>:334'
            state_FuelTemp = EXTREMELY_HIGH;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_isuj = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_isuj + 1);
          }
        } else {
          state_FuelTemp = EXTREMELY_HIGH;

          // During 'EXTREMELY_HIGH': '<S209>:334'
        }
        break;

       case MX_Gtwy_Control_IN_HEAT_SOAK:
        // During 'HEAT_SOAK': '<S209>:354'
        if ((MX_Gtwy_Control_DWork.debounceCount_isuj >=
             CONSTANT_DATA->FUEL_TEMP_DEBOUNCE_HEAT_SOAK) ||
            ((MX_Gtwy_Control_B.RateTransition71 != ENGINE_RUNNING) &&
             (MX_Gtwy_Control_B.RateTransition71 != ENGINE_CRANKING))) {
          // Transition: '<S209>:356'
          // Exit Internal 'HEAT_SOAK': '<S209>:354'
          MX_Gtwy_Control_DWork.bitsForTID1.is_HEAT_SOAK =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
          MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_a0ji =
            MX_Gtwy_Control_IN_NORMAL_j4mv;

          // Entry Internal 'NORMAL': '<S209>:340'
          // Transition: '<S209>:341'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_bawo =
            MX_Gtwy_IN_DEBOUNCE_NORMAL_gsyv;

          // Entry 'DEBOUNCE_NORMAL': '<S209>:343'
          MX_Gtwy_Control_DWork.debounceCount_isuj = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_HEAT_SOAK ==
                   MX_Gtwy_Contr_IN_ENGINE_RUNNING) {
          // During 'ENGINE_RUNNING': '<S209>:358'
          MX_Gtwy_Control_DWork.debounceCount_isuj = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_isuj + 1);
        } else {
          // During 'WAIT_FOR_RUNNING': '<S209>:357'
          if (MX_Gtwy_Control_B.RateTransition71 == ENGINE_RUNNING) {
            // Transition: '<S209>:360'
            MX_Gtwy_Control_DWork.bitsForTID1.is_HEAT_SOAK =
              MX_Gtwy_Contr_IN_ENGINE_RUNNING;

            // Entry 'ENGINE_RUNNING': '<S209>:358'
            MX_Gtwy_Control_DWork.debounceCount_isuj = 0U;
          }
        }
        break;

       case MX_Gtwy_Control_IN_HIGH_iyio:
        // During 'HIGH': '<S209>:335'
        if (((int32_T)MX_Gtwy_Control_B.RateTransition64 < (int32_T)((int32_T)
              CONSTANT_DATA->FUEL_TEMP_HIGH - (int32_T)
              CONSTANT_DATA->TEMPERATURE_HYSTERESIS)) ||
            (MX_Gtwy_Control_B.RateTransition71 != ENGINE_RUNNING)) {
          // Transition: '<S209>:350'
          // Exit Internal 'HIGH': '<S209>:335'
          MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_jamq =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
          MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_a0ji =
            MX_Gtwy_Control_IN_NORMAL_j4mv;

          // Entry Internal 'NORMAL': '<S209>:340'
          // Transition: '<S209>:341'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_bawo =
            MX_Gtwy_IN_DEBOUNCE_NORMAL_gsyv;

          // Entry 'DEBOUNCE_NORMAL': '<S209>:343'
          MX_Gtwy_Control_DWork.debounceCount_isuj = 0U;
        } else if ((MX_Gtwy_Control_B.RateTransition64 >=
                    CONSTANT_DATA->FUEL_TEMP_EXTREMELY_HIGH) && (state_FuelTemp ==
                    HIGH)) {
          // Transition: '<S209>:348'
          // Exit Internal 'HIGH': '<S209>:335'
          MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_jamq =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
          MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_a0ji =
            MX_Gtwy__IN_EXTREMELY_HIGH_jyxj;

          // Entry Internal 'EXTREMELY_HIGH': '<S209>:330'
          // Transition: '<S209>:331'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pbku =
            MX_Gtwy_Contro_IN_DEBOUNCE_g513;

          // Entry 'DEBOUNCE': '<S209>:333'
          MX_Gtwy_Control_DWork.debounceCount_isuj = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_jamq ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_g513) {
          // During 'DEBOUNCE': '<S209>:339'
          if ((MX_Gtwy_Control_DWork.debounceCount_isuj >=
               CONSTANT_DATA->FUEL_TEMP_DEBOUNCE_HIGH) || (state_FuelTemp ==
               HIGH)) {
            // Transition: '<S209>:337'
            MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_jamq =
              MX_Gtwy_Control_IN_HIGH_iyior;

            // Entry 'HIGH': '<S209>:338'
            state_FuelTemp = HIGH;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_isuj = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_isuj + 1);
          }
        } else {
          state_FuelTemp = HIGH;

          // During 'HIGH': '<S209>:338'
        }
        break;

       case MX_Gtwy_Control_IN_NORMAL_j4mv:
        // During 'NORMAL': '<S209>:340'
        if ((MX_Gtwy_Control_B.RateTransition64 >= CONSTANT_DATA->FUEL_TEMP_HIGH)
            && (MX_Gtwy_Control_B.RateTransition71 == ENGINE_RUNNING)) {
          // Transition: '<S209>:349'
          // Exit Internal 'NORMAL': '<S209>:340'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_bawo =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
          MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_a0ji =
            MX_Gtwy_Control_IN_HIGH_iyio;

          // Entry Internal 'HIGH': '<S209>:335'
          // Transition: '<S209>:336'
          MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_jamq =
            MX_Gtwy_Contro_IN_DEBOUNCE_g513;

          // Entry 'DEBOUNCE': '<S209>:339'
          MX_Gtwy_Control_DWork.debounceCount_isuj = 0U;
        } else if (MX_Gtwy_Control_B.RateTransition71 == ENGINE_CRANKING) {
          // Transition: '<S209>:355'
          // Exit Internal 'NORMAL': '<S209>:340'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_bawo =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
          MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_a0ji =
            MX_Gtwy_Control_IN_HEAT_SOAK;

          // Entry Internal 'HEAT_SOAK': '<S209>:354'
          // Transition: '<S209>:359'
          MX_Gtwy_Control_DWork.bitsForTID1.is_HEAT_SOAK =
            MX_Gtwy_Con_IN_WAIT_FOR_RUNNING;

          // Entry 'WAIT_FOR_RUNNING': '<S209>:357'
          MX_Gtwy_Control_DWork.debounceCount_isuj = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_bawo ==
                   MX_Gtwy_IN_DEBOUNCE_NORMAL_gsyv) {
          // During 'DEBOUNCE_NORMAL': '<S209>:343'
          if ((MX_Gtwy_Control_DWork.debounceCount_isuj >=
               CONSTANT_DATA->FUEL_TEMP_DEBOUNCE_NORMAL) || (state_FuelTemp ==
               NORMAL)) {
            // Transition: '<S209>:342'
            MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_bawo =
              MX_Gtwy_Control_IN_NORMAL_j4mvj;

            // Entry 'NORMAL': '<S209>:344'
            state_FuelTemp = NORMAL;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_isuj = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_isuj + 1);
          }
        } else {
          state_FuelTemp = NORMAL;

          // During 'NORMAL': '<S209>:344'
        }
        break;

       default:
        // During 'SHUTDOWN': '<S209>:325'
        if ((state_FuelTemp != SHUTDOWN) && (((int32_T)
              MX_Gtwy_Control_B.RateTransition64 < (int32_T)((int32_T)
               CONSTANT_DATA->FUEL_TEMP_SHUTDOWN - (int32_T)
               CONSTANT_DATA->TEMPERATURE_HYSTERESIS)) ||
             (MX_Gtwy_Control_B.RateTransition71 != ENGINE_RUNNING))) {
          // Transition: '<S209>:346'
          // Exit Internal 'SHUTDOWN': '<S209>:325'
          MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_l4hv =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_adox;
          MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_a0ji =
            MX_Gtwy__IN_EXTREMELY_HIGH_jyxj;

          // Entry Internal 'EXTREMELY_HIGH': '<S209>:330'
          // Transition: '<S209>:331'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_pbku =
            MX_Gtwy_Contro_IN_DEBOUNCE_g513;

          // Entry 'DEBOUNCE': '<S209>:333'
          MX_Gtwy_Control_DWork.debounceCount_isuj = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_l4hv ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_g513) {
          state_FuelTemp = PRE_SHUTDOWN;

          // During 'DEBOUNCE': '<S209>:329'
          if (MX_Gtwy_Control_DWork.debounceCount_isuj >=
              CONSTANT_DATA->FUEL_TEMP_DEBOUNCE_SHUTDOWN) {
            // Transition: '<S209>:327'
            MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_l4hv =
              MX_Gtwy_Contr_IN_SHUTDOWN_iepyd;

            // Entry 'SHUTDOWN': '<S209>:328'
            state_FuelTemp = SHUTDOWN;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_isuj = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_isuj + 1);
          }
        } else {
          state_FuelTemp = SHUTDOWN;

          // During 'SHUTDOWN': '<S209>:328'
        }
        break;
      }
    }
  } else {
    state_FuelTemp = NORMAL;

    // During 'NON_FUNCTIONAL': '<S209>:275'
    if ((CONSTANT_DATA->FUEL_TEMP_FUNCTION != NON_FUNCTIONAL) &&
        (MX_Gtwy_Control_B.RateTransition69 == SYS_NORMAL) &&
        (MX_Gtwy_Control_B.RateTransition70 != NO_COMMUNICATION)) {
      // Transition: '<S209>:185'
      MX_Gtwy_Control_DWork.bitsForTID1.is_c17_MX_Gtwy_Control =
        MX_Gtwy_Cont_IN_FUNCTIONAL_m0kn;

      // Entry Internal 'FUNCTIONAL': '<S209>:109'
      // Transition: '<S209>:351'
      MX_Gtwy_Control_DWork.bitsForTID1.is_FUNCTIONAL_a0ji =
        MX_Gtwy_Control_IN_NORMAL_j4mv;

      // Entry Internal 'NORMAL': '<S209>:340'
      // Transition: '<S209>:341'
      MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_bawo =
        MX_Gtwy_IN_DEBOUNCE_NORMAL_gsyv;

      // Entry 'DEBOUNCE_NORMAL': '<S209>:343'
      MX_Gtwy_Control_DWork.debounceCount_isuj = 0U;
    }
  }

  // End of Chart: '<S84>/ErrorDetection'
}

// System initialize for atomic system: '<S3>/HCFilter1'
void MX_Gtwy_Control_HCFilter1_Init(void)
{
  // SystemInitialize for Chart: '<S85>/Hyd1_Filter_State'
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_NO_CRANK =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_bjls;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NOT_CONNECTED =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_bjls;
  MX_Gtwy_Control_DWork.bitsForTID1.is_PLUGGED = MX_Gtwy_IN_NO_ACTIVE_CHILD_bjls;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c16_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_c16_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_bjls;
  MX_Gtwy_Control_DWork.debounceCount_aram = 0U;
  MX_Gtwy_Control_DWork.FilterDelay = 0U;
  state_HCFilter1 = 0U;
}

// Output and update for atomic system: '<S3>/HCFilter1'
void MX_Gtwy_Control_HCFilter1(void)
{
  // Chart: '<S85>/Hyd1_Filter_State'
  // Gateway: MX_Gtwy_Control/Inputs/HCFilter1/Hyd1_Filter_State
  // During: MX_Gtwy_Control/Inputs/HCFilter1/Hyd1_Filter_State
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID1.is_active_c16_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/HCFilter1/Hyd1_Filter_State
    MX_Gtwy_Control_DWork.bitsForTID1.is_active_c16_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/HCFilter1/Hyd1_Filter_State
    // Transition: '<S210>:24'
    MX_Gtwy_Control_DWork.bitsForTID1.is_c16_MX_Gtwy_Control =
      MX_Gtwy__IN_NON_FUNCTIONAL_fezh;

    // Entry 'NON_FUNCTIONAL': '<S210>:6'
    state_HCFilter1 = NORMAL;
  } else {
    switch (MX_Gtwy_Control_DWork.bitsForTID1.is_c16_MX_Gtwy_Control) {
     case MX_Gtwy_Contro_IN_DEBOUNCE_COLD:
      // During 'DEBOUNCE_COLD': '<S210>:3'
      if (MX_Gtwy_Control_DWork.debounceCount_aram >=
          CONSTANT_DATA->HYD_FILTER_DELAY) {
        // Transition: '<S210>:20'
        // Exit 'DEBOUNCE_COLD': '<S210>:3'
        MX_Gtwy_Control_DWork.FilterDelay = ACTIVE;
        MX_Gtwy_Control_DWork.bitsForTID1.is_c16_MX_Gtwy_Control =
          MX_Gtwy_C_IN_NORMAL_AFTER_CRANK;

        // Entry 'NORMAL_AFTER_CRANK': '<S210>:7'
        state_HCFilter1 = NORMAL;
      } else {
        MX_Gtwy_Control_DWork.debounceCount_aram = (uint16_T)(int32_T)((int32_T)
          MX_Gtwy_Control_DWork.debounceCount_aram + 1);
      }
      break;

     case MX_Gtwy__IN_NON_FUNCTIONAL_fezh:
      state_HCFilter1 = NORMAL;

      // During 'NON_FUNCTIONAL': '<S210>:6'
      if (CONSTANT_DATA->HYD1_FILTER_FUNCTION != NON_FUNCTIONAL) {
        // Transition: '<S210>:25'
        MX_Gtwy_Control_DWork.bitsForTID1.is_c16_MX_Gtwy_Control =
          MX_Gtwy_Cont_IN_NORMAL_NO_CRANK;

        // Entry Internal 'NORMAL_NO_CRANK': '<S210>:12'
        // Transition: '<S210>:30'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_NO_CRANK =
          MX_Gtwy_Control_IN_Debounce;

        // Entry 'Debounce': '<S210>:14'
        MX_Gtwy_Control_DWork.debounceCount_aram = 0U;
      }
      break;

     case MX_Gtwy_C_IN_NORMAL_AFTER_CRANK:
      state_HCFilter1 = NORMAL;

      // During 'NORMAL_AFTER_CRANK': '<S210>:7'
      if ((CONSTANT_DATA->HOT_FUNCTION != SENDER) &&
          (MX_Gtwy_Control_B.RateTransition22 == ENGINE_RUNNING) &&
          (MX_Gtwy_Control_DWork.FilterDelay == INACTIVE)) {
        // Transition: '<S210>:19'
        MX_Gtwy_Control_DWork.bitsForTID1.is_c16_MX_Gtwy_Control =
          MX_Gtwy_Contro_IN_DEBOUNCE_COLD;

        // Entry 'DEBOUNCE_COLD': '<S210>:3'
        MX_Gtwy_Control_DWork.debounceCount_aram = 0U;
      } else {
        if ((MX_Gtwy_Control_B.RateTransition46 == ACTIVE) &&
            (((CONSTANT_DATA->HOT_FUNCTION == SENDER) && (state_HOT != COLD)) ||
             ((CONSTANT_DATA->HOT_FUNCTION != SENDER) &&
              (MX_Gtwy_Control_DWork.FilterDelay == ACTIVE))) &&
            (MX_Gtwy_Control_B.RateTransition22 == ENGINE_RUNNING)) {
          // Transition: '<S210>:18'
          MX_Gtwy_Control_DWork.bitsForTID1.is_c16_MX_Gtwy_Control =
            MX_Gtwy_Control_IN_PLUGGED_k22h;

          // Entry Internal 'PLUGGED': '<S210>:5'
          // Transition: '<S210>:16'
          MX_Gtwy_Control_DWork.bitsForTID1.is_PLUGGED =
            MX_Gtwy_Contro_IN_DEBOUNCE_gmgf;

          // Entry 'DEBOUNCE': '<S210>:4'
          MX_Gtwy_Control_DWork.debounceCount_aram = 0U;
        }
      }
      break;

     case MX_Gtwy_Cont_IN_NORMAL_NO_CRANK:
      // During 'NORMAL_NO_CRANK': '<S210>:12'
      if ((MX_Gtwy_Control_B.RateTransition22 == ENGINE_CRANKING) ||
          (MX_Gtwy_Control_B.RateTransition22 == ENGINE_RUNNING)) {
        // Transition: '<S210>:32'
        // Exit Internal 'NORMAL_NO_CRANK': '<S210>:12'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_NO_CRANK =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_bjls;
        MX_Gtwy_Control_DWork.bitsForTID1.is_c16_MX_Gtwy_Control =
          MX_Gtwy_C_IN_NORMAL_AFTER_CRANK;

        // Entry 'NORMAL_AFTER_CRANK': '<S210>:7'
        state_HCFilter1 = NORMAL;
      } else if ((MX_Gtwy_Control_B.RateTransition46 == ACTIVE) &&
                 (MX_Gtwy_Control_B.RateTransition22 == ENGINE_NOT_RUNNING)) {
        // Transition: '<S210>:28'
        // Exit Internal 'NORMAL_NO_CRANK': '<S210>:12'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_NO_CRANK =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_bjls;
        MX_Gtwy_Control_DWork.bitsForTID1.is_c16_MX_Gtwy_Control =
          MX_Gtwy_C_IN_NOT_CONNECTED_leko;

        // Entry Internal 'NOT_CONNECTED': '<S210>:9'
        // Transition: '<S210>:26'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NOT_CONNECTED =
          MX_Gtwy_Control_IN_Debounce;

        // Entry 'Debounce': '<S210>:11'
        MX_Gtwy_Control_DWork.debounceCount_aram = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_NO_CRANK ==
                 MX_Gtwy_Control_IN_Debounce) {
        // During 'Debounce': '<S210>:14'
        if ((MX_Gtwy_Control_DWork.debounceCount_aram >=
             CONSTANT_DATA->HYD1_FILTER_DEBOUNCE_NORMAL) || (state_HCFilter1 ==
             NORMAL)) {
          // Transition: '<S210>:31'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_NO_CRANK =
            MX_Gtwy_Control_IN_NORMAL_hidj;

          // Entry 'NORMAL': '<S210>:13'
          state_HCFilter1 = NORMAL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_aram = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_aram + 1);
        }
      } else {
        state_HCFilter1 = NORMAL;

        // During 'NORMAL': '<S210>:13'
      }
      break;

     case MX_Gtwy_C_IN_NOT_CONNECTED_leko:
      // During 'NOT_CONNECTED': '<S210>:9'
      if (MX_Gtwy_Control_B.RateTransition46 != ACTIVE) {
        // Transition: '<S210>:29'
        // Exit Internal 'NOT_CONNECTED': '<S210>:9'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NOT_CONNECTED =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_bjls;
        MX_Gtwy_Control_DWork.bitsForTID1.is_c16_MX_Gtwy_Control =
          MX_Gtwy_Cont_IN_NORMAL_NO_CRANK;

        // Entry Internal 'NORMAL_NO_CRANK': '<S210>:12'
        // Transition: '<S210>:30'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_NO_CRANK =
          MX_Gtwy_Control_IN_Debounce;

        // Entry 'Debounce': '<S210>:14'
        MX_Gtwy_Control_DWork.debounceCount_aram = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NOT_CONNECTED ==
                 MX_Gtwy_Control_IN_Debounce) {
        // During 'Debounce': '<S210>:11'
        if ((MX_Gtwy_Control_DWork.debounceCount_aram >=
             CONSTANT_DATA->HYD1_FILTER_DEBOUNCE_NOT_CONNECTED) ||
            (state_HCFilter1 == NOT_CONNECTED)) {
          // Transition: '<S210>:27'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NOT_CONNECTED =
            MX_Gtwy__IN_NOT_CONNECTED_lekoz;

          // Entry 'NOT_CONNECTED': '<S210>:10'
          state_HCFilter1 = NOT_CONNECTED;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_aram = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_aram + 1);
        }
      } else {
        state_HCFilter1 = NOT_CONNECTED;

        // During 'NOT_CONNECTED': '<S210>:10'
      }
      break;

     default:
      // During 'PLUGGED': '<S210>:5'
      if (((MX_Gtwy_Control_B.RateTransition46 == INACTIVE) || (state_HOT ==
            COLD)) && (state_HCFilter1 == NORMAL)) {
        // Transition: '<S210>:21'
        // Exit Internal 'PLUGGED': '<S210>:5'
        MX_Gtwy_Control_DWork.bitsForTID1.is_PLUGGED =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_bjls;
        MX_Gtwy_Control_DWork.bitsForTID1.is_c16_MX_Gtwy_Control =
          MX_Gtwy_C_IN_NORMAL_AFTER_CRANK;

        // Entry 'NORMAL_AFTER_CRANK': '<S210>:7'
        state_HCFilter1 = NORMAL;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_PLUGGED ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_gmgf) {
        // During 'DEBOUNCE': '<S210>:4'
        if (MX_Gtwy_Control_DWork.debounceCount_aram >=
            CONSTANT_DATA->HYD1_FILTER_DEBOUNCE_PLUGGED) {
          // Transition: '<S210>:22'
          MX_Gtwy_Control_DWork.bitsForTID1.is_PLUGGED =
            MX_Gtwy_Contro_IN_PLUGGED_k22hw;

          // Entry 'PLUGGED': '<S210>:2'
          state_HCFilter1 = PLUGGED;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_aram = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_aram + 1);
        }
      } else {
        state_HCFilter1 = PLUGGED;

        // During 'PLUGGED': '<S210>:2'
      }
      break;
    }
  }

  // End of Chart: '<S85>/Hyd1_Filter_State'
}

// Function for Chart: '<S213>/ErrorDetection'
static void MX_Gtwy_Control_NORMAL_jbs1(void)
{
  // During 'NORMAL': '<S216>:7'
  if ((state_SensorSupply1 != NORMAL) ||
      (MX_Gtwy_Control_B.RateTransition13_f1pl != SYS_NORMAL)) {
    // Transition: '<S216>:54'
    // Exit Internal 'NORMAL': '<S216>:7'
    // Exit Internal 'COLD': '<S216>:20'
    MX_Gtwy_Control_DWork.bitsForTID1.is_COLD_i0x1 =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
    MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_nc55 =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;

    // Exit Internal 'EXTREMELY_HIGH': '<S216>:11'
    MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_nnbo =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;

    // Exit Internal 'HIGH': '<S216>:14'
    MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_pj0f =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;

    // Exit Internal 'NORMAL': '<S216>:17'
    MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_lpll =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;

    // Exit Internal 'SHUTDOWN': '<S216>:8'
    MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_molh =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
    MX_Gtwy_Control_DWork.bitsForTID1.is_ERROR_STATE =
      MX_Gtwy__IN_NON_FUNCTIONAL_np20;

    // Entry 'NON_FUNCTIONAL': '<S216>:3'
    MX_Gtwy_Control_B.state_HOT_a3ul = NORMAL;
  } else if ((MX_Gtwy_Control_B.state_HOT_a3ul != SHUTDOWN) &&
             (MX_Gtwy_Control_B.rm_HOT_bu14 >= CONSTANT_DATA->HOT_OORH)) {
    // Transition: '<S216>:56'
    // Exit Internal 'NORMAL': '<S216>:7'
    // Exit Internal 'COLD': '<S216>:20'
    MX_Gtwy_Control_DWork.bitsForTID1.is_COLD_i0x1 =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
    MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_nc55 =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;

    // Exit Internal 'EXTREMELY_HIGH': '<S216>:11'
    MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_nnbo =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;

    // Exit Internal 'HIGH': '<S216>:14'
    MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_pj0f =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;

    // Exit Internal 'NORMAL': '<S216>:17'
    MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_lpll =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;

    // Exit Internal 'SHUTDOWN': '<S216>:8'
    MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_molh =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
    MX_Gtwy_Control_DWork.bitsForTID1.is_ERROR_STATE =
      MX_Gtwy_Control_IN_OORH_amrx;

    // Entry Internal 'OORH': '<S216>:4'
    // Transition: '<S216>:28'
    MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_mn5o =
      MX_Gtwy_Contro_IN_DEBOUNCE_pfeg;

    // Entry 'DEBOUNCE': '<S216>:5'
    MX_Gtwy_Control_DWork.debounceCount_arj5 = 0U;
  } else if ((MX_Gtwy_Control_B.state_HOT_a3ul != SHUTDOWN) &&
             (MX_Gtwy_Control_B.rm_HOT_bu14 <= CONSTANT_DATA->HOT_OORL)) {
    // Transition: '<S216>:57'
    // Exit Internal 'NORMAL': '<S216>:7'
    // Exit Internal 'COLD': '<S216>:20'
    MX_Gtwy_Control_DWork.bitsForTID1.is_COLD_i0x1 =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
    MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_nc55 =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;

    // Exit Internal 'EXTREMELY_HIGH': '<S216>:11'
    MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_nnbo =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;

    // Exit Internal 'HIGH': '<S216>:14'
    MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_pj0f =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;

    // Exit Internal 'NORMAL': '<S216>:17'
    MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_lpll =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;

    // Exit Internal 'SHUTDOWN': '<S216>:8'
    MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_molh =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
    MX_Gtwy_Control_DWork.bitsForTID1.is_ERROR_STATE =
      MX_Gtwy_Control_IN_OORL_b5jx;

    // Entry Internal 'OORL': '<S216>:23'
    // Transition: '<S216>:49'
    MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_daaj =
      MX_Gtwy_Contro_IN_DEBOUNCE_pfeg;

    // Entry 'DEBOUNCE': '<S216>:24'
    MX_Gtwy_Control_DWork.debounceCount_arj5 = 0U;
  } else {
    switch (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_nc55) {
     case MX_Gtwy_Control_IN_COLD_haxq:
      // During 'COLD': '<S216>:20'
      if (((int32_T)MX_Gtwy_Control_B.flt_HOT_hny4 > (int32_T)((int32_T)
            CONSTANT_DATA->HOT_COLD + (int32_T)
            CONSTANT_DATA->TEMPERATURE_HYSTERESIS)) ||
          (MX_Gtwy_Control_B.RateTransition41 != ENGINE_RUNNING)) {
        // Transition: '<S216>:38'
        // Exit Internal 'COLD': '<S216>:20'
        MX_Gtwy_Control_DWork.bitsForTID1.is_COLD_i0x1 =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_nc55 =
          MX_Gtwy_Control_IN_NORMAL_mps3q;

        // Entry Internal 'NORMAL': '<S216>:17'
        // Transition: '<S216>:45'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_lpll =
          MX_Gtwy_Contro_IN_DEBOUNCE_pfeg;

        // Entry 'DEBOUNCE': '<S216>:18'
        MX_Gtwy_Control_DWork.debounceCount_arj5 = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_COLD_i0x1 ==
                 MX_Gtwy_Control_IN_COLD_haxq) {
        MX_Gtwy_Control_B.state_HOT_a3ul = COLD;

        // During 'COLD': '<S216>:22'
      } else {
        // During 'DEBOUNCE': '<S216>:21'
        if ((MX_Gtwy_Control_DWork.debounceCount_arj5 >=
             CONSTANT_DATA->HOT_DEBOUNCE_COLD) ||
            (MX_Gtwy_Control_B.state_HOT_a3ul == COLD)) {
          // Transition: '<S216>:48'
          MX_Gtwy_Control_DWork.bitsForTID1.is_COLD_i0x1 =
            MX_Gtwy_Control_IN_COLD_haxq;

          // Entry 'COLD': '<S216>:22'
          MX_Gtwy_Control_B.state_HOT_a3ul = COLD;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_arj5 = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_arj5 + 1);
        }
      }
      break;

     case MX_Gtwy__IN_EXTREMELY_HIGH_btwg:
      // During 'EXTREMELY_HIGH': '<S216>:11'
      if (((int32_T)MX_Gtwy_Control_B.flt_HOT_hny4 < (int32_T)((int32_T)
            CONSTANT_DATA->HOT_EXTREMELY_HIGH - (int32_T)
            CONSTANT_DATA->TEMPERATURE_HYSTERESIS)) ||
          (MX_Gtwy_Control_B.RateTransition41 != ENGINE_RUNNING)) {
        // Transition: '<S216>:33'
        // Exit Internal 'EXTREMELY_HIGH': '<S216>:11'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_nnbo =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_nc55 =
          MX_Gtwy_Control_IN_HIGH_aiq3;

        // Entry Internal 'HIGH': '<S216>:14'
        // Transition: '<S216>:43'
        MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_pj0f =
          MX_Gtwy_Contro_IN_DEBOUNCE_pfeg;

        // Entry 'DEBOUNCE': '<S216>:15'
        MX_Gtwy_Control_DWork.debounceCount_arj5 = 0U;
      } else if ((CONSTANT_DATA->SHUTDOWN_FUNCTION != NON_FUNCTIONAL) &&
                 (MX_Gtwy_Control_B.state_HOT_a3ul == EXTREMELY_HIGH)) {
        // Transition: '<S216>:30'
        // Exit Internal 'EXTREMELY_HIGH': '<S216>:11'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_nnbo =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_nc55 =
          MX_Gtwy_Contro_IN_SHUTDOWN_idks;

        // Entry Internal 'SHUTDOWN': '<S216>:8'
        // Transition: '<S216>:39'
        MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_molh =
          MX_Gtwy_Contro_IN_DEBOUNCE_pfeg;

        // Entry 'DEBOUNCE': '<S216>:9'
        MX_Gtwy_Control_DWork.debounceCount_arj5 = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_nnbo ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_pfeg) {
        // During 'DEBOUNCE': '<S216>:12'
        if ((MX_Gtwy_Control_DWork.debounceCount_arj5 >=
             CONSTANT_DATA->HOT_DEBOUNCE_EXTREMELY_HIGH) ||
            (MX_Gtwy_Control_B.state_HOT_a3ul == EXTREMELY_HIGH)) {
          // Transition: '<S216>:42'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_nnbo =
            MX_Gtwy_Control_IN_NORMAL_mps3;

          // Entry 'NORMAL': '<S216>:13'
          MX_Gtwy_Control_B.state_HOT_a3ul = EXTREMELY_HIGH;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_arj5 = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_arj5 + 1);
        }
      } else {
        MX_Gtwy_Control_B.state_HOT_a3ul = EXTREMELY_HIGH;

        // During 'NORMAL': '<S216>:13'
      }
      break;

     case MX_Gtwy_Control_IN_HIGH_aiq3:
      // During 'HIGH': '<S216>:14'
      if (((int32_T)MX_Gtwy_Control_B.flt_HOT_hny4 < (int32_T)((int32_T)
            CONSTANT_DATA->HOT_HIGH - (int32_T)
            CONSTANT_DATA->TEMPERATURE_HYSTERESIS)) ||
          (MX_Gtwy_Control_B.RateTransition41 != ENGINE_RUNNING)) {
        // Transition: '<S216>:34'
        // Exit Internal 'HIGH': '<S216>:14'
        MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_pj0f =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_nc55 =
          MX_Gtwy_Control_IN_NORMAL_mps3q;

        // Entry Internal 'NORMAL': '<S216>:17'
        // Transition: '<S216>:45'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_lpll =
          MX_Gtwy_Contro_IN_DEBOUNCE_pfeg;

        // Entry 'DEBOUNCE': '<S216>:18'
        MX_Gtwy_Control_DWork.debounceCount_arj5 = 0U;
      } else if (MX_Gtwy_Control_B.flt_HOT_hny4 >=
                 CONSTANT_DATA->HOT_EXTREMELY_HIGH) {
        // Transition: '<S216>:32'
        // Exit Internal 'HIGH': '<S216>:14'
        MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_pj0f =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_nc55 =
          MX_Gtwy__IN_EXTREMELY_HIGH_btwg;

        // Entry Internal 'EXTREMELY_HIGH': '<S216>:11'
        // Transition: '<S216>:41'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_nnbo =
          MX_Gtwy_Contro_IN_DEBOUNCE_pfeg;

        // Entry 'DEBOUNCE': '<S216>:12'
        MX_Gtwy_Control_DWork.debounceCount_arj5 = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_pj0f ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_pfeg) {
        // During 'DEBOUNCE': '<S216>:15'
        if ((MX_Gtwy_Control_DWork.debounceCount_arj5 >=
             CONSTANT_DATA->HOT_DEBOUNCE_HIGH) ||
            (MX_Gtwy_Control_B.state_HOT_a3ul == HIGH)) {
          // Transition: '<S216>:44'
          MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_pj0f =
            MX_Gtwy_Control_IN_HIGH_aiq3b;

          // Entry 'HIGH': '<S216>:16'
          MX_Gtwy_Control_B.state_HOT_a3ul = HIGH;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_arj5 = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_arj5 + 1);
        }
      } else {
        MX_Gtwy_Control_B.state_HOT_a3ul = HIGH;

        // During 'HIGH': '<S216>:16'
      }
      break;

     case MX_Gtwy_Control_IN_NORMAL_mps3q:
      // During 'NORMAL': '<S216>:17'
      if ((MX_Gtwy_Control_B.flt_HOT_hny4 <= CONSTANT_DATA->HOT_COLD) &&
          (MX_Gtwy_Control_B.RateTransition41 == ENGINE_RUNNING)) {
        // Transition: '<S216>:37'
        // Exit Internal 'NORMAL': '<S216>:17'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_lpll =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_nc55 =
          MX_Gtwy_Control_IN_COLD_haxq;

        // Entry Internal 'COLD': '<S216>:20'
        // Transition: '<S216>:47'
        MX_Gtwy_Control_DWork.bitsForTID1.is_COLD_i0x1 =
          MX_Gtwy_Contr_IN_DEBOUNCE_pfegi;

        // Entry 'DEBOUNCE': '<S216>:21'
        MX_Gtwy_Control_DWork.debounceCount_arj5 = 0U;
      } else if ((MX_Gtwy_Control_B.flt_HOT_hny4 >= CONSTANT_DATA->HOT_HIGH) &&
                 (MX_Gtwy_Control_B.RateTransition41 == ENGINE_RUNNING)) {
        // Transition: '<S216>:35'
        // Exit Internal 'NORMAL': '<S216>:17'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_lpll =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_nc55 =
          MX_Gtwy_Control_IN_HIGH_aiq3;

        // Entry Internal 'HIGH': '<S216>:14'
        // Transition: '<S216>:43'
        MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_pj0f =
          MX_Gtwy_Contro_IN_DEBOUNCE_pfeg;

        // Entry 'DEBOUNCE': '<S216>:15'
        MX_Gtwy_Control_DWork.debounceCount_arj5 = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_lpll ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_pfeg) {
        // During 'DEBOUNCE': '<S216>:18'
        if ((MX_Gtwy_Control_DWork.debounceCount_arj5 >=
             CONSTANT_DATA->HOT_DEBOUNCE_NORMAL) ||
            (MX_Gtwy_Control_B.state_HOT_a3ul == NORMAL)) {
          // Transition: '<S216>:46'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_lpll =
            MX_Gtwy_Control_IN_NORMAL_mps3;

          // Entry 'NORMAL': '<S216>:19'
          MX_Gtwy_Control_B.state_HOT_a3ul = NORMAL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_arj5 = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_arj5 + 1);
        }
      } else {
        MX_Gtwy_Control_B.state_HOT_a3ul = NORMAL;

        // During 'NORMAL': '<S216>:19'
      }
      break;

     default:
      // During 'SHUTDOWN': '<S216>:8'
      if ((((int32_T)MX_Gtwy_Control_B.flt_HOT_hny4 < (int32_T)((int32_T)
             CONSTANT_DATA->HOT_EXTREMELY_HIGH - (int32_T)
             CONSTANT_DATA->TEMPERATURE_HYSTERESIS)) ||
           (MX_Gtwy_Control_B.RateTransition41 != ENGINE_RUNNING)) &&
          (MX_Gtwy_Control_B.state_HOT_a3ul != SHUTDOWN)) {
        // Transition: '<S216>:31'
        // Exit Internal 'SHUTDOWN': '<S216>:8'
        MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_molh =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_nc55 =
          MX_Gtwy__IN_EXTREMELY_HIGH_btwg;

        // Entry Internal 'EXTREMELY_HIGH': '<S216>:11'
        // Transition: '<S216>:41'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_nnbo =
          MX_Gtwy_Contro_IN_DEBOUNCE_pfeg;

        // Entry 'DEBOUNCE': '<S216>:12'
        MX_Gtwy_Control_DWork.debounceCount_arj5 = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_molh ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_pfeg) {
        // During 'DEBOUNCE': '<S216>:9'
        if (MX_Gtwy_Control_DWork.debounceCount_arj5 >=
            CONSTANT_DATA->HOT_DEBOUNCE_SHUTDOWN) {
          // Transition: '<S216>:40'
          MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_molh =
            MX_Gtwy_Contr_IN_SHUTDOWN_idks3;

          // Entry 'SHUTDOWN': '<S216>:10'
          MX_Gtwy_Control_B.state_HOT_a3ul = SHUTDOWN;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_arj5 = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_arj5 + 1);
        }
      } else {
        MX_Gtwy_Control_B.state_HOT_a3ul = SHUTDOWN;

        // During 'SHUTDOWN': '<S216>:10'
      }
      break;
    }
  }
}

// System initialize for atomic system: '<S3>/HydOilTemp'
void MX_Gtwy_Control_HydOilTemp_Init(void)
{
  uint16_T rtb_fltValue_out;

  // SystemInitialize for Enabled SubSystem: '<S86>/SenderState'

  // SystemInitialize for Enabled SubSystem: '<S213>/HOT_Calculations'

  // SystemInitialize for Atomic SubSystem: '<S217>/LP_Filter'
  MX_Gtwy_Con_LP_Filter_as2q_Init(&MX_Gtwy_Control_DWork.LP_Filter_h43v);

  // End of SystemInitialize for SubSystem: '<S217>/LP_Filter'

  // SystemInitialize for Atomic SubSystem: '<S217>/Remove_OOR_Levels'
  MX_Gtwy__Remove_OOR_Levels_Init(&rtb_fltValue_out,
    &MX_Gtwy_Control_DWork.Remove_OOR_Levels_fdkk);

  // End of SystemInitialize for SubSystem: '<S217>/Remove_OOR_Levels'

  // SystemInitialize for Atomic SubSystem: '<S217>/LP_Filter_Adj_System'
  MX_Gt_LP_Filter_Adj_System_Init(&MX_Gtwy_Control_B.Output_llu2,
    &MX_Gtwy_Control_DWork.LP_Filter_Adj_System);

  // End of SystemInitialize for SubSystem: '<S217>/LP_Filter_Adj_System'

  // End of SystemInitialize for SubSystem: '<S213>/HOT_Calculations'

  // SystemInitialize for Chart: '<S213>/ErrorDetection'
  MX_Gtwy_Control_DWork.bitsForTID1.is_ERROR_STATE =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_nc55 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
  MX_Gtwy_Control_DWork.bitsForTID1.is_COLD_i0x1 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
  MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_nnbo =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
  MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH_pj0f =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_lpll =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
  MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_molh =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
  MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_mn5o =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
  MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_daaj =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
  MX_Gtwy_Control_DWork.bitsForTID1.is_VALUE = MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c28_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.debounceCount_arj5 = 0U;
  MX_Gtwy_Control_B.state_HOT_a3ul = 0U;
  MX_Gtwy_Control_B.flt_HOT_hny4 = 0U;

  // SystemInitialize for Outport: '<S213>/state_HOT'
  MX_Gtwy_Control_B.state_HOT_a3xu4 = ((uint8_T)8U);

  // End of SystemInitialize for SubSystem: '<S86>/SenderState'

  // SystemInitialize for Enabled SubSystem: '<S86>/SwitchState'
  // SystemInitialize for Chart: '<S214>/State_Switch'
  MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_cyoy =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_deye =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
  MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_k40k =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c26_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_c26_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
  MX_Gtwy_Control_DWork.debounceCount_h24j = 0U;
  MX_Gtwy_Control_B.state_HOT_m4dw = 0U;

  // SystemInitialize for Outport: '<S214>/state_HOT'
  MX_Gtwy_Control_B.state_HOT_a3xu = ((uint8_T)8U);

  // End of SystemInitialize for SubSystem: '<S86>/SwitchState'
}

// Output and update for atomic system: '<S3>/HydOilTemp'
void MX_Gtwy_Control_HydOilTemp(void)
{
  uint16_T rtb_fltValue_out;
  uint16_T rtb_DataTypeConversion1;
  int16_T rtb_DataTypeConversion2;
  int16_T rtb_Sum1;
  uint16_T rtb_Saturation;

  // RelationalOperator: '<S212>/Compare' incorporates:
  //   Constant: '<S212>/Constant'
  //   Constant: '<S86>/Constant2'

  outputSelect_HOT = (CONSTANT_DATA->HOT_FUNCTION == SWITCH_INPUT);

  // Outputs for Enabled SubSystem: '<S86>/SenderState' incorporates:
  //   EnablePort: '<S213>/Enable'

  // RelationalOperator: '<S211>/Compare' incorporates:
  //   Constant: '<S211>/Constant'
  //   Constant: '<S215>/Constant'
  //   Constant: '<S217>/Constant2'
  //   Constant: '<S86>/Constant2'
  //   RelationalOperator: '<S215>/Compare'

  if (CONSTANT_DATA->HOT_FUNCTION == SENDER) {
    if (!MX_Gtwy_Control_DWork.SenderState_MODE) {
      MX_Gtwy_Control_DWork.SenderState_MODE = true;
    }

    // Outputs for Enabled SubSystem: '<S213>/HOT_Calculations' incorporates:
    //   EnablePort: '<S217>/Enable'

    if (MX_Gtwy_Control_B.RateTransition13_f1pl == SYS_NORMAL) {
      if (!MX_Gtwy_Control_DWork.HOT_Calculations_MODE) {
        // SystemReset for Atomic SubSystem: '<S217>/LP_Filter'
        MX_Gtwy_Co_LP_Filter_j43b_Reset(&MX_Gtwy_Control_DWork.LP_Filter_h43v);

        // End of SystemReset for SubSystem: '<S217>/LP_Filter'

        // SystemReset for Atomic SubSystem: '<S217>/Remove_OOR_Levels'
        MX_Gtwy_Remove_OOR_Levels_Reset(&rtb_fltValue_out,
          &MX_Gtwy_Control_DWork.Remove_OOR_Levels_fdkk);

        // End of SystemReset for SubSystem: '<S217>/Remove_OOR_Levels'

        // SystemReset for Atomic SubSystem: '<S217>/LP_Filter_Adj_System'
        MX_G_LP_Filter_Adj_System_Reset(&MX_Gtwy_Control_B.Output_llu2,
          &MX_Gtwy_Control_DWork.LP_Filter_Adj_System);

        // End of SystemReset for SubSystem: '<S217>/LP_Filter_Adj_System'
        MX_Gtwy_Control_DWork.HOT_Calculations_MODE = true;
      }

      // Outputs for Atomic SubSystem: '<S217>/Ratiometric_Converter'
      MX_Gtwy_C_Ratiometric_Converter(MX_Gtwy_Control_B.RateTransition48,
        MX_Gtwy_Control_B.RateTransition19, &rtb_Saturation, ((uint16_T)1000U));

      // End of Outputs for SubSystem: '<S217>/Ratiometric_Converter'

      // Outputs for Atomic SubSystem: '<S217>/LP_Filter'
      MX_Gtwy_Control_LP_Filter_dijo(rtb_Saturation, &rtb_Sum1,
        &MX_Gtwy_Control_DWork.LP_Filter_h43v);

      // End of Outputs for SubSystem: '<S217>/LP_Filter'

      // DataTypeConversion: '<S217>/Data Type Conversion1'
      MX_Gtwy_Control_B.rm_HOT_bu14 = (uint16_T)(int32_T)((int32_T)rtb_Sum1 >> 5);

      // Outputs for Atomic SubSystem: '<S217>/Remove_OOR_Levels'
      MX_Gtwy_Contr_Remove_OOR_Levels(rtb_Saturation, &rtb_fltValue_out,
        &MX_Gtwy_Control_DWork.Remove_OOR_Levels_fdkk, CONSTANT_DATA->HOT_OORH,
        CONSTANT_DATA->HOT_OORL);

      // End of Outputs for SubSystem: '<S217>/Remove_OOR_Levels'

      // DataTypeConversion: '<S217>/Data Type Conversion2'
      rtb_DataTypeConversion2 = (int16_T)rtb_fltValue_out;

      // Outputs for Atomic SubSystem: '<S217>/LP_Filter_Adj_System'
      MX_Gtwy_Co_LP_Filter_Adj_System(CONSTANT_DATA->HOT_FILTER_GAIN,
        rtb_DataTypeConversion2, MX_Gtwy_Control_B.RateTransition13_f1pl,
        &MX_Gtwy_Control_B.Output_llu2,
        &MX_Gtwy_Control_DWork.LP_Filter_Adj_System);

      // End of Outputs for SubSystem: '<S217>/LP_Filter_Adj_System'

      // SignalConversion: '<S217>/OutportBufferForrmFlt_HOT' incorporates:
      //   Constant: '<S217>/Constant2'

      MX_Gtwy_Control_B.rmFlt_HOT = MX_Gtwy_Control_B.Output_llu2;
    } else {
      if (MX_Gtwy_Control_DWork.HOT_Calculations_MODE) {
        MX_Gtwy_Control_DWork.HOT_Calculations_MODE = false;
      }
    }

    // End of Outputs for SubSystem: '<S213>/HOT_Calculations'

    // DataTypeConversion: '<S213>/Data Type Conversion1' incorporates:
    //   Constant: '<S215>/Constant'
    //   Constant: '<S217>/Constant2'
    //   RelationalOperator: '<S215>/Compare'

    rtb_DataTypeConversion1 = (uint16_T)(int32_T)(MX_Gtwy_Control_B.rmFlt_HOT >>
      16);

    // Lookup: '<S213>/RealWorldTable'
    //
    //  About '<S213>/RealWorldTable':
    //  Input0  Data Type:  Integer        U16
    //  Output0 Data Type:  Integer        U16
    //  Round Mode: Zero
    //  Saturation Mode: Saturate
    //  Lookup Method: Nearest
    //
    //  XData parameter uses the same data type and scaling as Input0
    //  YData parameter uses the same data type and scaling as Output0

    {
      uint32_T iLeft;
      BINARYSEARCH_U16_Near_iL( &(iLeft), rtb_DataTypeConversion1,
        (&(MXGTW_HOTSND[0])), 340U);
      MX_Gtwy_Control_B.flt_HOT_in = (MX_Gtwy_Control_ConstP.pooled18[iLeft]);
    }

    // Chart: '<S213>/ErrorDetection'
    // Gateway: MX_Gtwy_Control/Inputs/HydOilTemp/SenderState/ErrorDetection
    // During: MX_Gtwy_Control/Inputs/HydOilTemp/SenderState/ErrorDetection
    if ((uint32_T)
        MX_Gtwy_Control_DWork.bitsForTID1.is_active_c28_MX_Gtwy_Control == 0U) {
      // Entry: MX_Gtwy_Control/Inputs/HydOilTemp/SenderState/ErrorDetection
      MX_Gtwy_Control_DWork.bitsForTID1.is_active_c28_MX_Gtwy_Control = 1U;

      // Entry Internal: MX_Gtwy_Control/Inputs/HydOilTemp/SenderState/ErrorDetection 
      // Entry Internal 'VALUE': '<S216>:2'
      // Transition: '<S216>:58'
      MX_Gtwy_Control_DWork.bitsForTID1.is_VALUE = MX_Gtwy_Control_IN_INIT_gacg;

      // Entry 'INIT': '<S216>:26'
      MX_Gtwy_Control_B.flt_HOT_hny4 = 0U;

      // Entry Internal 'INIT': '<S216>:26'
      // Transition: '<S216>:64'
      if ((MX_Gtwy_Control_B.rm_HOT_bu14 < CONSTANT_DATA->HOT_OORL) ||
          (MX_Gtwy_Control_B.rm_HOT_bu14 > CONSTANT_DATA->HOT_OORH)) {
        // Transition: '<S216>:60'
        // Transition: '<S216>:61'
        MX_Gtwy_Control_B.flt_HOT_hny4 = 0U;

        // Transition: '<S216>:62'
      } else {
        // Transition: '<S216>:63'
        MX_Gtwy_Control_B.flt_HOT_hny4 = MX_Gtwy_Control_B.flt_HOT_in;
      }

      // Entry Internal 'ERROR_STATE': '<S216>:1'
      // Transition: '<S216>:51'
      MX_Gtwy_Control_DWork.bitsForTID1.is_ERROR_STATE =
        MX_Gtwy__IN_NON_FUNCTIONAL_np20;

      // Entry 'NON_FUNCTIONAL': '<S216>:3'
      MX_Gtwy_Control_B.state_HOT_a3ul = NORMAL;
    } else {
      // During 'VALUE': '<S216>:2'
      if (MX_Gtwy_Control_DWork.bitsForTID1.is_VALUE ==
          MX_Gtwy_Control_IN_INIT_gacg) {
        // During 'INIT': '<S216>:26'
        if (MX_Gtwy_Control_B.RateTransition13_f1pl == SYS_NORMAL) {
          // Transition: '<S216>:59'
          MX_Gtwy_Control_DWork.bitsForTID1.is_VALUE =
            MX_Gtwy_Control_IN_NORMAL_mps3;
        }
      } else {
        // During 'NORMAL': '<S216>:27'
        MX_Gtwy_Control_B.flt_HOT_hny4 = MX_Gtwy_Control_B.flt_HOT_in;
      }

      // During 'ERROR_STATE': '<S216>:1'
      switch (MX_Gtwy_Control_DWork.bitsForTID1.is_ERROR_STATE) {
       case MX_Gtwy__IN_NON_FUNCTIONAL_np20:
        MX_Gtwy_Control_B.state_HOT_a3ul = NORMAL;

        // During 'NON_FUNCTIONAL': '<S216>:3'
        if ((state_SensorSupply1 == NORMAL) &&
            (MX_Gtwy_Control_B.RateTransition13_f1pl == SYS_NORMAL)) {
          // Transition: '<S216>:53'
          MX_Gtwy_Control_DWork.bitsForTID1.is_ERROR_STATE =
            MX_Gtwy_Control_IN_NORMAL_mps3;

          // Entry Internal 'NORMAL': '<S216>:7'
          // Transition: '<S216>:36'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_nc55 =
            MX_Gtwy_Control_IN_NORMAL_mps3q;

          // Entry Internal 'NORMAL': '<S216>:17'
          // Transition: '<S216>:45'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_lpll =
            MX_Gtwy_Contro_IN_DEBOUNCE_pfeg;

          // Entry 'DEBOUNCE': '<S216>:18'
          MX_Gtwy_Control_DWork.debounceCount_arj5 = 0U;
        }
        break;

       case MX_Gtwy_Control_IN_NORMAL_mps3:
        MX_Gtwy_Control_NORMAL_jbs1();
        break;

       case MX_Gtwy_Control_IN_OORH_amrx:
        // During 'OORH': '<S216>:4'
        if (MX_Gtwy_Control_B.rm_HOT_bu14 < CONSTANT_DATA->HOT_OORH) {
          // Transition: '<S216>:55'
          // Exit Internal 'OORH': '<S216>:4'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_mn5o =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
          MX_Gtwy_Control_DWork.bitsForTID1.is_ERROR_STATE =
            MX_Gtwy_Control_IN_NORMAL_mps3;

          // Entry Internal 'NORMAL': '<S216>:7'
          // Transition: '<S216>:36'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_nc55 =
            MX_Gtwy_Control_IN_NORMAL_mps3q;

          // Entry Internal 'NORMAL': '<S216>:17'
          // Transition: '<S216>:45'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_lpll =
            MX_Gtwy_Contro_IN_DEBOUNCE_pfeg;

          // Entry 'DEBOUNCE': '<S216>:18'
          MX_Gtwy_Control_DWork.debounceCount_arj5 = 0U;
        } else if ((state_SensorSupply1 != NORMAL) &&
                   (MX_Gtwy_Control_B.state_HOT_a3ul != OORH)) {
          // Transition: '<S216>:105'
          // Exit Internal 'OORH': '<S216>:4'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_mn5o =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
          MX_Gtwy_Control_DWork.bitsForTID1.is_ERROR_STATE =
            MX_Gtwy__IN_NON_FUNCTIONAL_np20;

          // Entry 'NON_FUNCTIONAL': '<S216>:3'
          MX_Gtwy_Control_B.state_HOT_a3ul = NORMAL;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_mn5o ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_pfeg) {
          // During 'DEBOUNCE': '<S216>:5'
          if ((MX_Gtwy_Control_DWork.debounceCount_arj5 >=
               CONSTANT_DATA->HOT_DEBOUNCE_OORH) ||
              (MX_Gtwy_Control_B.state_HOT_a3ul == OORH)) {
            // Transition: '<S216>:29'
            MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_mn5o =
              MX_Gtwy_Control_IN_NORMAL_mps3;

            // Entry 'NORMAL': '<S216>:6'
            MX_Gtwy_Control_B.state_HOT_a3ul = OORH;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_arj5 = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_arj5 + 1);
          }
        } else {
          MX_Gtwy_Control_B.state_HOT_a3ul = OORH;

          // During 'NORMAL': '<S216>:6'
        }
        break;

       default:
        // During 'OORL': '<S216>:23'
        if (MX_Gtwy_Control_B.rm_HOT_bu14 > CONSTANT_DATA->HOT_OORL) {
          // Transition: '<S216>:52'
          // Exit Internal 'OORL': '<S216>:23'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_daaj =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
          MX_Gtwy_Control_DWork.bitsForTID1.is_ERROR_STATE =
            MX_Gtwy_Control_IN_NORMAL_mps3;

          // Entry Internal 'NORMAL': '<S216>:7'
          // Transition: '<S216>:36'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_nc55 =
            MX_Gtwy_Control_IN_NORMAL_mps3q;

          // Entry Internal 'NORMAL': '<S216>:17'
          // Transition: '<S216>:45'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_lpll =
            MX_Gtwy_Contro_IN_DEBOUNCE_pfeg;

          // Entry 'DEBOUNCE': '<S216>:18'
          MX_Gtwy_Control_DWork.debounceCount_arj5 = 0U;
        } else if ((state_SensorSupply1 != NORMAL) &&
                   (MX_Gtwy_Control_B.state_HOT_a3ul != OORL)) {
          // Transition: '<S216>:106'
          // Exit Internal 'OORL': '<S216>:23'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_daaj =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
          MX_Gtwy_Control_DWork.bitsForTID1.is_ERROR_STATE =
            MX_Gtwy__IN_NON_FUNCTIONAL_np20;

          // Entry 'NON_FUNCTIONAL': '<S216>:3'
          MX_Gtwy_Control_B.state_HOT_a3ul = NORMAL;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_daaj ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_pfeg) {
          // During 'DEBOUNCE': '<S216>:24'
          if ((MX_Gtwy_Control_DWork.debounceCount_arj5 >=
               CONSTANT_DATA->HOT_DEBOUNCE_OORL) ||
              (MX_Gtwy_Control_B.state_HOT_a3ul == OORL)) {
            // Transition: '<S216>:50'
            MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_daaj =
              MX_Gtwy_Control_IN_NORMAL_mps3;

            // Entry 'NORMAL': '<S216>:25'
            MX_Gtwy_Control_B.state_HOT_a3ul = OORL;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_arj5 = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_arj5 + 1);
          }
        } else {
          MX_Gtwy_Control_B.state_HOT_a3ul = OORL;

          // During 'NORMAL': '<S216>:25'
        }
        break;
      }
    }

    // End of Chart: '<S213>/ErrorDetection'

    // Lookup: '<S213>/GaugeTable'
    //
    //  About '<S213>/GaugeTable':
    //  Input0  Data Type:  Integer        U16
    //  Output0 Data Type:  Integer        U16
    //  Round Mode: Zero
    //  Saturation Mode: Saturate
    //  Lookup Method: Nearest
    //
    //  XData is inlined and evenly spaced, so the algorithm only needs
    //  the value of the first element, the last element, and the spacing.
    //  For efficiency, XData is excluded from the generated code.
    //  YData parameter uses the same data type and scaling as Output0

    {
      uint32_T iLeft;

      // Find the location of current input value in the data table.
      //
      //  Based on the data type of the input, it is impossible for the
      //  search value to be less than the smallest point in the table.

      if (MX_Gtwy_Control_B.flt_HOT_hny4 >= 340U ) {
        // Greater than or equal to the largest point in the table.
        iLeft = 340U;
      } else {
        iLeft = (uint32_T)( MX_Gtwy_Control_B.flt_HOT_hny4 );
      }

      gau_HOT = MXGTW_HOTGAUGE[iLeft];
    }

    // SignalConversion: '<S213>/OutportBufferForflt_HOT'
    flt_HOT = MX_Gtwy_Control_B.flt_HOT_hny4;

    // SignalConversion: '<S213>/OutportBufferForrm_HOT'
    rm_HOT = MX_Gtwy_Control_B.rm_HOT_bu14;

    // SignalConversion: '<S213>/OutportBufferForstate_HOT'
    MX_Gtwy_Control_B.state_HOT_a3xu4 = MX_Gtwy_Control_B.state_HOT_a3ul;
  } else {
    if (MX_Gtwy_Control_DWork.SenderState_MODE) {
      // Disable for Enabled SubSystem: '<S213>/HOT_Calculations'
      if (MX_Gtwy_Control_DWork.HOT_Calculations_MODE) {
        MX_Gtwy_Control_DWork.HOT_Calculations_MODE = false;
      }

      // End of Disable for SubSystem: '<S213>/HOT_Calculations'
      MX_Gtwy_Control_DWork.SenderState_MODE = false;
    }
  }

  // End of RelationalOperator: '<S211>/Compare'
  // End of Outputs for SubSystem: '<S86>/SenderState'

  // Outputs for Enabled SubSystem: '<S86>/SwitchState' incorporates:
  //   EnablePort: '<S214>/Enable'

  if (outputSelect_HOT) {
    // Chart: '<S214>/State_Switch'
    // Gateway: MX_Gtwy_Control/Inputs/HydOilTemp/SwitchState/State_Switch
    // During: MX_Gtwy_Control/Inputs/HydOilTemp/SwitchState/State_Switch
    if ((uint32_T)
        MX_Gtwy_Control_DWork.bitsForTID1.is_active_c26_MX_Gtwy_Control == 0U) {
      // Entry: MX_Gtwy_Control/Inputs/HydOilTemp/SwitchState/State_Switch
      MX_Gtwy_Control_DWork.bitsForTID1.is_active_c26_MX_Gtwy_Control = 1U;

      // Entry Internal: MX_Gtwy_Control/Inputs/HydOilTemp/SwitchState/State_Switch 
      // Transition: '<S225>:10'
      MX_Gtwy_Control_DWork.bitsForTID1.is_c26_MX_Gtwy_Control =
        MX_Gtwy_Control_IN_NORMAL_mps3;
      MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_deye =
        MX_Gtwy_Control_IN_NORMAL_mps3;

      // Entry 'NORMAL': '<S225>:5'
      MX_Gtwy_Control_B.state_HOT_m4dw = NORMAL;
    } else {
      switch (MX_Gtwy_Control_DWork.bitsForTID1.is_c26_MX_Gtwy_Control) {
       case MX_Gtwy__IN_EXTREMELY_HIGH_al5m:
        // During 'EXTREMELY_HIGH': '<S225>:8'
        if ((MX_Gtwy_Control_B.RateTransition48 >
             CONSTANT_DATA->HOT_SWITCH_EXTREMELY_HIGH) ||
            (MX_Gtwy_Control_B.RateTransition13_f1pl != SYS_NORMAL)) {
          // Transition: '<S225>:14'
          // Exit Internal 'EXTREMELY_HIGH': '<S225>:8'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_cyoy =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
          MX_Gtwy_Control_DWork.bitsForTID1.is_c26_MX_Gtwy_Control =
            MX_Gtwy_Control_IN_NORMAL_mps3;

          // Entry Internal 'NORMAL': '<S225>:1'
          // Transition: '<S225>:15'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_deye =
            MX_Gtwy_Contro_IN_DEBOUNCE_pfeg;

          // Entry 'DEBOUNCE': '<S225>:7'
          MX_Gtwy_Control_DWork.debounceCount_h24j = 0U;
        } else if ((CONSTANT_DATA->SHUTDOWN_FUNCTION != NON_FUNCTIONAL) &&
                   (MX_Gtwy_Control_B.state_HOT_m4dw == EXTREMELY_HIGH)) {
          // Transition: '<S225>:20'
          // Exit Internal 'EXTREMELY_HIGH': '<S225>:8'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_cyoy =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
          MX_Gtwy_Control_DWork.bitsForTID1.is_c26_MX_Gtwy_Control =
            MX_Gtwy_Contro_IN_SHUTDOWN_clo0;

          // Entry Internal 'SHUTDOWN': '<S225>:4'
          // Transition: '<S225>:17'
          MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_k40k =
            MX_Gtwy_Contro_IN_DEBOUNCE_pfeg;

          // Entry 'DEBOUNCE': '<S225>:3'
          MX_Gtwy_Control_DWork.debounceCount_h24j = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_cyoy ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_pfeg) {
          // During 'DEBOUNCE': '<S225>:9'
          if ((MX_Gtwy_Control_DWork.debounceCount_h24j >=
               CONSTANT_DATA->HOT_DEBOUNCE_EXTREMELY_HIGH) ||
              (MX_Gtwy_Control_B.state_HOT_m4dw == EXTREMELY_HIGH)) {
            // Transition: '<S225>:12'
            MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_cyoy =
              MX_Gtwy__IN_EXTREMELY_HIGH_btwg;

            // Entry 'EXTREMELY_HIGH': '<S225>:2'
            MX_Gtwy_Control_B.state_HOT_m4dw = EXTREMELY_HIGH;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_h24j = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_h24j + 1);
          }
        } else {
          MX_Gtwy_Control_B.state_HOT_m4dw = EXTREMELY_HIGH;

          // During 'EXTREMELY_HIGH': '<S225>:2'
        }
        break;

       case MX_Gtwy_Control_IN_NORMAL_mps3:
        // During 'NORMAL': '<S225>:1'
        if ((MX_Gtwy_Control_B.RateTransition48 <=
             CONSTANT_DATA->HOT_SWITCH_EXTREMELY_HIGH) &&
            (MX_Gtwy_Control_B.RateTransition13_f1pl == SYS_NORMAL)) {
          // Transition: '<S225>:11'
          // Exit Internal 'NORMAL': '<S225>:1'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_deye =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
          MX_Gtwy_Control_DWork.bitsForTID1.is_c26_MX_Gtwy_Control =
            MX_Gtwy__IN_EXTREMELY_HIGH_al5m;

          // Entry Internal 'EXTREMELY_HIGH': '<S225>:8'
          // Transition: '<S225>:19'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_cyoy =
            MX_Gtwy_Contro_IN_DEBOUNCE_pfeg;

          // Entry 'DEBOUNCE': '<S225>:9'
          MX_Gtwy_Control_DWork.debounceCount_h24j = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_deye ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_pfeg) {
          // During 'DEBOUNCE': '<S225>:7'
          if ((MX_Gtwy_Control_DWork.debounceCount_h24j >=
               CONSTANT_DATA->HOT_DEBOUNCE_NORMAL) ||
              (MX_Gtwy_Control_B.state_HOT_m4dw == NORMAL)) {
            // Transition: '<S225>:16'
            MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_deye =
              MX_Gtwy_Control_IN_NORMAL_mps3;

            // Entry 'NORMAL': '<S225>:5'
            MX_Gtwy_Control_B.state_HOT_m4dw = NORMAL;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_h24j = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_h24j + 1);
          }
        } else {
          MX_Gtwy_Control_B.state_HOT_m4dw = NORMAL;

          // During 'NORMAL': '<S225>:5'
        }
        break;

       default:
        // During 'SHUTDOWN': '<S225>:4'
        if ((MX_Gtwy_Control_B.RateTransition48 >
             CONSTANT_DATA->HOT_SWITCH_EXTREMELY_HIGH) &&
            (MX_Gtwy_Control_B.state_HOT_m4dw != SHUTDOWN)) {
          // Transition: '<S225>:13'
          // Exit Internal 'SHUTDOWN': '<S225>:4'
          MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_k40k =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_ojoa;
          MX_Gtwy_Control_DWork.bitsForTID1.is_c26_MX_Gtwy_Control =
            MX_Gtwy__IN_EXTREMELY_HIGH_al5m;

          // Entry Internal 'EXTREMELY_HIGH': '<S225>:8'
          // Transition: '<S225>:19'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH_cyoy =
            MX_Gtwy_Contro_IN_DEBOUNCE_pfeg;

          // Entry 'DEBOUNCE': '<S225>:9'
          MX_Gtwy_Control_DWork.debounceCount_h24j = 0U;
        } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_k40k ==
                   MX_Gtwy_Contro_IN_DEBOUNCE_pfeg) {
          // During 'DEBOUNCE': '<S225>:3'
          if (MX_Gtwy_Control_DWork.debounceCount_h24j >=
              CONSTANT_DATA->HOT_DEBOUNCE_SHUTDOWN) {
            // Transition: '<S225>:18'
            MX_Gtwy_Control_DWork.bitsForTID1.is_SHUTDOWN_k40k =
              MX_Gtwy_Contr_IN_SHUTDOWN_idks3;

            // Entry 'SHUTDOWN': '<S225>:6'
            MX_Gtwy_Control_B.state_HOT_m4dw = SHUTDOWN;
          } else {
            MX_Gtwy_Control_DWork.debounceCount_h24j = (uint16_T)(int32_T)
              ((int32_T)MX_Gtwy_Control_DWork.debounceCount_h24j + 1);
          }
        } else {
          MX_Gtwy_Control_B.state_HOT_m4dw = SHUTDOWN;

          // During 'SHUTDOWN': '<S225>:6'
        }
        break;
      }
    }

    // End of Chart: '<S214>/State_Switch'

    // SignalConversion: '<S214>/OutportBufferForstate_HOT'
    MX_Gtwy_Control_B.state_HOT_a3xu = MX_Gtwy_Control_B.state_HOT_m4dw;
  }

  // End of Outputs for SubSystem: '<S86>/SwitchState'

  // Switch: '<S86>/Switch'
  if (outputSelect_HOT) {
    state_HOT = MX_Gtwy_Control_B.state_HOT_a3xu;
  } else {
    state_HOT = MX_Gtwy_Control_B.state_HOT_a3xu4;
  }

  // End of Switch: '<S86>/Switch'
}

// Output and update for atomic system: '<S3>/Joystick_Pots'
void MX_Gtwy_Control_Joystick_Pots(void)
{
  uint16_T rtb_BitwiseOperator2;

  // S-Function (sfix_bitop): '<S87>/Bitwise Operator1' incorporates:
  //   ArithShift: '<S87>/Shift Arithmetic2'
  //   DataTypeConversion: '<S87>/Data Type Conversion1'
  //   DataTypeConversion: '<S87>/Data Type Conversion2'
  //   Inport: '<Root>/msg_BJM2Right'

  rtb_BitwiseOperator2 = (uint16_T)(int32_T)((int32_T)msg_BJM2Right[0] |
    (int32_T)((int32_T)msg_BJM2Right[1] << 8));

  // MultiPortSwitch: '<S230>/Multiport Switch' incorporates:
  //   ArithShift: '<S230>/Shift Arithmetic'
  //   ArithShift: '<S230>/Shift Arithmetic1'
  //   Constant: '<S230>/Constant3'
  //   Outport: '<Root>/cmd_PotRight'
  //   S-Function (sfix_bitop): '<S230>/Bitwise Operator'
  //   UnaryMinus: '<S230>/Unary Minus'

  switch ((int32_T)(uint32_T)((uint32_T)(int32_T)((int32_T)rtb_BitwiseOperator2
            & (int32_T)((uint16_T)60U)) >> 2)) {
   case 0:
    MX_Gtwy_Control_Y.cmd_PotRight = 0;
    break;

   case 1:
    MX_Gtwy_Control_Y.cmd_PotRight = (int16_T)(int32_T)-(int32_T)(int32_T)
      (uint32_T)((uint32_T)rtb_BitwiseOperator2 >> 6);
    break;

   case 2:
    MX_Gtwy_Control_Y.cmd_PotRight = 0;
    break;

   case 3:
    MX_Gtwy_Control_Y.cmd_PotRight = 0;
    break;

   default:
    MX_Gtwy_Control_Y.cmd_PotRight = (int16_T)(int32_T)(uint32_T)((uint32_T)
      rtb_BitwiseOperator2 >> 6);
    break;
  }

  // End of MultiPortSwitch: '<S230>/Multiport Switch'

  // RelationalOperator: '<S231>/Compare' incorporates:
  //   Constant: '<S231>/Constant'
  //   Inport: '<Root>/msg_BJM2Right'
  //   Outport: '<Root>/cmd_TriggerRight'
  //   S-Function (sfix_bitop): '<S229>/Bitwise Operator7'

  MX_Gtwy_Control_Y.cmd_TriggerRight = ((int32_T)((int32_T)msg_BJM2Right[4] &
    (int32_T)((uint8_T)3U)) == (int32_T)((uint8_T)1U));

  // S-Function (sfix_bitop): '<S87>/Bitwise Operator2' incorporates:
  //   ArithShift: '<S87>/Shift Arithmetic1'
  //   DataTypeConversion: '<S87>/Data Type Conversion4'
  //   DataTypeConversion: '<S87>/Data Type Conversion6'
  //   Inport: '<Root>/msg_BJM2Left'

  rtb_BitwiseOperator2 = (uint16_T)(int32_T)((int32_T)msg_BJM2Left[0] | (int32_T)
    ((int32_T)msg_BJM2Left[1] << 8));

  // MultiPortSwitch: '<S228>/Multiport Switch' incorporates:
  //   ArithShift: '<S228>/Shift Arithmetic1'
  //   S-Function (sfix_bitop): '<S228>/Bitwise Operator'

  switch ((int32_T)(uint32_T)((uint32_T)(int32_T)((int32_T)rtb_BitwiseOperator2
            & (int32_T)((uint16_T)60U)) >> 2)) {
   case 0:
    // Outport: '<Root>/cmd_PotLeft' incorporates:
    //   Constant: '<S228>/Constant3'

    MX_Gtwy_Control_Y.cmd_PotLeft = 0;
    break;

   case 1:
    // Outport: '<Root>/cmd_PotLeft' incorporates:
    //   ArithShift: '<S228>/Shift Arithmetic'
    //   UnaryMinus: '<S228>/Unary Minus'

    MX_Gtwy_Control_Y.cmd_PotLeft = (int16_T)(int32_T)-(int32_T)(int32_T)
      (uint32_T)((uint32_T)rtb_BitwiseOperator2 >> 6);
    break;

   case 2:
    // Outport: '<Root>/cmd_PotLeft' incorporates:
    //   Constant: '<S228>/Constant3'

    MX_Gtwy_Control_Y.cmd_PotLeft = 0;
    break;

   case 3:
    // Outport: '<Root>/cmd_PotLeft' incorporates:
    //   Constant: '<S228>/Constant3'

    MX_Gtwy_Control_Y.cmd_PotLeft = 0;
    break;

   default:
    // Outport: '<Root>/cmd_PotLeft' incorporates:
    //   ArithShift: '<S228>/Shift Arithmetic'

    MX_Gtwy_Control_Y.cmd_PotLeft = (int16_T)(int32_T)(uint32_T)((uint32_T)
      rtb_BitwiseOperator2 >> 6);
    break;
  }

  // End of MultiPortSwitch: '<S228>/Multiport Switch'
}

// System initialize for atomic system: '<S3>/Key'
void MX_Gtwy_Control_Key_Init(void)
{
  // SystemInitialize for Chart: '<S88>/Key'
  MX_Gtwy_Control_DWork.temporalCounter_i1_cdib = 0U;
  state_Key = 0U;

  // Chart: '<S88>/Key'
  // Entry: MX_Gtwy_Control/Inputs/Key/Key
  // Entry Internal: MX_Gtwy_Control/Inputs/Key/Key
  // Transition: '<S232>:12'
  MX_Gtwy_Control_DWork.bitsForTID0.is_c20_MX_Gtwy_Control =
    MX_Gtwy_Control_IN_OFF_eqjc;

  // Entry Internal 'OFF': '<S232>:3'
  // Transition: '<S232>:17'
  MX_Gtwy_Control_DWork.bitsForTID0.is_OFF = MX_Gtwy_Contro_IN_DEBOUNCE_mncd;

  // Entry 'DEBOUNCE': '<S232>:4'
  MX_Gtwy_Control_DWork.debounceCount_gon4 = 0U;
}

// Output and update for atomic system: '<S3>/Key'
void MX_Gtwy_Control_Key(void)
{
  // Chart: '<S88>/Key' incorporates:
  //   Inport: '<Root>/din_RemoteKey'
  //   Inport: '<Root>/din_RunEnter'

  // Gateway: MX_Gtwy_Control/Inputs/Key/Key
  if ((uint32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_cdib < 65535U) {
    MX_Gtwy_Control_DWork.temporalCounter_i1_cdib = (uint16_T)(int32_T)((int32_T)
      MX_Gtwy_Control_DWork.temporalCounter_i1_cdib + 1);
  }

  // During: MX_Gtwy_Control/Inputs/Key/Key
  switch (MX_Gtwy_Control_DWork.bitsForTID0.is_c20_MX_Gtwy_Control) {
   case MX_Gtwy_Contro_IN_Debounce_pjhk:
    // During 'Debounce': '<S232>:46'
    if ((din_RemoteKey == INACTIVE) || (din_RunEnter == INACTIVE)) {
      // Transition: '<S232>:47'
      MX_Gtwy_Control_DWork.bitsForTID0.is_c20_MX_Gtwy_Control =
        MX_Gtwy_Control_IN_ON_ccfw;

      // Entry 'ON': '<S232>:2'
      state_Key = ACTIVE;
    } else {
      if (((MX_Gtwy_Control_DWork.temporalCounter_i1_cdib >=
            CONSTANT_DATA->KEY_MULTIPLE_DEBOUNCE) &&
           (CONSTANT_DATA->KEYLESS_ENTRY_FUNCTION == NON_FUNCTIONAL)) ||
          ((MX_Gtwy_Control_DWork.temporalCounter_i1_cdib >=
            CONSTANT_DATA->KEYLESS_MULTIPLE_DEBOUNCE) &&
           (CONSTANT_DATA->KEYLESS_ENTRY_FUNCTION != NON_FUNCTIONAL))) {
        // Transition: '<S232>:48'
        // Transition: '<S232>:49'
        MX_Gtwy_Control_DWork.bitsForTID0.is_c20_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_MULTIPLE;

        // Entry 'MULTIPLE': '<S232>:1'
        state_Key = MULTIPLE;
      }
    }
    break;

   case MX_Gtwy_Control_IN_MULTIPLE:
    state_Key = MULTIPLE;

    // During 'MULTIPLE': '<S232>:1'
    if ((din_RunEnter == INACTIVE) && (din_RemoteKey == INACTIVE)) {
      // Transition: '<S232>:24'
      MX_Gtwy_Control_DWork.bitsForTID0.is_c20_MX_Gtwy_Control =
        MX_Gtwy_Control_IN_OFF_eqjc;

      // Entry Internal 'OFF': '<S232>:3'
      // Transition: '<S232>:17'
      MX_Gtwy_Control_DWork.bitsForTID0.is_OFF = MX_Gtwy_Contro_IN_DEBOUNCE_mncd;

      // Entry 'DEBOUNCE': '<S232>:4'
      MX_Gtwy_Control_DWork.debounceCount_gon4 = 0U;
    }
    break;

   case MX_Gtwy_Control_IN_OFF_eqjc:
    // During 'OFF': '<S232>:3'
    if ((din_RunEnter == ACTIVE) || (din_RemoteKey == ACTIVE)) {
      // Transition: '<S232>:13'
      // Exit Internal 'OFF': '<S232>:3'
      MX_Gtwy_Control_DWork.bitsForTID0.is_OFF = MX_Gtwy_IN_NO_ACTIVE_CHILD_brms;
      MX_Gtwy_Control_DWork.bitsForTID0.is_c20_MX_Gtwy_Control =
        MX_Gtwy_Control_IN_ON_ccfw;

      // Entry 'ON': '<S232>:2'
      state_Key = ACTIVE;
    } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_OFF ==
               MX_Gtwy_Contro_IN_DEBOUNCE_mncd) {
      // During 'DEBOUNCE': '<S232>:4'
      if ((MX_Gtwy_Control_DWork.debounceCount_gon4 >=
           CONSTANT_DATA->KEY_DEBOUNCE_OFF) || (state_Key == INACTIVE)) {
        // Transition: '<S232>:18'
        MX_Gtwy_Control_DWork.bitsForTID0.is_OFF = MX_Gtwy_Control_IN_OFF_eqjcy;

        // Entry 'OFF': '<S232>:5'
        state_Key = INACTIVE;
      } else {
        MX_Gtwy_Control_DWork.debounceCount_gon4 = (uint16_T)(int32_T)((int32_T)
          MX_Gtwy_Control_DWork.debounceCount_gon4 + 1);
      }
    } else {
      state_Key = INACTIVE;

      // During 'OFF': '<S232>:5'
    }
    break;

   default:
    state_Key = ACTIVE;

    // During 'ON': '<S232>:2'
    if ((din_RunEnter == INACTIVE) && (din_RemoteKey == INACTIVE)) {
      // Transition: '<S232>:14'
      MX_Gtwy_Control_DWork.bitsForTID0.is_c20_MX_Gtwy_Control =
        MX_Gtwy_Control_IN_OFF_eqjc;

      // Entry Internal 'OFF': '<S232>:3'
      // Transition: '<S232>:17'
      MX_Gtwy_Control_DWork.bitsForTID0.is_OFF = MX_Gtwy_Contro_IN_DEBOUNCE_mncd;

      // Entry 'DEBOUNCE': '<S232>:4'
      MX_Gtwy_Control_DWork.debounceCount_gon4 = 0U;
    } else {
      if ((din_RunEnter == ACTIVE) && (din_RemoteKey == ACTIVE)) {
        // Transition: '<S232>:15'
        MX_Gtwy_Control_DWork.bitsForTID0.is_c20_MX_Gtwy_Control =
          MX_Gtwy_Contro_IN_Debounce_pjhk;
        MX_Gtwy_Control_DWork.temporalCounter_i1_cdib = 0U;
      }
    }
    break;
  }

  // End of Chart: '<S88>/Key'
}

// Function for Chart: '<S239>/Load_Moment'
static void MX_Gtwy_Control_Valid(void)
{
  // During 'Valid': '<S242>:35'
  if (state_SensorSupply2 != NORMAL) {
    // Transition: '<S242>:48'
    // Exit Internal 'Valid': '<S242>:35'
    // Exit Internal 'Normal': '<S242>:27'
    MX_Gtwy_Control_DWork.bitsForTID1.is_Normal_opb3 =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_gept;

    // Exit Internal 'Normal': '<S242>:78'
    MX_Gtwy_Control_DWork.bitsForTID1.is_Normal =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_gept;
    MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_gept;
    MX_Gtwy_Control_DWork.bitsForTID1.is_c52_MX_Gtwy_Control =
      MX_Gtwy_Control_IN_Invalid;

    // Entry 'Invalid': '<S242>:32'
    MX_Gtwy_Control_B.state_LoadMoment_o4pl = NORMAL;
  } else {
    switch (MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s) {
     case MX_Gtwy_Control_IN_Normal_lqg4:
      // During 'Normal': '<S242>:27'
      if (volts_LoadMoment < CONSTANT_DATA->LOAD_MOMENT_OORL) {
        // Transition: '<S242>:38'
        // Exit Internal 'Normal': '<S242>:27'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Normal_opb3 =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_gept;

        // Exit Internal 'Normal': '<S242>:78'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Normal =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_gept;
        MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
          MX_Gtwy_Control_IN_OORL_DB;
        MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb = 0U;
      } else if (volts_LoadMoment > CONSTANT_DATA->LOAD_MOMENT_OORH) {
        // Transition: '<S242>:41'
        // Exit Internal 'Normal': '<S242>:27'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Normal_opb3 =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_gept;

        // Exit Internal 'Normal': '<S242>:78'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Normal =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_gept;
        MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
          MX_Gtwy_Control_IN_OORH_DB;
        MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_Normal_opb3 ==
                 MX_Gtwy_Control_IN_Inhibit_kn5l) {
        MX_Gtwy_Control_B.state_LoadMoment_o4pl = NORMAL;

        // During 'Inhibit': '<S242>:80'
        if (MX_Gtwy_Control_B.RateTransition5_dkdc == (int32_T)ACTIVE) {
          // Transition: '<S242>:82'
          MX_Gtwy_Control_DWork.bitsForTID1.is_Normal_opb3 =
            MX_Gtwy_Control_IN_Normal_lqg43;

          // Entry Internal 'Normal': '<S242>:78'
          // Transition: '<S242>:51'
          MX_Gtwy_Control_DWork.bitsForTID1.is_Normal =
            MX_Gtwy_Contro_IN_Normal_lqg43w;

          // Entry 'Normal': '<S242>:58'
        } else {
          if (state_Buzzer == CONTINUOUS_BEEP) {
            // Transition: '<S242>:86'
            state_Buzzer = NO_BEEP;
            MX_Gtwy_Control_DWork.bitsForTID1.is_Normal_opb3 =
              MX_Gtwy_Control_IN_Inhibit_kn5l;

            // Entry 'Inhibit': '<S242>:80'
          }
        }
      } else {
        // During 'Normal': '<S242>:78'
        if (MX_Gtwy_Control_B.RateTransition5_dkdc != (int32_T)ACTIVE) {
          // Transition: '<S242>:81'
          // Exit Internal 'Normal': '<S242>:78'
          MX_Gtwy_Control_DWork.bitsForTID1.is_Normal =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_gept;
          MX_Gtwy_Control_DWork.bitsForTID1.is_Normal_opb3 =
            MX_Gtwy_Control_IN_Inhibit_kn5l;

          // Entry 'Inhibit': '<S242>:80'
          MX_Gtwy_Control_B.state_LoadMoment_o4pl = NORMAL;
        } else {
          switch (MX_Gtwy_Control_DWork.bitsForTID1.is_Normal) {
           case MX_Gtwy_Control_IN_Error_DB:
            // During 'Error_DB': '<S242>:60'
            if (bar_LoadMoment < CONSTANT_DATA->LOAD_MOMENT_OFF) {
              // Transition: '<S242>:52'
              MX_Gtwy_Control_DWork.bitsForTID1.is_Normal =
                MX_Gtwy_Contro_IN_Normal_lqg43w;

              // Entry 'Normal': '<S242>:58'
              MX_Gtwy_Control_B.state_LoadMoment_o4pl = NORMAL;
            } else {
              if (MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb >=
                  CONSTANT_DATA->LOAD_MOMENT_ERROR_DB) {
                // Transition: '<S242>:57'
                MX_Gtwy_Control_DWork.bitsForTID1.is_Normal =
                  MX_Gtwy_Control_IN_InError;

                // Entry 'InError': '<S242>:61'
                MX_Gtwy_Control_B.state_LoadMoment_o4pl = IN_ERROR;
              }
            }
            break;

           case MX_Gtwy_Control_IN_InError:
            MX_Gtwy_Control_B.state_LoadMoment_o4pl = IN_ERROR;

            // During 'InError': '<S242>:61'
            if (bar_LoadMoment < CONSTANT_DATA->LOAD_MOMENT_OFF) {
              // Transition: '<S242>:55'
              MX_Gtwy_Control_DWork.bitsForTID1.is_Normal =
                MX_Gtwy_Control_IN_Normal_DB;
              MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb = 0U;
            } else {
              state_Buzzer = CONTINUOUS_BEEP;
            }
            break;

           case MX_Gtwy_Contro_IN_Normal_lqg43w:
            MX_Gtwy_Control_B.state_LoadMoment_o4pl = NORMAL;

            // During 'Normal': '<S242>:58'
            if (bar_LoadMoment > CONSTANT_DATA->LOAD_MOMENT_ON) {
              // Transition: '<S242>:54'
              MX_Gtwy_Control_DWork.bitsForTID1.is_Normal =
                MX_Gtwy_Control_IN_Error_DB;
              MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb = 0U;
            }
            break;

           default:
            // During 'Normal_DB': '<S242>:59'
            if (MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb >=
                CONSTANT_DATA->LOAD_MOMENT_NORMAL_DB) {
              // Transition: '<S242>:53'
              state_Buzzer = NO_BEEP;
              MX_Gtwy_Control_DWork.bitsForTID1.is_Normal =
                MX_Gtwy_Contro_IN_Normal_lqg43w;

              // Entry 'Normal': '<S242>:58'
              MX_Gtwy_Control_B.state_LoadMoment_o4pl = NORMAL;
            } else {
              if (bar_LoadMoment > CONSTANT_DATA->LOAD_MOMENT_ON) {
                // Transition: '<S242>:56'
                MX_Gtwy_Control_DWork.bitsForTID1.is_Normal =
                  MX_Gtwy_Control_IN_InError;

                // Entry 'InError': '<S242>:61'
                MX_Gtwy_Control_B.state_LoadMoment_o4pl = IN_ERROR;
              }
            }
            break;
          }
        }
      }
      break;

     case MX_Gtwy_Control_IN_OORH_j5h0:
      MX_Gtwy_Control_B.state_LoadMoment_o4pl = OORH;

      // During 'OORH': '<S242>:31'
      if ((volts_LoadMoment <= CONSTANT_DATA->LOAD_MOMENT_OORH) &&
          (CONSTANT_DATA->LOAD_MOMENT_DEBOUNCE_NORMAL != UNLIMITED)) {
        // Transition: '<S242>:36'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
          MX_Gtwy_Control_IN_OORL_NORMAL2;
        MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb = 0U;
      } else {
        if (state_Buzzer == CONTINUOUS_BEEP) {
          // Transition: '<S242>:89'
          state_Buzzer = NO_BEEP;
          MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
            MX_Gtwy_Control_IN_OORH_j5h0;

          // Entry 'OORH': '<S242>:31'
        }
      }
      break;

     case MX_Gtwy_Control_IN_OORH_DB:
      // During 'OORH_DB': '<S242>:30'
      if (MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb >=
          CONSTANT_DATA->LOAD_MOMENT_DEBOUNCE_OORH) {
        // Transition: '<S242>:40'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
          MX_Gtwy_Control_IN_OORH_j5h0;

        // Entry 'OORH': '<S242>:31'
        MX_Gtwy_Control_B.state_LoadMoment_o4pl = OORH;
      } else {
        if (volts_LoadMoment <= CONSTANT_DATA->LOAD_MOMENT_OORH) {
          // Transition: '<S242>:42'
          MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
            MX_Gtwy_Control_IN_Normal_lqg4;

          // Entry Internal 'Normal': '<S242>:27'
          // Transition: '<S242>:79'
          MX_Gtwy_Control_DWork.bitsForTID1.is_Normal_opb3 =
            MX_Gtwy_Control_IN_Normal_lqg43;

          // Entry Internal 'Normal': '<S242>:78'
          // Transition: '<S242>:51'
          MX_Gtwy_Control_DWork.bitsForTID1.is_Normal =
            MX_Gtwy_Contro_IN_Normal_lqg43w;

          // Entry 'Normal': '<S242>:58'
          MX_Gtwy_Control_B.state_LoadMoment_o4pl = NORMAL;
        }
      }
      break;

     case MX_Gtwy_Control_IN_OORL_k2kw:
      MX_Gtwy_Control_B.state_LoadMoment_o4pl = OORL;

      // During 'OORL': '<S242>:29'
      if ((volts_LoadMoment >= CONSTANT_DATA->LOAD_MOMENT_OORL) &&
          (CONSTANT_DATA->LOAD_MOMENT_DEBOUNCE_NORMAL != UNLIMITED)) {
        // Transition: '<S242>:43'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
          MX_Gtwy_Control_IN_OORL_NORMAL1;
        MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb = 0U;
      } else {
        if (state_Buzzer == CONTINUOUS_BEEP) {
          // Transition: '<S242>:88'
          state_Buzzer = NO_BEEP;
          MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
            MX_Gtwy_Control_IN_OORL_k2kw;

          // Entry 'OORL': '<S242>:29'
        }
      }
      break;

     case MX_Gtwy_Control_IN_OORL_DB:
      // During 'OORL_DB': '<S242>:28'
      if (MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb >=
          CONSTANT_DATA->LOAD_MOMENT_DEBOUNCE_OORL) {
        // Transition: '<S242>:37'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
          MX_Gtwy_Control_IN_OORL_k2kw;

        // Entry 'OORL': '<S242>:29'
        MX_Gtwy_Control_B.state_LoadMoment_o4pl = OORL;
      } else {
        if (volts_LoadMoment >= CONSTANT_DATA->LOAD_MOMENT_OORL) {
          // Transition: '<S242>:39'
          MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
            MX_Gtwy_Control_IN_Normal_lqg4;

          // Entry Internal 'Normal': '<S242>:27'
          // Transition: '<S242>:79'
          MX_Gtwy_Control_DWork.bitsForTID1.is_Normal_opb3 =
            MX_Gtwy_Control_IN_Normal_lqg43;

          // Entry Internal 'Normal': '<S242>:78'
          // Transition: '<S242>:51'
          MX_Gtwy_Control_DWork.bitsForTID1.is_Normal =
            MX_Gtwy_Contro_IN_Normal_lqg43w;

          // Entry 'Normal': '<S242>:58'
          MX_Gtwy_Control_B.state_LoadMoment_o4pl = NORMAL;
        }
      }
      break;

     case MX_Gtwy_Control_IN_OORL_NORMAL1:
      // During 'OORL_NORMAL1': '<S242>:62'
      if (MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb >=
          CONSTANT_DATA->LOAD_MOMENT_DEBOUNCE_NORMAL) {
        // Transition: '<S242>:63'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
          MX_Gtwy_Control_IN_Normal_lqg4;

        // Entry Internal 'Normal': '<S242>:27'
        // Transition: '<S242>:79'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Normal_opb3 =
          MX_Gtwy_Control_IN_Normal_lqg43;

        // Entry Internal 'Normal': '<S242>:78'
        // Transition: '<S242>:51'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Normal =
          MX_Gtwy_Contro_IN_Normal_lqg43w;

        // Entry 'Normal': '<S242>:58'
        MX_Gtwy_Control_B.state_LoadMoment_o4pl = NORMAL;
      } else {
        if (volts_LoadMoment < CONSTANT_DATA->LOAD_MOMENT_OORL) {
          // Transition: '<S242>:64'
          MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
            MX_Gtwy_Control_IN_OORL_k2kw;

          // Entry 'OORL': '<S242>:29'
          MX_Gtwy_Control_B.state_LoadMoment_o4pl = OORL;
        }
      }
      break;

     default:
      // During 'OORL_NORMAL2': '<S242>:65'
      if (volts_LoadMoment > CONSTANT_DATA->LOAD_MOMENT_OORH) {
        // Transition: '<S242>:66'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
          MX_Gtwy_Control_IN_OORH_j5h0;

        // Entry 'OORH': '<S242>:31'
        MX_Gtwy_Control_B.state_LoadMoment_o4pl = OORH;
      } else {
        if (MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb >=
            CONSTANT_DATA->LOAD_MOMENT_DEBOUNCE_NORMAL) {
          // Transition: '<S242>:67'
          MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
            MX_Gtwy_Control_IN_Normal_lqg4;

          // Entry Internal 'Normal': '<S242>:27'
          // Transition: '<S242>:79'
          MX_Gtwy_Control_DWork.bitsForTID1.is_Normal_opb3 =
            MX_Gtwy_Control_IN_Normal_lqg43;

          // Entry Internal 'Normal': '<S242>:78'
          // Transition: '<S242>:51'
          MX_Gtwy_Control_DWork.bitsForTID1.is_Normal =
            MX_Gtwy_Contro_IN_Normal_lqg43w;

          // Entry 'Normal': '<S242>:58'
          MX_Gtwy_Control_B.state_LoadMoment_o4pl = NORMAL;
        }
      }
      break;
    }
  }
}

// System initialize for enable system: '<S89>/Load_Moment_Sensor'
void MX_Gtwy_Load_Moment_Sensor_Init(void)
{
  // SystemInitialize for Chart: '<S239>/Load_Moment'
  MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_gept;
  MX_Gtwy_Control_DWork.bitsForTID1.is_Normal_opb3 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_gept;
  MX_Gtwy_Control_DWork.bitsForTID1.is_Normal = MX_Gtwy_IN_NO_ACTIVE_CHILD_gept;
  MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c52_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_c52_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_gept;
  MX_Gtwy_Control_B.state_LoadMoment_o4pl = 0U;

  // SystemInitialize for Outport: '<S239>/state_LoadMoment'
  MX_Gtwy_Control_B.OutportBufferForstate_Load_dpi5 = ((uint8_T)8U);
}

// System reset for enable system: '<S89>/Load_Moment_Sensor'
void MX_Gtw_Load_Moment_Sensor_Reset(void)
{
  // SystemReset for Chart: '<S239>/Load_Moment'
  MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_gept;
  MX_Gtwy_Control_DWork.bitsForTID1.is_Normal_opb3 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_gept;
  MX_Gtwy_Control_DWork.bitsForTID1.is_Normal = MX_Gtwy_IN_NO_ACTIVE_CHILD_gept;
  MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c52_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_c52_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_gept;
  MX_Gtwy_Control_B.state_LoadMoment_o4pl = 0U;
}

// Disable for enable system: '<S89>/Load_Moment_Sensor'
void MX_G_Load_Moment_Sensor_Disable(void)
{
  // Disable for Outport: '<S239>/state_LoadMoment'
  MX_Gtwy_Control_B.OutportBufferForstate_Load_dpi5 = ((uint8_T)8U);

  // Disable for Outport: '<S239>/bar_LoadMoment'
  bar_LoadMoment = ((uint16_T)0U);

  // Disable for Outport: '<S239>/volts_LoadMoment'
  volts_LoadMoment = ((uint8_T)0U);
  MX_Gtwy_Control_DWork.Load_Moment_Sensor_MODE = false;
}

// Output and update for enable system: '<S89>/Load_Moment_Sensor'
void MX_Gtwy_Cont_Load_Moment_Sensor(void)
{
  uint32_T tmp;
  int16_T u0;

  // Outputs for Enabled SubSystem: '<S89>/Load_Moment_Sensor' incorporates:
  //   EnablePort: '<S239>/Enable'

  if (MX_Gtwy_Control_B.LogicalOperator1) {
    if (!MX_Gtwy_Control_DWork.Load_Moment_Sensor_MODE) {
      MX_Gtw_Load_Moment_Sensor_Reset();
      MX_Gtwy_Control_DWork.Load_Moment_Sensor_MODE = true;
    }

    // DataTypeConversion: '<S244>/Data Type Conversion3' incorporates:
    //   Gain: '<S244>/Gain'
    //   Product: '<S244>/Product'

    tmp = (uint32_T)(((uint32_T)MX_Gtwy_Control_B.RateTransition4 == 0U ?
                      MAX_uint32_T : (uint32_T)(mul_usu32_loSR
      (MX_Gtwy_Control_B.RateTransition3, (uint32_T)
       CONSTANT_DATA->LOAD_MOMENT_GAIN, 7U) / (uint32_T)
      MX_Gtwy_Control_B.RateTransition4)) >> 9);
    if (tmp > 32767U) {
      tmp = 32767U;
    }

    // Sum: '<S244>/Sum' incorporates:
    //   Constant: '<S244>/Constant'
    //   DataTypeConversion: '<S244>/Data Type Conversion2'
    //   DataTypeConversion: '<S244>/Data Type Conversion3'

    u0 = (int16_T)(int32_T)((int32_T)tmp - (int32_T)(int16_T)
      CONSTANT_DATA->LOAD_MOMENT_OFFSET);

    // Saturate: '<S244>/Saturation'
    if ((int32_T)u0 > (int32_T)8000) {
      // DataTypeConversion: '<S244>/Data Type Conversion1'
      bar_LoadMoment = (uint16_T)8000;
    } else if ((int32_T)u0 < (int32_T)0) {
      // DataTypeConversion: '<S244>/Data Type Conversion1'
      bar_LoadMoment = (uint16_T)0;
    } else {
      // DataTypeConversion: '<S244>/Data Type Conversion1'
      bar_LoadMoment = (uint16_T)u0;
    }

    // End of Saturate: '<S244>/Saturation'

    // DataTypeConversion: '<S245>/Data Type Conversion2' incorporates:
    //   Gain: '<S245>/Gain'
    //   Product: '<S245>/Product'

    tmp = (uint32_T)(((uint32_T)MX_Gtwy_Control_B.RateTransition4 == 0U ?
                      MAX_uint32_T : (uint32_T)(mul_usu32_loSR
      (MX_Gtwy_Control_B.RateTransition3, (uint32_T)
       CONSTANT_DATA->LOAD_MOMENT_VOLTS_GAIN, 9U) / (uint32_T)
      MX_Gtwy_Control_B.RateTransition4)) >> 15);
    if (tmp > 255U) {
      tmp = 255U;
    }

    volts_LoadMoment = (uint8_T)tmp;

    // End of DataTypeConversion: '<S245>/Data Type Conversion2'

    // Chart: '<S239>/Load_Moment'
    // Gateway: MX_Gtwy_Control/Inputs/Load_Moment/Load_Moment_Sensor/Load_Moment 
    if ((uint32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb < 65535U) {
      MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb = (uint16_T)(int32_T)
        ((int32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_ogkb + 1);
    }

    // During: MX_Gtwy_Control/Inputs/Load_Moment/Load_Moment_Sensor/Load_Moment 
    if ((uint32_T)
        MX_Gtwy_Control_DWork.bitsForTID1.is_active_c52_MX_Gtwy_Control == 0U) {
      // Entry: MX_Gtwy_Control/Inputs/Load_Moment/Load_Moment_Sensor/Load_Moment 
      MX_Gtwy_Control_DWork.bitsForTID1.is_active_c52_MX_Gtwy_Control = 1U;

      // Entry Internal: MX_Gtwy_Control/Inputs/Load_Moment/Load_Moment_Sensor/Load_Moment 
      // Transition: '<S242>:44'
      MX_Gtwy_Control_DWork.bitsForTID1.is_c52_MX_Gtwy_Control =
        MX_Gtwy_Control_IN_Invalid;

      // Entry 'Invalid': '<S242>:32'
      MX_Gtwy_Control_B.state_LoadMoment_o4pl = NORMAL;
    } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_c52_MX_Gtwy_Control ==
               MX_Gtwy_Control_IN_Invalid) {
      MX_Gtwy_Control_B.state_LoadMoment_o4pl = NORMAL;

      // During 'Invalid': '<S242>:32'
      if (state_SensorSupply2 == NORMAL) {
        // Transition: '<S242>:45'
        MX_Gtwy_Control_DWork.bitsForTID1.is_c52_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_Valid;

        // Entry Internal 'Valid': '<S242>:35'
        // Transition: '<S242>:49'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Valid_lp4s =
          MX_Gtwy_Control_IN_Normal_lqg4;

        // Entry Internal 'Normal': '<S242>:27'
        // Transition: '<S242>:79'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Normal_opb3 =
          MX_Gtwy_Control_IN_Normal_lqg43;

        // Entry Internal 'Normal': '<S242>:78'
        // Transition: '<S242>:51'
        MX_Gtwy_Control_DWork.bitsForTID1.is_Normal =
          MX_Gtwy_Contro_IN_Normal_lqg43w;

        // Entry 'Normal': '<S242>:58'
      } else {
        if (state_Buzzer == CONTINUOUS_BEEP) {
          // Transition: '<S242>:87'
          state_Buzzer = NO_BEEP;
          MX_Gtwy_Control_DWork.bitsForTID1.is_c52_MX_Gtwy_Control =
            MX_Gtwy_Control_IN_Invalid;

          // Entry 'Invalid': '<S242>:32'
        }
      }
    } else {
      MX_Gtwy_Control_Valid();
    }

    // End of Chart: '<S239>/Load_Moment'

    // SignalConversion: '<S239>/OutportBufferForstate_LoadMoment'
    MX_Gtwy_Control_B.OutportBufferForstate_Load_dpi5 =
      MX_Gtwy_Control_B.state_LoadMoment_o4pl;
  } else {
    if (MX_Gtwy_Control_DWork.Load_Moment_Sensor_MODE) {
      MX_G_Load_Moment_Sensor_Disable();
    }
  }

  // End of Outputs for SubSystem: '<S89>/Load_Moment_Sensor'
}

// System initialize for enable system: '<S89>/Load_Moment_Switch'
void MX_Gtwy_Load_Moment_Switch_Init(void)
{
  // SystemInitialize for Chart: '<S240>/Load_Moment'
  MX_Gtwy_Control_DWork.temporalCounter_i1_ieuh = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c69_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_c69_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ltdj;
  MX_Gtwy_Control_B.state_LoadMoment_aryg = 0U;

  // SystemInitialize for Outport: '<S240>/state_LoadMoment'
  MX_Gtwy_Control_B.OutportBufferForstate_LoadMomen = ((uint8_T)8U);
}

// System reset for enable system: '<S89>/Load_Moment_Switch'
void MX_Gtw_Load_Moment_Switch_Reset(void)
{
  // SystemReset for Chart: '<S240>/Load_Moment'
  MX_Gtwy_Control_DWork.temporalCounter_i1_ieuh = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c69_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_c69_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_ltdj;
  MX_Gtwy_Control_B.state_LoadMoment_aryg = 0U;
}

// Disable for enable system: '<S89>/Load_Moment_Switch'
void MX_G_Load_Moment_Switch_Disable(void)
{
  // Disable for Outport: '<S240>/state_LoadMoment'
  MX_Gtwy_Control_B.OutportBufferForstate_LoadMomen = ((uint8_T)8U);
  MX_Gtwy_Control_DWork.Load_Moment_Switch_MODE = false;
}

// Output and update for enable system: '<S89>/Load_Moment_Switch'
void MX_Gtwy_Cont_Load_Moment_Switch(void)
{
  // Outputs for Enabled SubSystem: '<S89>/Load_Moment_Switch' incorporates:
  //   EnablePort: '<S240>/Enable'

  if (MX_Gtwy_Control_B.LogicalOperator) {
    if (!MX_Gtwy_Control_DWork.Load_Moment_Switch_MODE) {
      MX_Gtw_Load_Moment_Switch_Reset();
      MX_Gtwy_Control_DWork.Load_Moment_Switch_MODE = true;
    }

    // Chart: '<S240>/Load_Moment'
    // Gateway: MX_Gtwy_Control/Inputs/Load_Moment/Load_Moment_Switch/Load_Moment 
    if ((uint32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_ieuh < 255U) {
      MX_Gtwy_Control_DWork.temporalCounter_i1_ieuh = (uint8_T)(int32_T)
        ((int32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_ieuh + 1);
    }

    // During: MX_Gtwy_Control/Inputs/Load_Moment/Load_Moment_Switch/Load_Moment 
    if ((uint32_T)
        MX_Gtwy_Control_DWork.bitsForTID1.is_active_c69_MX_Gtwy_Control == 0U) {
      // Entry: MX_Gtwy_Control/Inputs/Load_Moment/Load_Moment_Switch/Load_Moment 
      MX_Gtwy_Control_DWork.bitsForTID1.is_active_c69_MX_Gtwy_Control = 1U;

      // Entry Internal: MX_Gtwy_Control/Inputs/Load_Moment/Load_Moment_Switch/Load_Moment 
      // Transition: '<S246>:9'
      MX_Gtwy_Control_DWork.bitsForTID1.is_c69_MX_Gtwy_Control =
        MX_Gtwy_Control_IN_Normal_lzq2;

      // Entry 'Normal': '<S246>:1'
      MX_Gtwy_Control_B.state_LoadMoment_aryg = NORMAL;
    } else {
      switch (MX_Gtwy_Control_DWork.bitsForTID1.is_c69_MX_Gtwy_Control) {
       case MX_Gtwy_Contro_IN_Error_DB_cc4j:
        // During 'Error_DB': '<S246>:4'
        if (MX_Gtwy_Control_B.RateTransition53 < CONSTANT_DATA->LOAD_MOMENT_OFF)
        {
          // Transition: '<S246>:11'
          MX_Gtwy_Control_DWork.bitsForTID1.is_c69_MX_Gtwy_Control =
            MX_Gtwy_Control_IN_Normal_lzq2;

          // Entry 'Normal': '<S246>:1'
          MX_Gtwy_Control_B.state_LoadMoment_aryg = NORMAL;
        } else {
          if (MX_Gtwy_Control_DWork.temporalCounter_i1_ieuh >=
              CONSTANT_DATA->LOAD_MOMENT_ERROR_DB) {
            // Transition: '<S246>:5'
            MX_Gtwy_Control_DWork.bitsForTID1.is_c69_MX_Gtwy_Control =
              MX_Gtwy_Control_IN_InError_mh0f;

            // Entry 'InError': '<S246>:2'
            MX_Gtwy_Control_B.state_LoadMoment_aryg = IN_ERROR;
          }
        }
        break;

       case MX_Gtwy_Control_IN_InError_mh0f:
        MX_Gtwy_Control_B.state_LoadMoment_aryg = IN_ERROR;

        // During 'InError': '<S246>:2'
        if (MX_Gtwy_Control_B.RateTransition53 < CONSTANT_DATA->LOAD_MOMENT_OFF)
        {
          // Transition: '<S246>:7'
          MX_Gtwy_Control_DWork.bitsForTID1.is_c69_MX_Gtwy_Control =
            MX_Gtwy_Contr_IN_Normal_DB_ozzt;
          MX_Gtwy_Control_DWork.temporalCounter_i1_ieuh = 0U;
        } else {
          state_Buzzer = CONTINUOUS_BEEP;
        }
        break;

       case MX_Gtwy_Control_IN_Normal_lzq2:
        MX_Gtwy_Control_B.state_LoadMoment_aryg = NORMAL;

        // During 'Normal': '<S246>:1'
        if (MX_Gtwy_Control_B.RateTransition53 > CONSTANT_DATA->LOAD_MOMENT_ON)
        {
          // Transition: '<S246>:6'
          MX_Gtwy_Control_DWork.bitsForTID1.is_c69_MX_Gtwy_Control =
            MX_Gtwy_Contro_IN_Error_DB_cc4j;
          MX_Gtwy_Control_DWork.temporalCounter_i1_ieuh = 0U;
        }
        break;

       default:
        // During 'Normal_DB': '<S246>:3'
        if (MX_Gtwy_Control_DWork.temporalCounter_i1_ieuh >=
            CONSTANT_DATA->LOAD_MOMENT_NORMAL_DB) {
          // Transition: '<S246>:8'
          state_Buzzer = NO_BEEP;
          MX_Gtwy_Control_DWork.bitsForTID1.is_c69_MX_Gtwy_Control =
            MX_Gtwy_Control_IN_Normal_lzq2;

          // Entry 'Normal': '<S246>:1'
          MX_Gtwy_Control_B.state_LoadMoment_aryg = NORMAL;
        } else {
          if (MX_Gtwy_Control_B.RateTransition53 > CONSTANT_DATA->LOAD_MOMENT_ON)
          {
            // Transition: '<S246>:10'
            MX_Gtwy_Control_DWork.bitsForTID1.is_c69_MX_Gtwy_Control =
              MX_Gtwy_Control_IN_InError_mh0f;

            // Entry 'InError': '<S246>:2'
            MX_Gtwy_Control_B.state_LoadMoment_aryg = IN_ERROR;
          }
        }
        break;
      }
    }

    // End of Chart: '<S240>/Load_Moment'

    // SignalConversion: '<S240>/OutportBufferForstate_LoadMoment'
    MX_Gtwy_Control_B.OutportBufferForstate_LoadMomen =
      MX_Gtwy_Control_B.state_LoadMoment_aryg;
  } else {
    if (MX_Gtwy_Control_DWork.Load_Moment_Switch_MODE) {
      MX_G_Load_Moment_Switch_Disable();
    }
  }

  // End of Outputs for SubSystem: '<S89>/Load_Moment_Switch'
}

// System initialize for atomic system: '<S3>/Load_Sense'
void MX_Gtwy_Control_Load_Sense_Init(void)
{
  // SystemInitialize for Atomic SubSystem: '<S90>/LP_Filter_Adj_Gain'
  MX_Gtwy_LP_Filter_Adj_Gain_Init(&MX_Gtwy_Control_B.Output_hkf0,
    &MX_Gtwy_Control_DWork.LP_Filter_Adj_Gain_icci);

  // End of SystemInitialize for SubSystem: '<S90>/LP_Filter_Adj_Gain'

  // SystemInitialize for Enabled SubSystem: '<S90>/Load_Sense'
  // SystemInitialize for Chart: '<S250>/Pressure_Monitor'
  MX_Gtwy_Control_DWork.bitsForTID0.is_Valid = MX_Gtwy_IN_NO_ACTIVE_CHILD_iouj;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_mgr1 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iouj;
  MX_Gtwy_Control_DWork.temporalCounter_i1_flau = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_active_c4_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_c4_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_iouj;
  MX_Gtwy_Control_B.state_LoadSense_dt1i = 0U;

  // SystemInitialize for Outport: '<S250>/state_LoadSense'
  state_LoadSense = ((uint8_T)8U);

  // End of SystemInitialize for SubSystem: '<S90>/Load_Sense'
}

// Output and update for atomic system: '<S3>/Load_Sense'
void MX_Gtwy_Control_Load_Sense(void)
{
  uint16_T rtb_MultiportSwitch;
  uint8_T rtb_MultiportSwitch1;
  int16_T rtb_DataTypeConversion;
  uint32_T tmp;
  int16_T u0;

  // DataTypeConversion: '<S90>/Data Type Conversion' incorporates:
  //   Inport: '<Root>/adin_LoadSense'

  rtb_DataTypeConversion = (int16_T)adin_LoadSense;

  // Outputs for Atomic SubSystem: '<S90>/LP_Filter_Adj_Gain'

  // Constant: '<S90>/Constant2'
  MX_Gtwy_Cont_LP_Filter_Adj_Gain(CONSTANT_DATA->LOADSENSE_FILTER_GAIN,
    rtb_DataTypeConversion, &MX_Gtwy_Control_B.Output_hkf0,
    &MX_Gtwy_Control_DWork.LP_Filter_Adj_Gain_icci);

  // End of Outputs for SubSystem: '<S90>/LP_Filter_Adj_Gain'

  // Outputs for Enabled SubSystem: '<S90>/Load_Sense' incorporates:
  //   EnablePort: '<S250>/Enable'

  // Logic: '<S90>/Logical Operator1' incorporates:
  //   Constant: '<S247>/Constant'
  //   Constant: '<S248>/Constant'
  //   Constant: '<S90>/Constant1'
  //   Inport: '<Root>/state_System'
  //   RelationalOperator: '<S247>/Compare'
  //   RelationalOperator: '<S248>/Compare'

  if ((CONSTANT_DATA->LOADSENSE_FUNCTION != NON_FUNCTIONAL) && (state_System ==
       SYS_NORMAL)) {
    if (!MX_Gtwy_Control_DWork.Load_Sense_MODE) {
      // SystemReset for Chart: '<S250>/Pressure_Monitor'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Valid =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iouj;
      MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_mgr1 =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iouj;
      MX_Gtwy_Control_DWork.temporalCounter_i1_flau = 0U;
      MX_Gtwy_Control_DWork.bitsForTID0.is_active_c4_MX_Gtwy_Control = 0U;
      MX_Gtwy_Control_DWork.bitsForTID0.is_c4_MX_Gtwy_Control =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_iouj;
      MX_Gtwy_Control_B.state_LoadSense_dt1i = 0U;
      MX_Gtwy_Control_DWork.Load_Sense_MODE = true;
    }

    // MultiPortSwitch: '<S253>/Multiport Switch' incorporates:
    //   Constant: '<S253>/Constant'
    //   Inport: '<Root>/ain_SensorSupply1'
    //   Inport: '<Root>/ain_SensorSupply2'

    if ((int32_T)CONSTANT_DATA->LOADSENSE_REFERENCE == 1) {
      rtb_MultiportSwitch = ain_SensorSupply1;
    } else {
      rtb_MultiportSwitch = ain_SensorSupply2;
    }

    // End of MultiPortSwitch: '<S253>/Multiport Switch'

    // DataTypeConversion: '<S255>/Data Type Conversion2' incorporates:
    //   Gain: '<S255>/Gain'
    //   Product: '<S255>/Product'

    tmp = (uint32_T)(((uint32_T)rtb_MultiportSwitch == 0U ? MAX_uint32_T :
                      (uint32_T)(mul_usu32_loSR(MX_Gtwy_Control_B.Output_hkf0,
      (uint32_T)CONSTANT_DATA->LOADSENSE_VOLTS_GAIN, 10U) / (uint32_T)
      rtb_MultiportSwitch)) >> 15);
    if (tmp > 255U) {
      tmp = 255U;
    }

    volts_LoadSense = (uint8_T)tmp;

    // End of DataTypeConversion: '<S255>/Data Type Conversion2'

    // MultiPortSwitch: '<S253>/Multiport Switch1' incorporates:
    //   Constant: '<S253>/Constant'

    if ((int32_T)CONSTANT_DATA->LOADSENSE_REFERENCE == 1) {
      rtb_MultiportSwitch1 = MX_Gtwy_Control_B.RateTransition60;
    } else {
      rtb_MultiportSwitch1 = MX_Gtwy_Control_B.RateTransition61;
    }

    // End of MultiPortSwitch: '<S253>/Multiport Switch1'

    // Chart: '<S250>/Pressure_Monitor'
    // Gateway: MX_Gtwy_Control/Inputs/Load_Sense/Load_Sense/Pressure_Monitor
    if ((uint32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_flau < 255U) {
      MX_Gtwy_Control_DWork.temporalCounter_i1_flau = (uint8_T)(int32_T)
        ((int32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_flau + 1);
    }

    // During: MX_Gtwy_Control/Inputs/Load_Sense/Load_Sense/Pressure_Monitor
    if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID0.is_active_c4_MX_Gtwy_Control
        == 0U) {
      // Entry: MX_Gtwy_Control/Inputs/Load_Sense/Load_Sense/Pressure_Monitor
      MX_Gtwy_Control_DWork.bitsForTID0.is_active_c4_MX_Gtwy_Control = 1U;

      // Entry Internal: MX_Gtwy_Control/Inputs/Load_Sense/Load_Sense/Pressure_Monitor 
      // Transition: '<S252>:40'
      MX_Gtwy_Control_DWork.bitsForTID0.is_c4_MX_Gtwy_Control =
        MX_Gtwy_Control_IN_Invalid_pwhm;

      // Entry 'Invalid': '<S252>:16'
      MX_Gtwy_Control_B.state_LoadSense_dt1i = NORMAL;
    } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_c4_MX_Gtwy_Control ==
               MX_Gtwy_Control_IN_Invalid_pwhm) {
      MX_Gtwy_Control_B.state_LoadSense_dt1i = NORMAL;

      // During 'Invalid': '<S252>:16'
      if (rtb_MultiportSwitch1 == NORMAL) {
        // Transition: '<S252>:39'
        MX_Gtwy_Control_DWork.bitsForTID0.is_c4_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_Valid_bnhh;

        // Entry Internal 'Valid': '<S252>:81'
        // Transition: '<S252>:82'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Valid =
          MX_Gtwy_Control_IN_Normal_pqnr;

        // Entry Internal 'Normal': '<S252>:1'
        // Transition: '<S252>:77'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_mgr1 =
          MX_Gtwy_Contr_IN_Normal_DB_ha2f;
        MX_Gtwy_Control_DWork.temporalCounter_i1_flau = 0U;
      }
    } else {
      // During 'Valid': '<S252>:81'
      if (rtb_MultiportSwitch1 != NORMAL) {
        // Transition: '<S252>:79'
        // Exit Internal 'Valid': '<S252>:81'
        // Exit Internal 'Normal': '<S252>:1'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_mgr1 =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_iouj;
        MX_Gtwy_Control_DWork.bitsForTID0.is_Valid =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_iouj;
        MX_Gtwy_Control_DWork.bitsForTID0.is_c4_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_Invalid_pwhm;

        // Entry 'Invalid': '<S252>:16'
        MX_Gtwy_Control_B.state_LoadSense_dt1i = NORMAL;
      } else {
        switch (MX_Gtwy_Control_DWork.bitsForTID0.is_Valid) {
         case MX_Gtwy_Control_IN_Normal_pqnr:
          // During 'Normal': '<S252>:1'
          if (volts_LoadSense < CONSTANT_DATA->LOADSENSE_OORL) {
            // Transition: '<S252>:19'
            // Exit Internal 'Normal': '<S252>:1'
            MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_mgr1 =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_iouj;
            MX_Gtwy_Control_DWork.bitsForTID0.is_Valid =
              MX_Gtwy_Control_IN_OORL_DB_k2vm;
            MX_Gtwy_Control_DWork.temporalCounter_i1_flau = 0U;
          } else if (volts_LoadSense > CONSTANT_DATA->LOADSENSE_OORH) {
            // Transition: '<S252>:22'
            // Exit Internal 'Normal': '<S252>:1'
            MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_mgr1 =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_iouj;
            MX_Gtwy_Control_DWork.bitsForTID0.is_Valid =
              MX_Gtwy_Control_IN_OORH_DB_jfqj;
            MX_Gtwy_Control_DWork.temporalCounter_i1_flau = 0U;
          } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_mgr1 ==
                     MX_Gtwy_Control_IN_Normal_pqnr) {
            MX_Gtwy_Control_B.state_LoadSense_dt1i = NORMAL;

            // During 'Normal': '<S252>:73'
          } else {
            // During 'Normal_DB': '<S252>:74'
            if ((MX_Gtwy_Control_DWork.temporalCounter_i1_flau >=
                 CONSTANT_DATA->LOADSENSE_DB) ||
                (MX_Gtwy_Control_B.state_LoadSense_dt1i == NORMAL)) {
              // Transition: '<S252>:75'
              MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_mgr1 =
                MX_Gtwy_Control_IN_Normal_pqnr;

              // Entry 'Normal': '<S252>:73'
              MX_Gtwy_Control_B.state_LoadSense_dt1i = NORMAL;
            }
          }
          break;

         case MX_Gtwy_Control_IN_OORH_gay5:
          MX_Gtwy_Control_B.state_LoadSense_dt1i = OORH;

          // During 'OORH': '<S252>:5'
          if (volts_LoadSense <= CONSTANT_DATA->LOADSENSE_OORH) {
            // Transition: '<S252>:17'
            MX_Gtwy_Control_DWork.bitsForTID0.is_Valid =
              MX_Gtwy_Control_IN_Normal_pqnr;

            // Entry Internal 'Normal': '<S252>:1'
            // Transition: '<S252>:77'
            MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_mgr1 =
              MX_Gtwy_Contr_IN_Normal_DB_ha2f;
            MX_Gtwy_Control_DWork.temporalCounter_i1_flau = 0U;
          }
          break;

         case MX_Gtwy_Control_IN_OORH_DB_jfqj:
          // During 'OORH_DB': '<S252>:4'
          if (MX_Gtwy_Control_DWork.temporalCounter_i1_flau >=
              CONSTANT_DATA->LOADSENSE_DB) {
            // Transition: '<S252>:21'
            MX_Gtwy_Control_DWork.bitsForTID0.is_Valid =
              MX_Gtwy_Control_IN_OORH_gay5;

            // Entry 'OORH': '<S252>:5'
            MX_Gtwy_Control_B.state_LoadSense_dt1i = OORH;
          } else {
            if (volts_LoadSense <= CONSTANT_DATA->LOADSENSE_OORH) {
              // Transition: '<S252>:23'
              MX_Gtwy_Control_DWork.bitsForTID0.is_Valid =
                MX_Gtwy_Control_IN_Normal_pqnr;

              // Entry Internal 'Normal': '<S252>:1'
              // Transition: '<S252>:77'
              MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_mgr1 =
                MX_Gtwy_Contr_IN_Normal_DB_ha2f;
              MX_Gtwy_Control_DWork.temporalCounter_i1_flau = 0U;
            }
          }
          break;

         case MX_Gtwy_Control_IN_OORL_bwtu:
          MX_Gtwy_Control_B.state_LoadSense_dt1i = OORL;

          // During 'OORL': '<S252>:3'
          if (volts_LoadSense >= CONSTANT_DATA->LOADSENSE_OORL) {
            // Transition: '<S252>:38'
            MX_Gtwy_Control_DWork.bitsForTID0.is_Valid =
              MX_Gtwy_Control_IN_Normal_pqnr;

            // Entry Internal 'Normal': '<S252>:1'
            // Transition: '<S252>:77'
            MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_mgr1 =
              MX_Gtwy_Contr_IN_Normal_DB_ha2f;
            MX_Gtwy_Control_DWork.temporalCounter_i1_flau = 0U;
          }
          break;

         default:
          // During 'OORL_DB': '<S252>:2'
          if (MX_Gtwy_Control_DWork.temporalCounter_i1_flau >=
              CONSTANT_DATA->LOADSENSE_DB) {
            // Transition: '<S252>:18'
            MX_Gtwy_Control_DWork.bitsForTID0.is_Valid =
              MX_Gtwy_Control_IN_OORL_bwtu;

            // Entry 'OORL': '<S252>:3'
            MX_Gtwy_Control_B.state_LoadSense_dt1i = OORL;
          } else {
            if (volts_LoadSense >= CONSTANT_DATA->LOADSENSE_OORL) {
              // Transition: '<S252>:20'
              MX_Gtwy_Control_DWork.bitsForTID0.is_Valid =
                MX_Gtwy_Control_IN_Normal_pqnr;

              // Entry Internal 'Normal': '<S252>:1'
              // Transition: '<S252>:77'
              MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_mgr1 =
                MX_Gtwy_Contr_IN_Normal_DB_ha2f;
              MX_Gtwy_Control_DWork.temporalCounter_i1_flau = 0U;
            }
          }
          break;
        }
      }
    }

    // End of Chart: '<S250>/Pressure_Monitor'

    // SignalConversion: '<S250>/OutportBufferForstate_LoadSense'
    state_LoadSense = MX_Gtwy_Control_B.state_LoadSense_dt1i;

    // DataTypeConversion: '<S254>/Data Type Conversion3' incorporates:
    //   Gain: '<S254>/Gain'
    //   Product: '<S254>/Product'

    tmp = (uint32_T)(((uint32_T)rtb_MultiportSwitch == 0U ? MAX_uint32_T :
                      (uint32_T)(mul_usu32_loSR(MX_Gtwy_Control_B.Output_hkf0,
      (uint32_T)CONSTANT_DATA->LOADSENSE_GAIN, 7U) / (uint32_T)
      rtb_MultiportSwitch)) >> 9);
    if (tmp > 32767U) {
      tmp = 32767U;
    }

    // Sum: '<S254>/Sum' incorporates:
    //   Constant: '<S254>/Constant'
    //   DataTypeConversion: '<S254>/Data Type Conversion2'
    //   DataTypeConversion: '<S254>/Data Type Conversion3'

    u0 = (int16_T)(int32_T)((int32_T)tmp - (int32_T)(int16_T)
      CONSTANT_DATA->LOADSENSE_OFFSET);

    // Saturate: '<S254>/Saturation'
    if ((int32_T)u0 > (int32_T)8000) {
      // DataTypeConversion: '<S254>/Data Type Conversion1'
      psi_LoadSense = (uint16_T)8000;
    } else if ((int32_T)u0 < (int32_T)0) {
      // DataTypeConversion: '<S254>/Data Type Conversion1'
      psi_LoadSense = (uint16_T)0;
    } else {
      // DataTypeConversion: '<S254>/Data Type Conversion1'
      psi_LoadSense = (uint16_T)u0;
    }

    // End of Saturate: '<S254>/Saturation'

    // Gain: '<S253>/Gain'
    bar_LoadSense = (uint16_T)(uint32_T)((uint32_T)((uint32_T)((uint16_T)18079U)
      * (uint32_T)psi_LoadSense) >> 11);
  } else {
    if (MX_Gtwy_Control_DWork.Load_Sense_MODE) {
      // Disable for Outport: '<S250>/psi_LoadSense'
      psi_LoadSense = ((uint16_T)0U);

      // Disable for Outport: '<S250>/bar_LoadSense'
      bar_LoadSense = ((uint16_T)0U);

      // Disable for Outport: '<S250>/state_LoadSense'
      state_LoadSense = ((uint8_T)8U);

      // Disable for Outport: '<S250>/volts_LoadSense'
      volts_LoadSense = ((uint8_T)0U);
      MX_Gtwy_Control_DWork.Load_Sense_MODE = false;
    }
  }

  // End of Logic: '<S90>/Logical Operator1'
  // End of Outputs for SubSystem: '<S90>/Load_Sense'
}

// Function for Chart: '<S257>/Pot'
static void MX_Gtwy_Control_Supply_OK_asxw(const int16_T *DataTypeConversion)
{
  int16_T position_OffsetPotIn;

  // During 'Supply_OK': '<S260>:114'
  if (MX_Gtwy_Control_B.RateTransition56 != NORMAL) {
    // Transition: '<S260>:111'
    // Exit Internal 'Supply_OK': '<S260>:114'
    // Exit Internal 'NORMAL': '<S260>:4'
    // Exit Internal 'ACTIVE': '<S260>:105'
    MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_cmoc =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;

    // Exit Internal 'Normal': '<S260>:96'
    MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_fmmn =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
    MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_p3pb =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
    MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
    MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State =
      MX_Gtwy_Con_IN_SupplyFault_jnks;

    // Entry 'SupplyFault': '<S260>:110'
    MX_Gtwy_Control_B.state_OffsetPot_myez = NORMAL;
    MX_Gtwy_Control_B.position_OffsetPotOut = (int16_T)
      CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
  } else {
    switch (MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK) {
     case MX_Gtwy_Control_IN_NORMAL_dsz0:
      // During 'NORMAL': '<S260>:4'
      if ((int32_T)*DataTypeConversion > (int32_T)CONSTANT_DATA->OFFSET_POT_OORH)
      {
        // Transition: '<S260>:17'
        // Exit Internal 'NORMAL': '<S260>:4'
        // Exit Internal 'ACTIVE': '<S260>:105'
        MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_cmoc =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;

        // Exit Internal 'Normal': '<S260>:96'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_fmmn =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
        MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_p3pb =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
        MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK =
          MX_Gtwy_C_IN_debounce_OORH_hgo3;
        MX_Gtwy_Control_DWork.temporalCounter_i2_po3h = 0U;

        // Entry 'debounce_OORH': '<S260>:5'
        MX_Gtwy_Control_B.position_OffsetPotOut = (int16_T)
          CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
      } else if ((int32_T)*DataTypeConversion < (int32_T)
                 CONSTANT_DATA->OFFSET_POT_OORL) {
        // Transition: '<S260>:24'
        // Exit Internal 'NORMAL': '<S260>:4'
        // Exit Internal 'ACTIVE': '<S260>:105'
        MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_cmoc =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;

        // Exit Internal 'Normal': '<S260>:96'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_fmmn =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
        MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_p3pb =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
        MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK =
          MX_Gtwy_C_IN_debounce_OORL_kl1b;
        MX_Gtwy_Control_DWork.temporalCounter_i2_po3h = 0U;

        // Entry 'debounce_OORL': '<S260>:6'
        MX_Gtwy_Control_B.position_OffsetPotOut = (int16_T)
          CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
      } else if (MX_Gtwy_Control_DWork.state_OffsetPotCal == NOT_IN_NEUTRAL) {
        // Transition: '<S260>:26'
        // Exit Internal 'NORMAL': '<S260>:4'
        // Exit Internal 'ACTIVE': '<S260>:105'
        MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_cmoc =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;

        // Exit Internal 'Normal': '<S260>:96'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_fmmn =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
        MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_p3pb =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
        MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK =
          MX_Gtwy__IN_NOT_IN_NEUTRAL_pn4p;

        // Entry 'NOT_IN_NEUTRAL': '<S260>:8'
        MX_Gtwy_Control_B.state_OffsetPot_myez = NOT_IN_NEUTRAL;
        MX_Gtwy_Control_B.position_OffsetPotOut = (int16_T)
          CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
      } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_p3pb ==
                 MX_Gtwy_Control_IN_ACTIVE_jsee) {
        // During 'ACTIVE': '<S260>:105'
        position_OffsetPotIn = (int16_T)(int32_T)((int32_T)*DataTypeConversion +
          (int32_T)MX_Gtwy_Control_DWork.offset_OffsetPotCal);
        MX_Gtwy_Control_B.position_OffsetPotOut = position_OffsetPotIn;
        if (MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_cmoc ==
            MX_Gtwy_Control_IN_Inhibit_h4lp) {
          MX_Gtwy_Control_B.state_OffsetPot_myez = NEUTRAL;

          // During 'Inhibit': '<S260>:97'
          if ((state_HydEnable == ACTIVE) && ((int32_T)position_OffsetPotIn >=
               (int32_T)MX_Gtwy_Control_DWork.base_Threshold) && ((int32_T)
               position_OffsetPotIn <= (int32_T)
               MX_Gtwy_Control_DWork.rod_Threshold)) {
            // Transition: '<S260>:99'
            MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_cmoc =
              MX_Gtwy_Control_IN_Normal_f1zn;

            // Entry Internal 'Normal': '<S260>:96'
            // Transition: '<S260>:31'
            MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_fmmn =
              MX_Gtwy_Control_IN_Neutral_lud1;

            // Entry 'Neutral': '<S260>:11'
          }
        } else {
          // During 'Normal': '<S260>:96'
          if (state_HydEnable != ACTIVE) {
            // Transition: '<S260>:98'
            // Exit Internal 'Normal': '<S260>:96'
            MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_fmmn =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
            MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_cmoc =
              MX_Gtwy_Control_IN_Inhibit_h4lp;

            // Entry 'Inhibit': '<S260>:97'
            MX_Gtwy_Control_B.state_OffsetPot_myez = NEUTRAL;
          } else {
            switch (MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_fmmn) {
             case MX_Gtwy_Con_IN_Base_Active_fj3q:
              MX_Gtwy_Control_B.state_OffsetPot_myez = BASE_ACTIVE;

              // During 'Base_Active': '<S260>:10'
              if (((int32_T)position_OffsetPotIn >= (int32_T)
                   MX_Gtwy_Control_DWork.base_Threshold) && ((int32_T)
                   position_OffsetPotIn > (int32_T)
                   MX_Gtwy_Control_DWork.rod_Threshold)) {
                // Transition: '<S260>:38'
                MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_fmmn =
                  MX_Gtwy_Cont_IN_Rod_Active_obgc;

                // Entry 'Rod_Active': '<S260>:12'
                MX_Gtwy_Control_B.state_OffsetPot_myez = ROD_ACTIVE;
              } else {
                if ((int32_T)position_OffsetPotIn >= (int32_T)
                    MX_Gtwy_Control_DWork.base_Threshold) {
                  // Transition: '<S260>:37'
                  MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_fmmn =
                    MX_Gtwy_Control_IN_Neutral_lud1;

                  // Entry 'Neutral': '<S260>:11'
                  MX_Gtwy_Control_B.state_OffsetPot_myez = NEUTRAL;
                }
              }
              break;

             case MX_Gtwy_Control_IN_Neutral_lud1:
              MX_Gtwy_Control_B.state_OffsetPot_myez = NEUTRAL;

              // During 'Neutral': '<S260>:11'
              if ((int32_T)position_OffsetPotIn > (int32_T)
                  MX_Gtwy_Control_DWork.rod_Threshold) {
                // Transition: '<S260>:35'
                MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_fmmn =
                  MX_Gtwy_Cont_IN_Rod_Active_obgc;

                // Entry 'Rod_Active': '<S260>:12'
                MX_Gtwy_Control_B.state_OffsetPot_myez = ROD_ACTIVE;
              } else {
                if ((int32_T)position_OffsetPotIn < (int32_T)
                    MX_Gtwy_Control_DWork.base_Threshold) {
                  // Transition: '<S260>:34'
                  MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_fmmn =
                    MX_Gtwy_Con_IN_Base_Active_fj3q;

                  // Entry 'Base_Active': '<S260>:10'
                  MX_Gtwy_Control_B.state_OffsetPot_myez = BASE_ACTIVE;
                }
              }
              break;

             default:
              MX_Gtwy_Control_B.state_OffsetPot_myez = ROD_ACTIVE;

              // During 'Rod_Active': '<S260>:12'
              if (((int32_T)position_OffsetPotIn <= (int32_T)
                   MX_Gtwy_Control_DWork.rod_Threshold) && ((int32_T)
                   position_OffsetPotIn < (int32_T)
                   MX_Gtwy_Control_DWork.base_Threshold)) {
                // Transition: '<S260>:33'
                MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_fmmn =
                  MX_Gtwy_Con_IN_Base_Active_fj3q;

                // Entry 'Base_Active': '<S260>:10'
                MX_Gtwy_Control_B.state_OffsetPot_myez = BASE_ACTIVE;
              } else {
                if ((int32_T)position_OffsetPotIn <= (int32_T)
                    MX_Gtwy_Control_DWork.rod_Threshold) {
                  // Transition: '<S260>:36'
                  MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_fmmn =
                    MX_Gtwy_Control_IN_Neutral_lud1;

                  // Entry 'Neutral': '<S260>:11'
                  MX_Gtwy_Control_B.state_OffsetPot_myez = NEUTRAL;
                }
              }
              break;
            }
          }
        }
      } else {
        MX_Gtwy_Control_B.state_OffsetPot_myez = NEUTRAL;

        // During 'Inactive': '<S260>:106'
        if (MX_Gtwy_Control_DWork.state_OffsetPotCal != INACTIVE) {
          // Transition: '<S260>:107'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_p3pb =
            MX_Gtwy_Control_IN_ACTIVE_jsee;

          // Entry 'ACTIVE': '<S260>:105'
          MX_Gtwy_Control_B.position_OffsetPotOut = (int16_T)(int32_T)((int32_T)*
            DataTypeConversion + (int32_T)
            MX_Gtwy_Control_DWork.offset_OffsetPotCal);

          // Entry Internal 'ACTIVE': '<S260>:105'
          // Transition: '<S260>:101'
          MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_cmoc =
            MX_Gtwy_Control_IN_Inhibit_h4lp;

          // Entry 'Inhibit': '<S260>:97'
        }
      }
      break;

     case MX_Gtwy__IN_NOT_IN_NEUTRAL_pn4p:
      MX_Gtwy_Control_B.state_OffsetPot_myez = NOT_IN_NEUTRAL;

      // During 'NOT_IN_NEUTRAL': '<S260>:8'
      if (MX_Gtwy_Control_DWork.state_OffsetPotCal != NOT_IN_NEUTRAL) {
        // Transition: '<S260>:16'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK =
          MX_Gtwy_Control_IN_NORMAL_dsz0;

        // Entry Internal 'NORMAL': '<S260>:4'
        // Transition: '<S260>:108'
        MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_p3pb =
          MX_Gtwy_Contro_IN_Inactive_e4qr;

        // Entry 'Inactive': '<S260>:106'
        MX_Gtwy_Control_B.state_OffsetPot_myez = NEUTRAL;
        MX_Gtwy_Control_DWork.base_Threshold = (uint16_T)(int32_T)((int32_T)
          CONSTANT_DATA->OFFSET_POT_CENTER_RATIO - (int32_T)
          CONSTANT_DATA->OFFSET_POT_DEADBAND);
        MX_Gtwy_Control_DWork.rod_Threshold = (uint16_T)(int32_T)((int32_T)
          CONSTANT_DATA->OFFSET_POT_CENTER_RATIO + (int32_T)
          CONSTANT_DATA->OFFSET_POT_DEADBAND);
        MX_Gtwy_Control_B.position_OffsetPotOut = (int16_T)
          CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
      }
      break;

     case MX_Gtwy_Control_IN_OORH_p1d2:
      MX_Gtwy_Control_B.state_OffsetPot_myez = OORH;

      // During 'OORH': '<S260>:3'
      break;

     case MX_Gtwy_Control_IN_OORL_goye:
      MX_Gtwy_Control_B.state_OffsetPot_myez = OORL;

      // During 'OORL': '<S260>:7'
      break;

     case MX_Gtwy_C_IN_debounce_OORH_hgo3:
      // During 'debounce_OORH': '<S260>:5'
      if (MX_Gtwy_Control_DWork.temporalCounter_i2_po3h >=
          CONSTANT_DATA->OFFSET_POT_OOR_DB) {
        // Transition: '<S260>:19'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK =
          MX_Gtwy_Control_IN_OORH_p1d2;

        // Entry 'OORH': '<S260>:3'
        MX_Gtwy_Control_B.state_OffsetPot_myez = OORH;
      } else {
        if ((int32_T)*DataTypeConversion <= (int32_T)
            CONSTANT_DATA->OFFSET_POT_OORH) {
          // Transition: '<S260>:18'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK =
            MX_Gtwy_Control_IN_NORMAL_dsz0;

          // Entry Internal 'NORMAL': '<S260>:4'
          // Transition: '<S260>:108'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_p3pb =
            MX_Gtwy_Contro_IN_Inactive_e4qr;

          // Entry 'Inactive': '<S260>:106'
          MX_Gtwy_Control_B.state_OffsetPot_myez = NEUTRAL;
          MX_Gtwy_Control_DWork.base_Threshold = (uint16_T)(int32_T)((int32_T)
            CONSTANT_DATA->OFFSET_POT_CENTER_RATIO - (int32_T)
            CONSTANT_DATA->OFFSET_POT_DEADBAND);
          MX_Gtwy_Control_DWork.rod_Threshold = (uint16_T)(int32_T)((int32_T)
            CONSTANT_DATA->OFFSET_POT_CENTER_RATIO + (int32_T)
            CONSTANT_DATA->OFFSET_POT_DEADBAND);
          MX_Gtwy_Control_B.position_OffsetPotOut = (int16_T)
            CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
        }
      }
      break;

     default:
      // During 'debounce_OORL': '<S260>:6'
      if (MX_Gtwy_Control_DWork.temporalCounter_i2_po3h >=
          CONSTANT_DATA->OFFSET_POT_OOR_DB) {
        // Transition: '<S260>:22'
        MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK =
          MX_Gtwy_Control_IN_OORL_goye;

        // Entry 'OORL': '<S260>:7'
        MX_Gtwy_Control_B.state_OffsetPot_myez = OORL;
      } else {
        if ((int32_T)*DataTypeConversion >= (int32_T)
            CONSTANT_DATA->OFFSET_POT_OORL) {
          // Transition: '<S260>:23'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK =
            MX_Gtwy_Control_IN_NORMAL_dsz0;

          // Entry Internal 'NORMAL': '<S260>:4'
          // Transition: '<S260>:108'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_p3pb =
            MX_Gtwy_Contro_IN_Inactive_e4qr;

          // Entry 'Inactive': '<S260>:106'
          MX_Gtwy_Control_B.state_OffsetPot_myez = NEUTRAL;
          MX_Gtwy_Control_DWork.base_Threshold = (uint16_T)(int32_T)((int32_T)
            CONSTANT_DATA->OFFSET_POT_CENTER_RATIO - (int32_T)
            CONSTANT_DATA->OFFSET_POT_DEADBAND);
          MX_Gtwy_Control_DWork.rod_Threshold = (uint16_T)(int32_T)((int32_T)
            CONSTANT_DATA->OFFSET_POT_CENTER_RATIO + (int32_T)
            CONSTANT_DATA->OFFSET_POT_DEADBAND);
          MX_Gtwy_Control_B.position_OffsetPotOut = (int16_T)
            CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
        }
      }
      break;
    }
  }
}

// System initialize for atomic system: '<S3>/Offset_Pot'
void MX_Gtwy_Control_Offset_Pot_Init(void)
{
  // SystemInitialize for Enabled SubSystem: '<S91>/CAN_Pot'
  // SystemInitialize for Chart: '<S256>/Pot'
  MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
  MX_Gtwy_Control_DWork.temporalCounter_i1_oo1t = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State_etsr =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
  MX_Gtwy_Control_DWork.bitsForTID0.is_CAN_OK = MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_a55l =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
  MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_e41i =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_ey2b =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
  MX_Gtwy_Control_DWork.bitsForTID0.is_active_c72_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.offset_OffsetPotCal_cil5 = 0;
  MX_Gtwy_Control_DWork.state_OffsetPotCal_bpzc = 0U;
  MX_Gtwy_Control_DWork.base_Threshold_a413 = 0U;
  MX_Gtwy_Control_DWork.rod_Threshold_lk5x = 0U;
  MX_Gtwy_Control_B.position_OffsetPotOut_kdzj = 0;

  // SystemInitialize for Outport: '<S256>/state_OffsetPot'
  MX_Gtwy_Control_B.OutportBufferForstate_Offs_nf42 = ((uint8_T)8U);

  // SystemInitialize for Outport: '<S256>/position_OffsetPot'
  MX_Gtwy_Control_B.OutportBufferForposition_O_j4h4 = 500;

  // SystemInitialize for Outport: '<S256>/rm_OffsetPot'
  MX_Gtwy_Control_B.DataTypeConversion1 = ((uint16_T)500U);

  // End of SystemInitialize for SubSystem: '<S91>/CAN_Pot'

  // SystemInitialize for Enabled SubSystem: '<S91>/Normal_Pot'
  // SystemInitialize for Chart: '<S257>/Pot'
  MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration_l22u =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
  MX_Gtwy_Control_DWork.temporalCounter_i1_lftt = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
  MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_p3pb =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
  MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_cmoc =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
  MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_fmmn =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
  MX_Gtwy_Control_DWork.temporalCounter_i2_po3h = 0U;
  MX_Gtwy_Control_DWork.bitsForTID0.is_active_c45_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.offset_OffsetPotCal = 0;
  MX_Gtwy_Control_DWork.state_OffsetPotCal = 0U;
  MX_Gtwy_Control_DWork.base_Threshold = 0U;
  MX_Gtwy_Control_DWork.rod_Threshold = 0U;
  MX_Gtwy_Control_B.state_OffsetPot_myez = 0U;
  MX_Gtwy_Control_B.position_OffsetPotOut = 0;

  // SystemInitialize for Outport: '<S257>/state_OffsetPot'
  MX_Gtwy_Control_B.OutportBufferForstate_OffsetPot = ((uint8_T)8U);

  // SystemInitialize for Outport: '<S257>/position_OffsetPot'
  MX_Gtwy_Control_B.OutportBufferForposition_Offset = 500;

  // SystemInitialize for Outport: '<S257>/rm_OffsetPot'
  MX_Gtwy_Control_B.Gain = ((uint16_T)500U);

  // End of SystemInitialize for SubSystem: '<S91>/Normal_Pot'
}

// Output and update for atomic system: '<S3>/Offset_Pot'
void MX_Gtwy_Control_Offset_Pot(void)
{
  boolean_T aVarTruthTableCondition_2;
  boolean_T aVarTruthTableCondition_3;
  uint8_T rtb_enable_CAN;
  uint8_T rtb_enable_Normal;
  uint8_T rtb_select_Position;
  int16_T rtb_Sum_ajdp;
  uint16_T u0;

  // Truth Table: '<S91>/Pot_Selection' incorporates:
  //   Inport: '<Root>/state_System'

  // Truth Table Function 'MX_Gtwy_Control/Inputs/Offset_Pot/Pot_Selection': '<S258>:1' 
  //  Offset NonFunctional
  // Condition '#1': '<S258>:1:10'
  //  System State Normal
  // Condition '#2': '<S258>:1:14'
  aVarTruthTableCondition_2 = (state_System == SYS_NORMAL);

  //  CAN NonFunctional
  // Condition '#3': '<S258>:1:18'
  aVarTruthTableCondition_3 = (CONSTANT_DATA->WORKGROUP_FUNCTION ==
    NON_FUNCTIONAL);
  if (CONSTANT_DATA->OFFSET_POT_FUNCTION == NON_FUNCTIONAL) {
    // Decision 'D1': '<S258>:1:20'
    //  Non Functional
    // Action '1': '<S258>:1:34'
    rtb_enable_Normal = 0U;

    // Action '1': '<S258>:1:35'
    rtb_enable_CAN = 0U;

    // Action '1': '<S258>:1:36'
    rtb_select_Position = 0U;
  } else if (aVarTruthTableCondition_2 && aVarTruthTableCondition_3) {
    // Decision 'D2': '<S258>:1:22'
    //  Analog Pot
    // Action '2': '<S258>:1:42'
    rtb_enable_Normal = 1U;

    // Action '2': '<S258>:1:43'
    rtb_enable_CAN = 0U;

    // Action '2': '<S258>:1:44'
    rtb_select_Position = 0U;
  } else if (aVarTruthTableCondition_2 && (!aVarTruthTableCondition_3)) {
    // Decision 'D3': '<S258>:1:24'
    //  CAN Pot
    // Action '3': '<S258>:1:50'
    rtb_enable_Normal = 0U;

    // Action '3': '<S258>:1:51'
    rtb_enable_CAN = 1U;

    // Action '3': '<S258>:1:52'
    rtb_select_Position = 1U;
  } else {
    // Decision 'D4': '<S258>:1:26'
    //  Default
    //  Non Functional
    // Action '1': '<S258>:1:34'
    rtb_enable_Normal = 0U;

    // Action '1': '<S258>:1:35'
    rtb_enable_CAN = 0U;

    // Action '1': '<S258>:1:36'
    rtb_select_Position = 0U;
  }

  // End of Truth Table: '<S91>/Pot_Selection'

  // Outputs for Enabled SubSystem: '<S91>/CAN_Pot' incorporates:
  //   EnablePort: '<S256>/Enable'

  if ((int32_T)rtb_enable_CAN > 0) {
    if (!MX_Gtwy_Control_DWork.CAN_Pot_MODE) {
      // SystemReset for Chart: '<S256>/Pot'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
      MX_Gtwy_Control_DWork.temporalCounter_i1_oo1t = 0U;
      MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State_etsr =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
      MX_Gtwy_Control_DWork.bitsForTID0.is_CAN_OK =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
      MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_a55l =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
      MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_e41i =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
      MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_ey2b =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
      MX_Gtwy_Control_DWork.bitsForTID0.is_active_c72_MX_Gtwy_Control = 0U;
      MX_Gtwy_Control_DWork.offset_OffsetPotCal_cil5 = 0;
      MX_Gtwy_Control_DWork.state_OffsetPotCal_bpzc = 0U;
      MX_Gtwy_Control_DWork.base_Threshold_a413 = 0U;
      MX_Gtwy_Control_DWork.rod_Threshold_lk5x = 0U;
      MX_Gtwy_Control_B.position_OffsetPotOut_kdzj = 0;
      MX_Gtwy_Control_DWork.CAN_Pot_MODE = true;
    }

    // Sum: '<S256>/Sum' incorporates:
    //   Constant: '<S256>/Constant'
    //   Gain: '<S256>/Gain'
    //   Outport: '<Root>/cmd_PotLeft'
    //   UnaryMinus: '<S256>/Unary Minus'

    rtb_Sum_ajdp = (int16_T)(int32_T)((int32_T)(int16_T)(int32_T)((int32_T)
      ((int32_T)16384 * (int32_T)(int16_T)(int32_T)-(int32_T)
       MX_Gtwy_Control_Y.cmd_PotLeft) >> 15) + (int32_T)500);

    // DataTypeConversion: '<S256>/Data Type Conversion1'
    MX_Gtwy_Control_B.DataTypeConversion1 = (uint16_T)rtb_Sum_ajdp;

    // Chart: '<S256>/Pot' incorporates:
    //   Inport: '<Root>/msgAge_BJM2Left'

    // Gateway: MX_Gtwy_Control/Inputs/Offset_Pot/CAN_Pot/Pot
    if ((uint32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_oo1t < 127U) {
      MX_Gtwy_Control_DWork.temporalCounter_i1_oo1t = (uint8_T)(int32_T)
        ((int32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_oo1t + 1);
    }

    // During: MX_Gtwy_Control/Inputs/Offset_Pot/CAN_Pot/Pot
    if ((uint32_T)
        MX_Gtwy_Control_DWork.bitsForTID0.is_active_c72_MX_Gtwy_Control == 0U) {
      // Entry: MX_Gtwy_Control/Inputs/Offset_Pot/CAN_Pot/Pot
      MX_Gtwy_Control_DWork.bitsForTID0.is_active_c72_MX_Gtwy_Control = 1U;

      // Entry Internal: MX_Gtwy_Control/Inputs/Offset_Pot/CAN_Pot/Pot
      // Entry Internal 'Pot_Calibration': '<S259>:2'
      // Transition: '<S259>:42'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration =
        MX_Gtwy_Contr_IN_InitDelay_kynr;
      MX_Gtwy_Control_DWork.temporalCounter_i1_oo1t = 0U;

      // Entry 'InitDelay': '<S259>:14'
      MX_Gtwy_Control_DWork.state_OffsetPotCal_bpzc = INACTIVE;
      MX_Gtwy_Control_DWork.offset_OffsetPotCal_cil5 = 0;

      // Entry Internal 'Pot_State': '<S259>:9'
      // Transition: '<S259>:115'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State_etsr =
        MX_Gtwy_Control_IN_CAN_OK_bbyi;

      // Entry Internal 'CAN_OK': '<S259>:114'
      // Transition: '<S259>:43'
      MX_Gtwy_Control_DWork.bitsForTID0.is_CAN_OK =
        MX_Gtwy_Control_IN_NORMAL_dsz0;

      // Entry Internal 'NORMAL': '<S259>:4'
      // Transition: '<S259>:108'
      MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_a55l =
        MX_Gtwy_Contro_IN_Inactive_e4qr;

      // Entry 'Inactive': '<S259>:106'
      rtb_enable_CAN = NEUTRAL;
      MX_Gtwy_Control_DWork.base_Threshold_a413 = (uint16_T)(int32_T)((int32_T)
        CONSTANT_DATA->OFFSET_POT_CENTER_RATIO + (int32_T)
        CONSTANT_DATA->OFFSET_POT_DEADBAND);
      MX_Gtwy_Control_DWork.rod_Threshold_lk5x = (uint16_T)(int32_T)((int32_T)
        CONSTANT_DATA->OFFSET_POT_CENTER_RATIO - (int32_T)
        CONSTANT_DATA->OFFSET_POT_DEADBAND);
      MX_Gtwy_Control_B.position_OffsetPotOut_kdzj = (int16_T)
        CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
    } else {
      // During 'Pot_Calibration': '<S259>:2'
      switch (MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration) {
       case MX_Gtwy_Contr_IN_InitDelay_kynr:
        // During 'InitDelay': '<S259>:14'
        if (MX_Gtwy_Control_DWork.temporalCounter_i1_oo1t >=
            MX_Gtwy_Control_ONE_SECOND_guqv) {
          // Transition: '<S259>:27'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration =
            MX_IN_Wait_For_Cal_Attempt_ouyq;
        }
        break;

       case MX_Gtw_IN_Joystick_Powerup_cmqf:
        // During 'Joystick_Powerup': '<S259>:119'
        if (MX_Gtwy_Control_DWork.temporalCounter_i1_oo1t >=
            MX_Gtwy_Control_ONE_SECOND_guqv) {
          // Transition: '<S259>:121'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration =
            MX_IN_Wait_For_Cal_Attempt_ouyq;
        }
        break;

       case MX_IN_Wait_For_Cal_Attempt_ouyq:
        // During 'Wait_For_Cal_Attempt': '<S259>:1'
        if ((state_Console == ACTIVE) && (state_Engine != ENGINE_CRANKING) &&
            ((int32_T)msgAge_BJM2Left < 100)) {
          // Transition: '<S259>:28'
          if (((int32_T)rtb_Sum_ajdp >= (int32_T)
               CONSTANT_DATA->OFFSET_POT_CAL_DEADBAND_LOW) && ((int32_T)
               rtb_Sum_ajdp <= (int32_T)
               CONSTANT_DATA->OFFSET_POT_CAL_DEADBAND_HIGH)) {
            // Transition: '<S259>:29'
            // Transition: '<S259>:32'
            MX_Gtwy_Control_DWork.state_OffsetPotCal_bpzc = NORMAL;
            MX_Gtwy_Control_DWork.offset_OffsetPotCal_cil5 = (int16_T)(int32_T)
              ((int32_T)(int16_T)CONSTANT_DATA->OFFSET_POT_CENTER_RATIO -
               (int32_T)rtb_Sum_ajdp);

            // Transition: '<S259>:39'
          } else {
            // Transition: '<S259>:30'
            MX_Gtwy_Control_DWork.state_OffsetPotCal_bpzc = NOT_IN_NEUTRAL;
            MX_Gtwy_Control_DWork.offset_OffsetPotCal_cil5 = 0;
            state_Buzzer = TRIPLE_SHORT_BEEP;

            // Transition: '<S259>:40'
          }

          MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration =
            MX_Gtw_IN_Wait_For_New_Cal_fegg;
        }
        break;

       default:
        // During 'Wait_For_New_Cal': '<S259>:13'
        if (state_Console != ACTIVE) {
          // Transition: '<S259>:41'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration =
            MX_IN_Wait_For_Cal_Attempt_ouyq;
        } else {
          if (state_Engine == ENGINE_CRANKING) {
            // Transition: '<S259>:120'
            MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration =
              MX_Gtw_IN_Joystick_Powerup_cmqf;
            MX_Gtwy_Control_DWork.temporalCounter_i1_oo1t = 0U;
          }
        }
        break;
      }

      // During 'Pot_State': '<S259>:9'
      if (MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State_etsr ==
          MX_Gtwy_Control_IN_CANFault) {
        rtb_enable_CAN = NORMAL;

        // During 'CANFault': '<S259>:110'
      } else {
        // During 'CAN_OK': '<S259>:114'
        if ((int32_T)msgAge_BJM2Left > 1000) {
          // Transition: '<S259>:111'
          // Exit Internal 'CAN_OK': '<S259>:114'
          // Exit Internal 'NORMAL': '<S259>:4'
          // Exit Internal 'ACTIVE': '<S259>:105'
          MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_e41i =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;

          // Exit Internal 'Normal': '<S259>:96'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_ey2b =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_a55l =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
          MX_Gtwy_Control_DWork.bitsForTID0.is_CAN_OK =
            MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
          MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State_etsr =
            MX_Gtwy_Control_IN_CANFault;

          // Entry 'CANFault': '<S259>:110'
          rtb_enable_CAN = NORMAL;
          MX_Gtwy_Control_B.position_OffsetPotOut_kdzj = (int16_T)
            CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
        } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_CAN_OK ==
                   MX_Gtwy_Control_IN_NORMAL_dsz0) {
          // During 'NORMAL': '<S259>:4'
          if (MX_Gtwy_Control_DWork.state_OffsetPotCal_bpzc == NOT_IN_NEUTRAL) {
            // Transition: '<S259>:26'
            // Exit Internal 'NORMAL': '<S259>:4'
            // Exit Internal 'ACTIVE': '<S259>:105'
            MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_e41i =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;

            // Exit Internal 'Normal': '<S259>:96'
            MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_ey2b =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_a55l =
              MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
            MX_Gtwy_Control_DWork.bitsForTID0.is_CAN_OK =
              MX_Gtwy__IN_NOT_IN_NEUTRAL_pn4p;

            // Entry 'NOT_IN_NEUTRAL': '<S259>:8'
            rtb_enable_CAN = NOT_IN_NEUTRAL;
            MX_Gtwy_Control_B.position_OffsetPotOut_kdzj = (int16_T)
              CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
          } else if (MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_a55l ==
                     MX_Gtwy_Control_IN_ACTIVE_jsee) {
            // During 'ACTIVE': '<S259>:105'
            rtb_Sum_ajdp = (int16_T)(int32_T)((int32_T)rtb_Sum_ajdp + (int32_T)
              MX_Gtwy_Control_DWork.offset_OffsetPotCal_cil5);
            MX_Gtwy_Control_B.position_OffsetPotOut_kdzj = rtb_Sum_ajdp;
            if (MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_e41i ==
                MX_Gtwy_Control_IN_Inhibit_h4lp) {
              rtb_enable_CAN = NEUTRAL;

              // During 'Inhibit': '<S259>:97'
              if ((state_HydEnable == ACTIVE) && ((int32_T)rtb_Sum_ajdp <=
                   (int32_T)MX_Gtwy_Control_DWork.base_Threshold_a413) &&
                  ((int32_T)rtb_Sum_ajdp >= (int32_T)
                   MX_Gtwy_Control_DWork.rod_Threshold_lk5x)) {
                // Transition: '<S259>:99'
                MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_e41i =
                  MX_Gtwy_Control_IN_Normal_f1zn;

                // Entry Internal 'Normal': '<S259>:96'
                // Transition: '<S259>:31'
                MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_ey2b =
                  MX_Gtwy_Control_IN_Neutral_lud1;

                // Entry 'Neutral': '<S259>:11'
              }
            } else {
              // During 'Normal': '<S259>:96'
              if (state_HydEnable != ACTIVE) {
                // Transition: '<S259>:98'
                // Exit Internal 'Normal': '<S259>:96'
                MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_ey2b =
                  MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
                MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_e41i =
                  MX_Gtwy_Control_IN_Inhibit_h4lp;

                // Entry 'Inhibit': '<S259>:97'
                rtb_enable_CAN = NEUTRAL;
              } else {
                switch (MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_ey2b) {
                 case MX_Gtwy_Con_IN_Base_Active_fj3q:
                  rtb_enable_CAN = BASE_ACTIVE;

                  // During 'Base_Active': '<S259>:10'
                  if (((int32_T)rtb_Sum_ajdp <= (int32_T)
                       MX_Gtwy_Control_DWork.base_Threshold_a413) && ((int32_T)
                       rtb_Sum_ajdp < (int32_T)
                       MX_Gtwy_Control_DWork.rod_Threshold_lk5x)) {
                    // Transition: '<S259>:38'
                    MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_ey2b =
                      MX_Gtwy_Cont_IN_Rod_Active_obgc;

                    // Entry 'Rod_Active': '<S259>:12'
                    rtb_enable_CAN = ROD_ACTIVE;
                  } else {
                    if ((int32_T)rtb_Sum_ajdp <= (int32_T)
                        MX_Gtwy_Control_DWork.base_Threshold_a413) {
                      // Transition: '<S259>:37'
                      MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_ey2b =
                        MX_Gtwy_Control_IN_Neutral_lud1;

                      // Entry 'Neutral': '<S259>:11'
                      rtb_enable_CAN = NEUTRAL;
                    }
                  }
                  break;

                 case MX_Gtwy_Control_IN_Neutral_lud1:
                  rtb_enable_CAN = NEUTRAL;

                  // During 'Neutral': '<S259>:11'
                  if ((int32_T)rtb_Sum_ajdp < (int32_T)
                      MX_Gtwy_Control_DWork.rod_Threshold_lk5x) {
                    // Transition: '<S259>:35'
                    MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_ey2b =
                      MX_Gtwy_Cont_IN_Rod_Active_obgc;

                    // Entry 'Rod_Active': '<S259>:12'
                    rtb_enable_CAN = ROD_ACTIVE;
                  } else {
                    if ((int32_T)rtb_Sum_ajdp > (int32_T)
                        MX_Gtwy_Control_DWork.base_Threshold_a413) {
                      // Transition: '<S259>:34'
                      MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_ey2b =
                        MX_Gtwy_Con_IN_Base_Active_fj3q;

                      // Entry 'Base_Active': '<S259>:10'
                      rtb_enable_CAN = BASE_ACTIVE;
                    }
                  }
                  break;

                 default:
                  rtb_enable_CAN = ROD_ACTIVE;

                  // During 'Rod_Active': '<S259>:12'
                  if (((int32_T)rtb_Sum_ajdp >= (int32_T)
                       MX_Gtwy_Control_DWork.rod_Threshold_lk5x) && ((int32_T)
                       rtb_Sum_ajdp > (int32_T)
                       MX_Gtwy_Control_DWork.base_Threshold_a413)) {
                    // Transition: '<S259>:33'
                    MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_ey2b =
                      MX_Gtwy_Con_IN_Base_Active_fj3q;

                    // Entry 'Base_Active': '<S259>:10'
                    rtb_enable_CAN = BASE_ACTIVE;
                  } else {
                    if ((int32_T)rtb_Sum_ajdp >= (int32_T)
                        MX_Gtwy_Control_DWork.rod_Threshold_lk5x) {
                      // Transition: '<S259>:36'
                      MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_ey2b =
                        MX_Gtwy_Control_IN_Neutral_lud1;

                      // Entry 'Neutral': '<S259>:11'
                      rtb_enable_CAN = NEUTRAL;
                    }
                  }
                  break;
                }
              }
            }
          } else {
            rtb_enable_CAN = NEUTRAL;

            // During 'Inactive': '<S259>:106'
            if (MX_Gtwy_Control_DWork.state_OffsetPotCal_bpzc != INACTIVE) {
              // Transition: '<S259>:107'
              MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_a55l =
                MX_Gtwy_Control_IN_ACTIVE_jsee;

              // Entry 'ACTIVE': '<S259>:105'
              MX_Gtwy_Control_B.position_OffsetPotOut_kdzj = (int16_T)(int32_T)
                ((int32_T)rtb_Sum_ajdp + (int32_T)
                 MX_Gtwy_Control_DWork.offset_OffsetPotCal_cil5);

              // Entry Internal 'ACTIVE': '<S259>:105'
              // Transition: '<S259>:101'
              MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_e41i =
                MX_Gtwy_Control_IN_Inhibit_h4lp;

              // Entry 'Inhibit': '<S259>:97'
            }
          }
        } else {
          rtb_enable_CAN = NOT_IN_NEUTRAL;

          // During 'NOT_IN_NEUTRAL': '<S259>:8'
          if (MX_Gtwy_Control_DWork.state_OffsetPotCal_bpzc != NOT_IN_NEUTRAL) {
            // Transition: '<S259>:16'
            MX_Gtwy_Control_DWork.bitsForTID0.is_CAN_OK =
              MX_Gtwy_Control_IN_NORMAL_dsz0;

            // Entry Internal 'NORMAL': '<S259>:4'
            // Transition: '<S259>:108'
            MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_a55l =
              MX_Gtwy_Contro_IN_Inactive_e4qr;

            // Entry 'Inactive': '<S259>:106'
            rtb_enable_CAN = NEUTRAL;
            MX_Gtwy_Control_DWork.base_Threshold_a413 = (uint16_T)(int32_T)
              ((int32_T)CONSTANT_DATA->OFFSET_POT_CENTER_RATIO + (int32_T)
               CONSTANT_DATA->OFFSET_POT_DEADBAND);
            MX_Gtwy_Control_DWork.rod_Threshold_lk5x = (uint16_T)(int32_T)
              ((int32_T)CONSTANT_DATA->OFFSET_POT_CENTER_RATIO - (int32_T)
               CONSTANT_DATA->OFFSET_POT_DEADBAND);
            MX_Gtwy_Control_B.position_OffsetPotOut_kdzj = (int16_T)
              CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
          }
        }
      }
    }

    // End of Chart: '<S256>/Pot'

    // SignalConversion: '<S256>/OutportBufferForposition_OffsetPot'
    MX_Gtwy_Control_B.OutportBufferForposition_O_j4h4 =
      MX_Gtwy_Control_B.position_OffsetPotOut_kdzj;

    // SignalConversion: '<S256>/OutportBufferForstate_OffsetPot'
    MX_Gtwy_Control_B.OutportBufferForstate_Offs_nf42 = rtb_enable_CAN;
  } else {
    if (MX_Gtwy_Control_DWork.CAN_Pot_MODE) {
      // Disable for Outport: '<S256>/state_OffsetPot'
      MX_Gtwy_Control_B.OutportBufferForstate_Offs_nf42 = ((uint8_T)8U);

      // Disable for Outport: '<S256>/position_OffsetPot'
      MX_Gtwy_Control_B.OutportBufferForposition_O_j4h4 = 500;

      // Disable for Outport: '<S256>/rm_OffsetPot'
      MX_Gtwy_Control_B.DataTypeConversion1 = ((uint16_T)500U);
      MX_Gtwy_Control_DWork.CAN_Pot_MODE = false;
    }
  }

  // End of Outputs for SubSystem: '<S91>/CAN_Pot'

  // Outputs for Enabled SubSystem: '<S91>/Normal_Pot' incorporates:
  //   EnablePort: '<S257>/Enable'

  if ((int32_T)rtb_enable_Normal > 0) {
    if (!MX_Gtwy_Control_DWork.Normal_Pot_MODE) {
      // SystemReset for Chart: '<S257>/Pot'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration_l22u =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
      MX_Gtwy_Control_DWork.temporalCounter_i1_lftt = 0U;
      MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
      MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
      MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_p3pb =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
      MX_Gtwy_Control_DWork.bitsForTID0.is_ACTIVE_cmoc =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
      MX_Gtwy_Control_DWork.bitsForTID0.is_Normal_fmmn =
        MX_Gtwy_IN_NO_ACTIVE_CHILD_dxva;
      MX_Gtwy_Control_DWork.temporalCounter_i2_po3h = 0U;
      MX_Gtwy_Control_DWork.bitsForTID0.is_active_c45_MX_Gtwy_Control = 0U;
      MX_Gtwy_Control_DWork.offset_OffsetPotCal = 0;
      MX_Gtwy_Control_DWork.state_OffsetPotCal = 0U;
      MX_Gtwy_Control_DWork.base_Threshold = 0U;
      MX_Gtwy_Control_DWork.rod_Threshold = 0U;
      MX_Gtwy_Control_B.state_OffsetPot_myez = 0U;
      MX_Gtwy_Control_B.position_OffsetPotOut = 0;
      MX_Gtwy_Control_DWork.Normal_Pot_MODE = true;
    }

    // Gain: '<S261>/Gain' incorporates:
    //   Inport: '<Root>/ain_OffsetPot'
    //   Inport: '<Root>/ain_SensorSupply2'
    //   Product: '<S261>/Product'

    MX_Gtwy_Control_B.Gain = (uint16_T)(uint32_T)((uint32_T)((uint32_T)
      CONSTANT_DATA->OFFSET_POT_RATIO_GAIN * (uint32_T)(uint16_T)((uint32_T)
      ain_SensorSupply2 == 0U ? MAX_uint32_T : (uint32_T)((uint32_T)((uint32_T)
      ain_OffsetPot << 15) / (uint32_T)ain_SensorSupply2))) >> 15);

    // DataTypeConversion: '<S257>/Data Type Conversion'
    rtb_Sum_ajdp = (int16_T)MX_Gtwy_Control_B.Gain;

    // Chart: '<S257>/Pot'
    // Gateway: MX_Gtwy_Control/Inputs/Offset_Pot/Normal_Pot/Pot
    if ((uint32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_lftt < 63U) {
      MX_Gtwy_Control_DWork.temporalCounter_i1_lftt = (uint8_T)(int32_T)
        ((int32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_lftt + 1);
    }

    if ((uint32_T)MX_Gtwy_Control_DWork.temporalCounter_i2_po3h < 255U) {
      MX_Gtwy_Control_DWork.temporalCounter_i2_po3h = (uint8_T)(int32_T)
        ((int32_T)MX_Gtwy_Control_DWork.temporalCounter_i2_po3h + 1);
    }

    // During: MX_Gtwy_Control/Inputs/Offset_Pot/Normal_Pot/Pot
    if ((uint32_T)
        MX_Gtwy_Control_DWork.bitsForTID0.is_active_c45_MX_Gtwy_Control == 0U) {
      // Entry: MX_Gtwy_Control/Inputs/Offset_Pot/Normal_Pot/Pot
      MX_Gtwy_Control_DWork.bitsForTID0.is_active_c45_MX_Gtwy_Control = 1U;

      // Entry Internal: MX_Gtwy_Control/Inputs/Offset_Pot/Normal_Pot/Pot
      // Entry Internal 'Pot_Calibration': '<S260>:2'
      // Transition: '<S260>:42'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration_l22u =
        MX_Gtwy_Contr_IN_InitDelay_kynr;
      MX_Gtwy_Control_DWork.temporalCounter_i1_lftt = 0U;

      // Entry 'InitDelay': '<S260>:14'
      MX_Gtwy_Control_DWork.state_OffsetPotCal = INACTIVE;
      MX_Gtwy_Control_DWork.offset_OffsetPotCal = 0;

      // Entry Internal 'Pot_State': '<S260>:9'
      // Transition: '<S260>:115'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State =
        MX_Gtwy_Contr_IN_Supply_OK_d41k;

      // Entry Internal 'Supply_OK': '<S260>:114'
      // Transition: '<S260>:43'
      MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK =
        MX_Gtwy_Control_IN_NORMAL_dsz0;

      // Entry Internal 'NORMAL': '<S260>:4'
      // Transition: '<S260>:108'
      MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_p3pb =
        MX_Gtwy_Contro_IN_Inactive_e4qr;

      // Entry 'Inactive': '<S260>:106'
      MX_Gtwy_Control_B.state_OffsetPot_myez = NEUTRAL;
      MX_Gtwy_Control_DWork.base_Threshold = (uint16_T)(int32_T)((int32_T)
        CONSTANT_DATA->OFFSET_POT_CENTER_RATIO - (int32_T)
        CONSTANT_DATA->OFFSET_POT_DEADBAND);
      MX_Gtwy_Control_DWork.rod_Threshold = (uint16_T)(int32_T)((int32_T)
        CONSTANT_DATA->OFFSET_POT_CENTER_RATIO + (int32_T)
        CONSTANT_DATA->OFFSET_POT_DEADBAND);
      MX_Gtwy_Control_B.position_OffsetPotOut = (int16_T)
        CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
    } else {
      // During 'Pot_Calibration': '<S260>:2'
      switch (MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration_l22u) {
       case MX_Gtwy_Contr_IN_InitDelay_kynr:
        // During 'InitDelay': '<S260>:14'
        if (MX_Gtwy_Control_DWork.temporalCounter_i1_lftt >=
            MX_Gtwy_Control_ONE_SECOND_dcgq) {
          // Transition: '<S260>:27'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration_l22u =
            MX_IN_Wait_For_Cal_Attempt_pvij;
        }
        break;

       case MX_IN_Wait_For_Cal_Attempt_pvij:
        // During 'Wait_For_Cal_Attempt': '<S260>:1'
        if ((state_Console == ACTIVE) && (state_Engine != ENGINE_CRANKING) &&
            (MX_Gtwy_Control_B.state_OffsetPot_myez != OORL) &&
            (MX_Gtwy_Control_B.state_OffsetPot_myez != OORH) &&
            (MX_Gtwy_Control_B.RateTransition56 == NORMAL)) {
          // Transition: '<S260>:28'
          if (((int32_T)rtb_Sum_ajdp >= (int32_T)
               CONSTANT_DATA->OFFSET_POT_CAL_DEADBAND_LOW) && ((int32_T)
               rtb_Sum_ajdp <= (int32_T)
               CONSTANT_DATA->OFFSET_POT_CAL_DEADBAND_HIGH)) {
            // Transition: '<S260>:29'
            // Transition: '<S260>:32'
            MX_Gtwy_Control_DWork.state_OffsetPotCal = NORMAL;
            MX_Gtwy_Control_DWork.offset_OffsetPotCal = (int16_T)(int32_T)
              ((int32_T)(int16_T)CONSTANT_DATA->OFFSET_POT_CENTER_RATIO -
               (int32_T)rtb_Sum_ajdp);

            // Transition: '<S260>:39'
          } else {
            // Transition: '<S260>:30'
            MX_Gtwy_Control_DWork.state_OffsetPotCal = NOT_IN_NEUTRAL;
            MX_Gtwy_Control_DWork.offset_OffsetPotCal = 0;
            state_Buzzer = TRIPLE_SHORT_BEEP;

            // Transition: '<S260>:40'
          }

          MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration_l22u =
            MX_Gtw_IN_Wait_For_New_Cal_nrzh;
        }
        break;

       default:
        // During 'Wait_For_New_Cal': '<S260>:13'
        if ((state_Console != ACTIVE) || (state_Engine == ENGINE_CRANKING) ||
            (MX_Gtwy_Control_B.RateTransition56 != NORMAL)) {
          // Transition: '<S260>:41'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_Calibration_l22u =
            MX_IN_Wait_For_Cal_Attempt_pvij;
        }
        break;
      }

      // During 'Pot_State': '<S260>:9'
      if (MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State ==
          MX_Gtwy_Con_IN_SupplyFault_jnks) {
        MX_Gtwy_Control_B.state_OffsetPot_myez = NORMAL;

        // During 'SupplyFault': '<S260>:110'
        if (MX_Gtwy_Control_B.RateTransition56 == NORMAL) {
          // Transition: '<S260>:112'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Pot_State =
            MX_Gtwy_Contr_IN_Supply_OK_d41k;

          // Entry Internal 'Supply_OK': '<S260>:114'
          // Transition: '<S260>:43'
          MX_Gtwy_Control_DWork.bitsForTID0.is_Supply_OK =
            MX_Gtwy_Control_IN_NORMAL_dsz0;

          // Entry Internal 'NORMAL': '<S260>:4'
          // Transition: '<S260>:108'
          MX_Gtwy_Control_DWork.bitsForTID0.is_NORMAL_p3pb =
            MX_Gtwy_Contro_IN_Inactive_e4qr;

          // Entry 'Inactive': '<S260>:106'
          MX_Gtwy_Control_B.state_OffsetPot_myez = NEUTRAL;
          MX_Gtwy_Control_DWork.base_Threshold = (uint16_T)(int32_T)((int32_T)
            CONSTANT_DATA->OFFSET_POT_CENTER_RATIO - (int32_T)
            CONSTANT_DATA->OFFSET_POT_DEADBAND);
          MX_Gtwy_Control_DWork.rod_Threshold = (uint16_T)(int32_T)((int32_T)
            CONSTANT_DATA->OFFSET_POT_CENTER_RATIO + (int32_T)
            CONSTANT_DATA->OFFSET_POT_DEADBAND);
          MX_Gtwy_Control_B.position_OffsetPotOut = (int16_T)
            CONSTANT_DATA->OFFSET_POT_CENTER_RATIO;
        }
      } else {
        MX_Gtwy_Control_Supply_OK_asxw(&rtb_Sum_ajdp);
      }
    }

    // End of Chart: '<S257>/Pot'

    // SignalConversion: '<S257>/OutportBufferForposition_OffsetPot'
    MX_Gtwy_Control_B.OutportBufferForposition_Offset =
      MX_Gtwy_Control_B.position_OffsetPotOut;

    // SignalConversion: '<S257>/OutportBufferForstate_OffsetPot'
    MX_Gtwy_Control_B.OutportBufferForstate_OffsetPot =
      MX_Gtwy_Control_B.state_OffsetPot_myez;
  } else {
    if (MX_Gtwy_Control_DWork.Normal_Pot_MODE) {
      // Disable for Outport: '<S257>/state_OffsetPot'
      MX_Gtwy_Control_B.OutportBufferForstate_OffsetPot = ((uint8_T)8U);

      // Disable for Outport: '<S257>/position_OffsetPot'
      MX_Gtwy_Control_B.OutportBufferForposition_Offset = 500;

      // Disable for Outport: '<S257>/rm_OffsetPot'
      MX_Gtwy_Control_B.Gain = ((uint16_T)500U);
      MX_Gtwy_Control_DWork.Normal_Pot_MODE = false;
    }
  }

  // End of Outputs for SubSystem: '<S91>/Normal_Pot'

  // MultiPortSwitch: '<S91>/Multiport Switch'
  if ((int32_T)rtb_select_Position == 0) {
    state_OffsetPot = MX_Gtwy_Control_B.OutportBufferForstate_OffsetPot;
  } else {
    state_OffsetPot = MX_Gtwy_Control_B.OutportBufferForstate_Offs_nf42;
  }

  // End of MultiPortSwitch: '<S91>/Multiport Switch'

  // MultiPortSwitch: '<S91>/Multiport Switch2'
  if ((int32_T)rtb_select_Position == 0) {
    rm_OffsetPot = MX_Gtwy_Control_B.Gain;
  } else {
    rm_OffsetPot = MX_Gtwy_Control_B.DataTypeConversion1;
  }

  // End of MultiPortSwitch: '<S91>/Multiport Switch2'

  // MultiPortSwitch: '<S91>/Multiport Switch1'
  if ((int32_T)rtb_select_Position == 0) {
    // DataTypeConversion: '<S91>/Data Type Conversion3'
    u0 = (uint16_T)MX_Gtwy_Control_B.OutportBufferForposition_Offset;
  } else {
    // DataTypeConversion: '<S91>/Data Type Conversion3'
    u0 = (uint16_T)MX_Gtwy_Control_B.OutportBufferForposition_O_j4h4;
  }

  // End of MultiPortSwitch: '<S91>/Multiport Switch1'

  // Saturate: '<S91>/Saturation'
  if (u0 < ((uint16_T)1000U)) {
    position_OffsetPot = u0;
  } else {
    position_OffsetPot = ((uint16_T)1000U);
  }

  // End of Saturate: '<S91>/Saturation'
}

// System initialize for atomic system: '<S3>/SensorSupply1'
void MX_Gtwy_Cont_SensorSupply1_Init(void)
{
  // SystemInitialize for Chart: '<S92>/Sensor_Supply1_State'
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_azpu =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_kosr;
  MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_kibn =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_kosr;
  MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_jg0o =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_kosr;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c3_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_c3_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_kosr;
  MX_Gtwy_Control_DWork.debounceCount_a3wc = 0U;
  state_SensorSupply1 = 0U;
}

// Output and update for atomic system: '<S3>/SensorSupply1'
void MX_Gtwy_Control_SensorSupply1(void)
{
  // Chart: '<S92>/Sensor_Supply1_State'
  // Gateway: MX_Gtwy_Control/Inputs/SensorSupply1/Sensor_Supply1_State
  // During: MX_Gtwy_Control/Inputs/SensorSupply1/Sensor_Supply1_State
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID1.is_active_c3_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/SensorSupply1/Sensor_Supply1_State
    MX_Gtwy_Control_DWork.bitsForTID1.is_active_c3_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/SensorSupply1/Sensor_Supply1_State 
    // Transition: '<S262>:18'
    MX_Gtwy_Control_DWork.bitsForTID1.is_c3_MX_Gtwy_Control =
      MX_Gtwy__IN_NON_FUNCTIONAL_k34w;

    // Entry 'NON_FUNCTIONAL': '<S262>:1'
    state_SensorSupply1 = NORMAL;
  } else {
    switch (MX_Gtwy_Control_DWork.bitsForTID1.is_c3_MX_Gtwy_Control) {
     case MX_Gtwy__IN_NON_FUNCTIONAL_k34w:
      state_SensorSupply1 = NORMAL;

      // During 'NON_FUNCTIONAL': '<S262>:1'
      if (CONSTANT_DATA->SENSOR_SUPPLY1_FUNCTION != NON_FUNCTIONAL) {
        // Transition: '<S262>:11'
        MX_Gtwy_Control_DWork.bitsForTID1.is_c3_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_NORMAL_e0of;

        // Entry Internal 'NORMAL': '<S262>:2'
        // Transition: '<S262>:21'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_azpu =
          MX_Gtwy_Contro_IN_Debounce_grb0;

        // Entry 'Debounce': '<S262>:6'
        MX_Gtwy_Control_DWork.debounceCount_a3wc = 0U;
      }
      break;

     case MX_Gtwy_Control_IN_NORMAL_e0of:
      // During 'NORMAL': '<S262>:2'
      if ((MX_Gtwy_Control_B.RateTransition24 <=
           CONSTANT_DATA->SENSOR_SUPPLY1_OORL) && ((uint32_T)
           MX_Gtwy_Control_B.UnitDelay7 >= (uint32_T)((uint32_T)
            CONSTANT_DATA->VBATTERY_LOW << 8))) {
        // Transition: '<S262>:13'
        // Exit Internal 'NORMAL': '<S262>:2'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_azpu =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_kosr;
        MX_Gtwy_Control_DWork.bitsForTID1.is_c3_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_OORL_fezd;

        // Entry Internal 'OORL': '<S262>:5'
        // Transition: '<S262>:22'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_jg0o =
          MX_Gtwy_Contro_IN_Debounce_grb0;

        // Entry 'Debounce': '<S262>:4'
        MX_Gtwy_Control_DWork.debounceCount_a3wc = 0U;
      } else if (MX_Gtwy_Control_B.RateTransition24 >=
                 CONSTANT_DATA->SENSOR_SUPPLY1_OORH) {
        // Transition: '<S262>:15'
        // Exit Internal 'NORMAL': '<S262>:2'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_azpu =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_kosr;
        MX_Gtwy_Control_DWork.bitsForTID1.is_c3_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_OORH_eazn;

        // Entry Internal 'OORH': '<S262>:8'
        // Transition: '<S262>:20'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_kibn =
          MX_Gtwy_Contro_IN_Debounce_grb0;

        // Entry 'Debounce': '<S262>:9'
        MX_Gtwy_Control_DWork.debounceCount_a3wc = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_azpu ==
                 MX_Gtwy_Contro_IN_Debounce_grb0) {
        // During 'Debounce': '<S262>:6'
        if (((MX_Gtwy_Control_DWork.debounceCount_a3wc >=
              CONSTANT_DATA->SENSOR_SUPPLY1_DEBOUNCE_NORMAL) &&
             (CONSTANT_DATA->SENSOR_SUPPLY1_DEBOUNCE_NORMAL != UNLIMITED)) ||
            (state_SensorSupply1 == NORMAL)) {
          // Transition: '<S262>:19'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_azpu =
            MX_Gtwy_Control_IN_NORMAL_e0of;

          // Entry 'NORMAL': '<S262>:7'
          state_SensorSupply1 = NORMAL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_a3wc = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_a3wc + 1);
        }
      } else {
        state_SensorSupply1 = NORMAL;

        // During 'NORMAL': '<S262>:7'
      }
      break;

     case MX_Gtwy_Control_IN_OORH_eazn:
      // During 'OORH': '<S262>:8'
      if (MX_Gtwy_Control_B.RateTransition24 <
          CONSTANT_DATA->SENSOR_SUPPLY1_OORH) {
        // Transition: '<S262>:14'
        // Exit Internal 'OORH': '<S262>:8'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_kibn =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_kosr;
        MX_Gtwy_Control_DWork.bitsForTID1.is_c3_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_NORMAL_e0of;

        // Entry Internal 'NORMAL': '<S262>:2'
        // Transition: '<S262>:21'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_azpu =
          MX_Gtwy_Contro_IN_Debounce_grb0;

        // Entry 'Debounce': '<S262>:6'
        MX_Gtwy_Control_DWork.debounceCount_a3wc = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_kibn ==
                 MX_Gtwy_Contro_IN_Debounce_grb0) {
        // During 'Debounce': '<S262>:9'
        if ((MX_Gtwy_Control_DWork.debounceCount_a3wc >=
             CONSTANT_DATA->SENSOR_SUPPLY1_DEBOUNCE_OORH) ||
            (state_SensorSupply1 == OORH)) {
          // Transition: '<S262>:17'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_kibn =
            MX_Gtwy_Control_IN_OORH_eaznn;

          // Entry 'OORH': '<S262>:10'
          state_SensorSupply1 = OORH;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_a3wc = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_a3wc + 1);
        }
      } else {
        state_SensorSupply1 = OORH;

        // During 'OORH': '<S262>:10'
      }
      break;

     default:
      // During 'OORL': '<S262>:5'
      if ((MX_Gtwy_Control_B.RateTransition24 >
           CONSTANT_DATA->SENSOR_SUPPLY1_OORL) || ((uint32_T)
           MX_Gtwy_Control_B.UnitDelay7 < (uint32_T)((uint32_T)
            CONSTANT_DATA->VBATTERY_LOW << 8))) {
        // Transition: '<S262>:12'
        // Exit Internal 'OORL': '<S262>:5'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_jg0o =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_kosr;
        MX_Gtwy_Control_DWork.bitsForTID1.is_c3_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_NORMAL_e0of;

        // Entry Internal 'NORMAL': '<S262>:2'
        // Transition: '<S262>:21'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_azpu =
          MX_Gtwy_Contro_IN_Debounce_grb0;

        // Entry 'Debounce': '<S262>:6'
        MX_Gtwy_Control_DWork.debounceCount_a3wc = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_jg0o ==
                 MX_Gtwy_Contro_IN_Debounce_grb0) {
        // During 'Debounce': '<S262>:4'
        if ((MX_Gtwy_Control_DWork.debounceCount_a3wc >=
             CONSTANT_DATA->SENSOR_SUPPLY1_DEBOUNCE_OORL) ||
            (state_SensorSupply1 == OORL)) {
          // Transition: '<S262>:16'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_jg0o =
            MX_Gtwy_Control_IN_NORMAL_e0of;

          // Entry 'NORMAL': '<S262>:3'
          state_SensorSupply1 = OORL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_a3wc = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_a3wc + 1);
        }
      } else {
        state_SensorSupply1 = OORL;

        // During 'NORMAL': '<S262>:3'
      }
      break;
    }
  }

  // End of Chart: '<S92>/Sensor_Supply1_State'
}

// System initialize for atomic system: '<S3>/SensorSupply2'
void MX_Gtwy_Cont_SensorSupply2_Init(void)
{
  // SystemInitialize for Chart: '<S93>/Sensor_Supply2_State'
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dvzq =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_akpc;
  MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_ilg4 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_akpc;
  MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_ah34 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_akpc;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c9_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_c9_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_akpc;
  MX_Gtwy_Control_DWork.debounceCount_aehf = 0U;
  state_SensorSupply2 = 0U;
}

// Output and update for atomic system: '<S3>/SensorSupply2'
void MX_Gtwy_Control_SensorSupply2(void)
{
  // Chart: '<S93>/Sensor_Supply2_State'
  // Gateway: MX_Gtwy_Control/Inputs/SensorSupply2/Sensor_Supply2_State
  // During: MX_Gtwy_Control/Inputs/SensorSupply2/Sensor_Supply2_State
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID1.is_active_c9_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/SensorSupply2/Sensor_Supply2_State
    MX_Gtwy_Control_DWork.bitsForTID1.is_active_c9_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/SensorSupply2/Sensor_Supply2_State 
    // Transition: '<S263>:18'
    MX_Gtwy_Control_DWork.bitsForTID1.is_c9_MX_Gtwy_Control =
      MX_Gtwy__IN_NON_FUNCTIONAL_bnp4;

    // Entry 'NON_FUNCTIONAL': '<S263>:1'
    state_SensorSupply2 = NORMAL;
  } else {
    switch (MX_Gtwy_Control_DWork.bitsForTID1.is_c9_MX_Gtwy_Control) {
     case MX_Gtwy__IN_NON_FUNCTIONAL_bnp4:
      state_SensorSupply2 = NORMAL;

      // During 'NON_FUNCTIONAL': '<S263>:1'
      if (CONSTANT_DATA->SENSOR_SUPPLY2_FUNCTION != NON_FUNCTIONAL) {
        // Transition: '<S263>:11'
        MX_Gtwy_Control_DWork.bitsForTID1.is_c9_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_NORMAL_kbzo;

        // Entry Internal 'NORMAL': '<S263>:2'
        // Transition: '<S263>:21'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dvzq =
          MX_Gtwy_Contro_IN_Debounce_cpzi;

        // Entry 'Debounce': '<S263>:6'
        MX_Gtwy_Control_DWork.debounceCount_aehf = 0U;
      }
      break;

     case MX_Gtwy_Control_IN_NORMAL_kbzo:
      // During 'NORMAL': '<S263>:2'
      if ((MX_Gtwy_Control_B.RateTransition15 <=
           CONSTANT_DATA->SENSOR_SUPPLY2_OORL) && ((uint32_T)
           MX_Gtwy_Control_B.UnitDelay7 > (uint32_T)((uint32_T)
            CONSTANT_DATA->VBATTERY_LOW << 8))) {
        // Transition: '<S263>:13'
        // Exit Internal 'NORMAL': '<S263>:2'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dvzq =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_akpc;
        MX_Gtwy_Control_DWork.bitsForTID1.is_c9_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_OORL_jitz;

        // Entry Internal 'OORL': '<S263>:5'
        // Transition: '<S263>:22'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_ah34 =
          MX_Gtwy_Contro_IN_Debounce_cpzi;

        // Entry 'Debounce': '<S263>:4'
        MX_Gtwy_Control_DWork.debounceCount_aehf = 0U;
      } else if (MX_Gtwy_Control_B.RateTransition15 >=
                 CONSTANT_DATA->SENSOR_SUPPLY2_OORH) {
        // Transition: '<S263>:15'
        // Exit Internal 'NORMAL': '<S263>:2'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dvzq =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_akpc;
        MX_Gtwy_Control_DWork.bitsForTID1.is_c9_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_OORH_ocrf;

        // Entry Internal 'OORH': '<S263>:8'
        // Transition: '<S263>:20'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_ilg4 =
          MX_Gtwy_Contro_IN_Debounce_cpzi;

        // Entry 'Debounce': '<S263>:9'
        MX_Gtwy_Control_DWork.debounceCount_aehf = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dvzq ==
                 MX_Gtwy_Contro_IN_Debounce_cpzi) {
        // During 'Debounce': '<S263>:6'
        if (((MX_Gtwy_Control_DWork.debounceCount_aehf >=
              CONSTANT_DATA->SENSOR_SUPPLY2_DEBOUNCE_NORMAL) &&
             (CONSTANT_DATA->SENSOR_SUPPLY2_DEBOUNCE_NORMAL != UNLIMITED)) ||
            (state_SensorSupply2 == NORMAL)) {
          // Transition: '<S263>:19'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dvzq =
            MX_Gtwy_Control_IN_NORMAL_kbzo;

          // Entry 'NORMAL': '<S263>:7'
          state_SensorSupply2 = NORMAL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_aehf = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_aehf + 1);
        }
      } else {
        state_SensorSupply2 = NORMAL;

        // During 'NORMAL': '<S263>:7'
      }
      break;

     case MX_Gtwy_Control_IN_OORH_ocrf:
      // During 'OORH': '<S263>:8'
      if (MX_Gtwy_Control_B.RateTransition15 <
          CONSTANT_DATA->SENSOR_SUPPLY2_OORH) {
        // Transition: '<S263>:14'
        // Exit Internal 'OORH': '<S263>:8'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_ilg4 =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_akpc;
        MX_Gtwy_Control_DWork.bitsForTID1.is_c9_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_NORMAL_kbzo;

        // Entry Internal 'NORMAL': '<S263>:2'
        // Transition: '<S263>:21'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dvzq =
          MX_Gtwy_Contro_IN_Debounce_cpzi;

        // Entry 'Debounce': '<S263>:6'
        MX_Gtwy_Control_DWork.debounceCount_aehf = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_ilg4 ==
                 MX_Gtwy_Contro_IN_Debounce_cpzi) {
        // During 'Debounce': '<S263>:9'
        if ((MX_Gtwy_Control_DWork.debounceCount_aehf >=
             CONSTANT_DATA->SENSOR_SUPPLY2_DEBOUNCE_OORH) ||
            (state_SensorSupply2 == OORH)) {
          // Transition: '<S263>:17'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OORH_ilg4 =
            MX_Gtwy_Control_IN_OORH_ocrfr;

          // Entry 'OORH': '<S263>:10'
          state_SensorSupply2 = OORH;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_aehf = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_aehf + 1);
        }
      } else {
        state_SensorSupply2 = OORH;

        // During 'OORH': '<S263>:10'
      }
      break;

     default:
      // During 'OORL': '<S263>:5'
      if ((MX_Gtwy_Control_B.RateTransition15 >
           CONSTANT_DATA->SENSOR_SUPPLY2_OORL) || ((uint32_T)
           MX_Gtwy_Control_B.UnitDelay7 < (uint32_T)((uint32_T)
            CONSTANT_DATA->VBATTERY_LOW << 8))) {
        // Transition: '<S263>:12'
        // Exit Internal 'OORL': '<S263>:5'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_ah34 =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_akpc;
        MX_Gtwy_Control_DWork.bitsForTID1.is_c9_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_NORMAL_kbzo;

        // Entry Internal 'NORMAL': '<S263>:2'
        // Transition: '<S263>:21'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_dvzq =
          MX_Gtwy_Contro_IN_Debounce_cpzi;

        // Entry 'Debounce': '<S263>:6'
        MX_Gtwy_Control_DWork.debounceCount_aehf = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_ah34 ==
                 MX_Gtwy_Contro_IN_Debounce_cpzi) {
        // During 'Debounce': '<S263>:4'
        if ((MX_Gtwy_Control_DWork.debounceCount_aehf >=
             CONSTANT_DATA->SENSOR_SUPPLY2_DEBOUNCE_OORL) ||
            (state_SensorSupply2 == OORL)) {
          // Transition: '<S263>:16'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_ah34 =
            MX_Gtwy_Control_IN_NORMAL_kbzo;

          // Entry 'NORMAL': '<S263>:3'
          state_SensorSupply2 = OORL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_aehf = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_aehf + 1);
        }
      } else {
        state_SensorSupply2 = OORL;

        // During 'NORMAL': '<S263>:3'
      }
      break;
    }
  }

  // End of Chart: '<S93>/Sensor_Supply2_State'
}

// System initialize for atomic system: '<S3>/Throttle'
void MX_Gtwy_Control_Throttle_Init(void)
{
  uint16_T rtb_fltValue_out;

  // SystemInitialize for Atomic SubSystem: '<S265>/Remove_OOR_Levels'
  MX_Gtwy__Remove_OOR_Levels_Init(&rtb_fltValue_out,
    &MX_Gtwy_Control_DWork.Remove_OOR_Levels_nn1q);

  // End of SystemInitialize for SubSystem: '<S265>/Remove_OOR_Levels'

  // SystemInitialize for Atomic SubSystem: '<S265>/LP_Filter_Adj_Gain'
  MX_Gtwy_LP_Filter_Adj_Gain_Init(&MX_Gtwy_Control_B.Output_cgto,
    &MX_Gtwy_Control_DWork.LP_Filter_Adj_Gain_c3ul);

  // End of SystemInitialize for SubSystem: '<S265>/LP_Filter_Adj_Gain'

  // SystemInitialize for Atomic SubSystem: '<S265>/LP_Filter_Adj_Gain1'
  MX_Gtwy_LP_Filter_Adj_Gain_Init(&MX_Gtwy_Control_B.Output_bhhk,
    &MX_Gtwy_Control_DWork.LP_Filter_Adj_Gain1_o302);

  // End of SystemInitialize for SubSystem: '<S265>/LP_Filter_Adj_Gain1'

  // SystemInitialize for Chart: '<S94>/Throttle_Pos'
  MX_Gtwy_Control_DWork.bitsForTID1.is_THROTTLE_POSITION =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_mumz;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_c5jm =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_mumz;
  MX_Gtwy_Control_DWork.bitsForTID1.is_THROTTLE_PRIMARY =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_mumz;
  MX_Gtwy_Control_DWork.bitsForTID1.is_DEBOUNCE_NORMAL =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_mumz;
  MX_Gtwy_Control_DWork.bitsForTID1.is_OORH = MX_Gtwy_IN_NO_ACTIVE_CHILD_mumz;
  MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_i33c =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_mumz;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c39_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.debouncePrimary = 0U;
  state_ThrottlePrimary = 0U;
  pos_ThrottlePrimary = 0U;
  derate_Throttle = 0U;
  MX_Gtwy_Control_B.percent_Throttle_pqmy = 0U;

  // SystemInitialize for Chart: '<S264>/Throttle_Limiter'
  MX_Gtwy_Control_DWork.temporalCounter_i1_fomj = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c15_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_c15_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_mumz;
  percent_Throttle = 0U;
}

// Output and update for atomic system: '<S3>/Throttle'
void MX_Gtwy_Control_Throttle(void)
{
  boolean_T rtb_Compare_fnzk;
  uint16_T rtb_Switch2;
  uint16_T rtb_Switch1;
  uint16_T rtb_fltValue_out;
  int16_T rtb_ratiometric;
  uint16_T rtb_fltRatio;
  uint16_T rtb_data_Ratio[2];
  uint16_T rtb_data_Output[2];
  uint16_T rtb_Saturation;
  int16_T rtb_DataTypeConversion5;

  // Outputs for Atomic SubSystem: '<S265>/Ratiometric_Converter'
  MX_Gtwy_C_Ratiometric_Converter(MX_Gtwy_Control_B.RateTransition16,
    MX_Gtwy_Control_B.RateTransition34, &rtb_Saturation,
    CONSTANT_DATA->THROTTLE_PRIMARY_RATIO_MULTIPLIER);

  // End of Outputs for SubSystem: '<S265>/Ratiometric_Converter'

  // Outputs for Atomic SubSystem: '<S265>/Remove_OOR_Levels'
  MX_Gtwy_Contr_Remove_OOR_Levels(rtb_Saturation, &rtb_fltValue_out,
    &MX_Gtwy_Control_DWork.Remove_OOR_Levels_nn1q, ((uint16_T)950U), ((uint16_T)
    50U));

  // End of Outputs for SubSystem: '<S265>/Remove_OOR_Levels'

  // DataTypeConversion: '<S265>/Data Type Conversion2'
  rtb_ratiometric = (int16_T)rtb_fltValue_out;

  // Outputs for Atomic SubSystem: '<S265>/LP_Filter_Adj_Gain'

  // Constant: '<S265>/FILTER_GAIN'
  MX_Gtwy_Cont_LP_Filter_Adj_Gain(CONSTANT_DATA->THROTTLE_PRIMARY_FILTER_GAIN,
    rtb_ratiometric, &MX_Gtwy_Control_B.Output_cgto,
    &MX_Gtwy_Control_DWork.LP_Filter_Adj_Gain_c3ul);

  // End of Outputs for SubSystem: '<S265>/LP_Filter_Adj_Gain'

  // DataTypeConversion: '<S265>/Data Type Conversion1'
  rtb_fltRatio = (uint16_T)(int32_T)(MX_Gtwy_Control_B.Output_cgto >> 16);

  // SignalConversion: '<S265>/TmpSignal ConversionAtLookup Table DynamicInport2' incorporates:
  //   Constant: '<S265>/THROTTLE_RATIO_HIGH'
  //   Constant: '<S265>/THROTTLE_RATIO_LOW'

  rtb_data_Ratio[0] = CONSTANT_DATA->THROTTLE_PRI_RATIO_LOW;
  rtb_data_Ratio[1] = CONSTANT_DATA->THROTTLE_PRI_RATIO_HIGH;

  // RelationalOperator: '<S268>/Compare' incorporates:
  //   Constant: '<S265>/THROTTLE_RETRACTED1'
  //   Constant: '<S268>/Constant'

  rtb_Compare_fnzk = (CONSTANT_DATA->CAN_THROTTLE_REVERSE == NON_FUNCTIONAL);

  // Switch: '<S265>/Switch' incorporates:
  //   Constant: '<S265>/THROTTLE_OUTPUT_HIGH1'
  //   Constant: '<S265>/filter_level1'

  if ((int32_T)MX_Gtwy_Control_B.RateTransition63 != 0) {
    rtb_Switch2 = CONSTANT_DATA->ECO_MODE_THROTTLE_REDUCTION;
  } else {
    rtb_Switch2 = ((uint16_T)0U);
  }

  // End of Switch: '<S265>/Switch'

  // Sum: '<S265>/Sum' incorporates:
  //   Constant: '<S265>/THROTTLE_OUTPUT_HIGH'

  rtb_Switch2 = (uint16_T)(int32_T)((int32_T)
    CONSTANT_DATA->THROTTLE_PRI_OUTPUT_HIGH - (int32_T)rtb_Switch2);

  // Switch: '<S265>/Switch1' incorporates:
  //   Constant: '<S265>/THROTTLE_OUTPUT_LOW'

  if (rtb_Compare_fnzk) {
    rtb_Switch1 = CONSTANT_DATA->THROTTLE_PRI_OUTPUT_LOW;
  } else {
    rtb_Switch1 = rtb_Switch2;
  }

  // End of Switch: '<S265>/Switch1'

  // Switch: '<S265>/Switch2' incorporates:
  //   Constant: '<S265>/THROTTLE_OUTPUT_LOW'

  if (rtb_Compare_fnzk) {
  } else {
    rtb_Switch2 = CONSTANT_DATA->THROTTLE_PRI_OUTPUT_LOW;
  }

  // End of Switch: '<S265>/Switch2'

  // SignalConversion: '<S265>/TmpSignal ConversionAtLookup Table DynamicInport3' 
  rtb_data_Output[0] = rtb_Switch1;
  rtb_data_Output[1] = rtb_Switch2;

  // S-Function (sfix_look1_dyn): '<S265>/Lookup Table Dynamic'
  // Dynamic Look-Up Table Block: '<S265>/Lookup Table Dynamic'
  //  Input0  Data Type:  Integer        U16
  //  Input1  Data Type:  Integer        U16
  //  Input2  Data Type:  Integer        U16
  //  Output0 Data Type:  Integer        U16
  //  Lookup Method: Linear_Endpoint
  //

  LookUp_U16_U16( &(pos_ThrottlePrimary_In), &rtb_data_Output[0], rtb_fltRatio,
                 &rtb_data_Ratio[0], 1U);

  // DataTypeConversion: '<S265>/Data Type Conversion5'
  rtb_DataTypeConversion5 = (int16_T)rtb_Saturation;

  // Outputs for Atomic SubSystem: '<S265>/LP_Filter_Adj_Gain1'

  // Constant: '<S265>/filter_level'
  MX_Gtwy_Cont_LP_Filter_Adj_Gain(((uint8_T)3U), rtb_DataTypeConversion5,
    &MX_Gtwy_Control_B.Output_bhhk,
    &MX_Gtwy_Control_DWork.LP_Filter_Adj_Gain1_o302);

  // End of Outputs for SubSystem: '<S265>/LP_Filter_Adj_Gain1'

  // DataTypeConversion: '<S265>/Data Type Conversion4'
  rm_ThrottlePrimary = (uint16_T)(int32_T)(MX_Gtwy_Control_B.Output_bhhk >> 16);

  // Chart: '<S94>/Throttle_Pos'
  // Gateway: MX_Gtwy_Control/Inputs/Throttle/Throttle_Pos
  // During: MX_Gtwy_Control/Inputs/Throttle/Throttle_Pos
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID1.is_active_c39_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/Throttle/Throttle_Pos
    MX_Gtwy_Control_DWork.bitsForTID1.is_active_c39_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/Throttle/Throttle_Pos
    // Entry Internal 'THROTTLE_PRIMARY': '<S266>:57'
    // Transition: '<S266>:91'
    MX_Gtwy_Control_DWork.bitsForTID1.is_THROTTLE_PRIMARY =
      MX_Gtwy__IN_NON_FUNCTIONAL_frbm;

    // Entry 'NON_FUNCTIONAL': '<S266>:61'
    state_ThrottlePrimary = NORMAL;
    pos_ThrottlePrimary = 0U;

    // Entry Internal 'THROTTLE_POSITION': '<S266>:59'
    // Transition: '<S266>:469'
    MX_Gtwy_Control_DWork.bitsForTID1.is_THROTTLE_POSITION =
      MX_Gtwy_Contro_IN_NORMAL_eevhsg;

    // Entry Internal 'NORMAL': '<S266>:468'
    // Transition: '<S266>:453'
    MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_c5jm = MX_Gtwy_Control_IN_VALID;

    // Entry 'VALID': '<S266>:452'
    derate_Throttle = 100U;
  } else {
    // During 'THROTTLE_PRIMARY': '<S266>:57'
    switch (MX_Gtwy_Control_DWork.bitsForTID1.is_THROTTLE_PRIMARY) {
     case MX_Gtwy_IN_DEBOUNCE_NORMAL_fswz:
      // During 'DEBOUNCE_NORMAL': '<S266>:92'
      if (state_ThrottlePrimary == NORMAL) {
        // Transition: '<S266>:97'
        // Exit Internal 'DEBOUNCE_NORMAL': '<S266>:92'
        MX_Gtwy_Control_DWork.bitsForTID1.is_DEBOUNCE_NORMAL =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_mumz;
        MX_Gtwy_Control_DWork.bitsForTID1.is_THROTTLE_PRIMARY =
          MX_Gtwy_Control_IN_NORMAL_eevh;

        // Entry 'NORMAL': '<S266>:62'
        state_ThrottlePrimary = NORMAL;
        pos_ThrottlePrimary = pos_ThrottlePrimary_In;
      } else if (rm_ThrottlePrimary >= CONSTANT_DATA->THROTTLE_PRIMARY_OORH) {
        // Transition: '<S266>:179'
        // Exit Internal 'DEBOUNCE_NORMAL': '<S266>:92'
        MX_Gtwy_Control_DWork.bitsForTID1.is_DEBOUNCE_NORMAL =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_mumz;
        MX_Gtwy_Control_DWork.bitsForTID1.is_THROTTLE_PRIMARY =
          MX_Gtwy_Control_IN_OORH_icau;

        // Entry Internal 'OORH': '<S266>:81'
        // Transition: '<S266>:82'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORH =
          MX_Gtwy_Contro_IN_DEBOUNCE_pvl0;

        // Entry 'DEBOUNCE': '<S266>:84'
        MX_Gtwy_Control_DWork.debouncePrimary = 0U;
      } else if (rm_ThrottlePrimary <= CONSTANT_DATA->THROTTLE_PRIMARY_OORL) {
        // Transition: '<S266>:178'
        // Exit Internal 'DEBOUNCE_NORMAL': '<S266>:92'
        MX_Gtwy_Control_DWork.bitsForTID1.is_DEBOUNCE_NORMAL =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_mumz;
        MX_Gtwy_Control_DWork.bitsForTID1.is_THROTTLE_PRIMARY =
          MX_Gtwy_Control_IN_OORL_eaz2;

        // Entry Internal 'OORL': '<S266>:76'
        // Transition: '<S266>:77'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_i33c =
          MX_Gtwy_Contro_IN_DEBOUNCE_pvl0;

        // Entry 'DEBOUNCE': '<S266>:79'
        MX_Gtwy_Control_DWork.debouncePrimary = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_DEBOUNCE_NORMAL ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_pvl0) {
        // During 'DEBOUNCE': '<S266>:95'
        if ((CONSTANT_DATA->THROTTLE_PRIMARY_DEBOUNCE_NORMAL != UNLIMITED) &&
            (MX_Gtwy_Control_DWork.debouncePrimary >=
             CONSTANT_DATA->THROTTLE_PRIMARY_DEBOUNCE_NORMAL)) {
          // Transition: '<S266>:94'
          MX_Gtwy_Control_DWork.bitsForTID1.is_DEBOUNCE_NORMAL =
            MX_Gtwy_Control_IN_NORMAL_eevhs;

          // Entry 'NORMAL': '<S266>:96'
          state_ThrottlePrimary = NORMAL;
        } else {
          MX_Gtwy_Control_DWork.debouncePrimary = (uint16_T)(int32_T)((int32_T)
            MX_Gtwy_Control_DWork.debouncePrimary + 1);
        }
      } else {
        state_ThrottlePrimary = NORMAL;

        // During 'NORMAL': '<S266>:96'
      }
      break;

     case MX_Gtwy__IN_NON_FUNCTIONAL_frbm:
      state_ThrottlePrimary = NORMAL;

      // During 'NON_FUNCTIONAL': '<S266>:61'
      if (CONSTANT_DATA->THROTTLE_PRIMARY_FUNCTION != NON_FUNCTIONAL) {
        // Transition: '<S266>:86'
        MX_Gtwy_Control_DWork.bitsForTID1.is_THROTTLE_PRIMARY =
          MX_Gtwy_Control_IN_NORMAL_eevh;

        // Entry 'NORMAL': '<S266>:62'
        pos_ThrottlePrimary = pos_ThrottlePrimary_In;
      }
      break;

     case MX_Gtwy_Control_IN_NORMAL_eevh:
      state_ThrottlePrimary = NORMAL;

      // During 'NORMAL': '<S266>:62'
      if ((rm_ThrottlePrimary >= CONSTANT_DATA->THROTTLE_PRIMARY_OORH) &&
          (state_SensorSupply2 == NORMAL)) {
        // Transition: '<S266>:89'
        MX_Gtwy_Control_DWork.bitsForTID1.is_THROTTLE_PRIMARY =
          MX_Gtwy_Control_IN_OORH_icau;

        // Entry Internal 'OORH': '<S266>:81'
        // Transition: '<S266>:82'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORH =
          MX_Gtwy_Contro_IN_DEBOUNCE_pvl0;

        // Entry 'DEBOUNCE': '<S266>:84'
        MX_Gtwy_Control_DWork.debouncePrimary = 0U;
      } else if ((rm_ThrottlePrimary <= CONSTANT_DATA->THROTTLE_PRIMARY_OORL) &&
                 (state_SensorSupply2 == NORMAL)) {
        // Transition: '<S266>:87'
        MX_Gtwy_Control_DWork.bitsForTID1.is_THROTTLE_PRIMARY =
          MX_Gtwy_Control_IN_OORL_eaz2;

        // Entry Internal 'OORL': '<S266>:76'
        // Transition: '<S266>:77'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_i33c =
          MX_Gtwy_Contro_IN_DEBOUNCE_pvl0;

        // Entry 'DEBOUNCE': '<S266>:79'
        MX_Gtwy_Control_DWork.debouncePrimary = 0U;
      } else {
        pos_ThrottlePrimary = pos_ThrottlePrimary_In;
      }
      break;

     case MX_Gtwy_Control_IN_OORH_icau:
      // During 'OORH': '<S266>:81'
      if ((rm_ThrottlePrimary < CONSTANT_DATA->THROTTLE_PRIMARY_OORH) ||
          (state_SensorSupply2 != NORMAL)) {
        // Transition: '<S266>:90'
        // Exit Internal 'OORH': '<S266>:81'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORH =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_mumz;
        MX_Gtwy_Control_DWork.bitsForTID1.is_THROTTLE_PRIMARY =
          MX_Gtwy_IN_DEBOUNCE_NORMAL_fswz;

        // Entry Internal 'DEBOUNCE_NORMAL': '<S266>:92'
        // Transition: '<S266>:93'
        MX_Gtwy_Control_DWork.bitsForTID1.is_DEBOUNCE_NORMAL =
          MX_Gtwy_Contro_IN_DEBOUNCE_pvl0;

        // Entry 'DEBOUNCE': '<S266>:95'
        MX_Gtwy_Control_DWork.debouncePrimary = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_OORH ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_pvl0) {
        // During 'DEBOUNCE': '<S266>:84'
        if ((MX_Gtwy_Control_DWork.debouncePrimary >=
             CONSTANT_DATA->THROTTLE_PRIMARY_DEBOUNCE_OORH) ||
            (state_ThrottlePrimary == OORH)) {
          // Transition: '<S266>:83'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OORH =
            MX_Gtwy_Control_IN_NORMAL_eevhs;

          // Entry 'NORMAL': '<S266>:85'
          state_ThrottlePrimary = OORH;
          pos_ThrottlePrimary = 0U;
        } else {
          MX_Gtwy_Control_DWork.debouncePrimary = (uint16_T)(int32_T)((int32_T)
            MX_Gtwy_Control_DWork.debouncePrimary + 1);
        }
      } else {
        state_ThrottlePrimary = OORH;

        // During 'NORMAL': '<S266>:85'
      }
      break;

     default:
      // During 'OORL': '<S266>:76'
      if ((rm_ThrottlePrimary > CONSTANT_DATA->THROTTLE_PRIMARY_OORL) ||
          (state_SensorSupply2 != NORMAL)) {
        // Transition: '<S266>:88'
        // Exit Internal 'OORL': '<S266>:76'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_i33c =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_mumz;
        MX_Gtwy_Control_DWork.bitsForTID1.is_THROTTLE_PRIMARY =
          MX_Gtwy_IN_DEBOUNCE_NORMAL_fswz;

        // Entry Internal 'DEBOUNCE_NORMAL': '<S266>:92'
        // Transition: '<S266>:93'
        MX_Gtwy_Control_DWork.bitsForTID1.is_DEBOUNCE_NORMAL =
          MX_Gtwy_Contro_IN_DEBOUNCE_pvl0;

        // Entry 'DEBOUNCE': '<S266>:95'
        MX_Gtwy_Control_DWork.debouncePrimary = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_i33c ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_pvl0) {
        // During 'DEBOUNCE': '<S266>:79'
        if ((MX_Gtwy_Control_DWork.debouncePrimary >=
             CONSTANT_DATA->THROTTLE_PRIMARY_DEBOUNCE_OORL) ||
            (state_ThrottlePrimary == OORL)) {
          // Transition: '<S266>:78'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OORL_i33c =
            MX_Gtwy_Control_IN_NORMAL_eevhs;

          // Entry 'NORMAL': '<S266>:80'
          state_ThrottlePrimary = OORL;
          pos_ThrottlePrimary = 0U;
        } else {
          MX_Gtwy_Control_DWork.debouncePrimary = (uint16_T)(int32_T)((int32_T)
            MX_Gtwy_Control_DWork.debouncePrimary + 1);
        }
      } else {
        state_ThrottlePrimary = OORL;

        // During 'NORMAL': '<S266>:80'
      }
      break;
    }

    // During 'THROTTLE_POSITION': '<S266>:59'
    if (MX_Gtwy_Control_DWork.bitsForTID1.is_THROTTLE_POSITION ==
        MX_Gtwy_Contro_IN_NORMAL_eevhsg) {
      // During 'NORMAL': '<S266>:468'
      if (MX_Gtwy_Control_B.RateTransition8_k12u == (int32_T)ACTIVE) {
        // Transition: '<S266>:471'
        // Exit Internal 'NORMAL': '<S266>:468'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_c5jm =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_mumz;
        MX_Gtwy_Control_DWork.bitsForTID1.is_THROTTLE_POSITION =
          MX_Gtwy_Control_IN_PARKED_REGEN;

        // Entry 'PARKED_REGEN': '<S266>:470'
        MX_Gtwy_Control_B.percent_Throttle_pqmy = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_c5jm ==
                 MX_Gtwy_Control_IN_NO_THROTTLE) {
        derate_Throttle = CONSTANT_DATA->THROTTLE_FAULT_DERATE;

        // During 'NO_THROTTLE': '<S266>:449'
        if ((state_ThrottlePrimary == NORMAL) && (state_SensorSupply2 == NORMAL))
        {
          // Transition: '<S266>:458'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_c5jm =
            MX_Gtwy_Control_IN_VALID;

          // Entry 'VALID': '<S266>:452'
          derate_Throttle = 100U;
        }
      } else {
        derate_Throttle = 100U;

        // During 'VALID': '<S266>:452'
        if ((state_ThrottlePrimary != NORMAL) || (state_SensorSupply2 != NORMAL))
        {
          // Transition: '<S266>:456'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_c5jm =
            MX_Gtwy_Control_IN_NO_THROTTLE;

          // Entry 'NO_THROTTLE': '<S266>:449'
          MX_Gtwy_Control_B.percent_Throttle_pqmy = (uint16_T)(int32_T)((int32_T)
            CONSTANT_DATA->THROTTLE_FAULT_DERATE * 10);

          //  Value is percent (0 to 1000), mulitply by 10 to get correct resolution 
          derate_Throttle = CONSTANT_DATA->THROTTLE_FAULT_DERATE;
        } else {
          MX_Gtwy_Control_B.percent_Throttle_pqmy = pos_ThrottlePrimary;

          // No Derate
        }
      }
    } else {
      // During 'PARKED_REGEN': '<S266>:470'
      if (MX_Gtwy_Control_B.RateTransition8_k12u == (int32_T)INACTIVE) {
        // Transition: '<S266>:472'
        MX_Gtwy_Control_DWork.bitsForTID1.is_THROTTLE_POSITION =
          MX_Gtwy_Contro_IN_NORMAL_eevhsg;

        // Entry Internal 'NORMAL': '<S266>:468'
        // Transition: '<S266>:453'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_c5jm =
          MX_Gtwy_Control_IN_VALID;

        // Entry 'VALID': '<S266>:452'
        derate_Throttle = 100U;
      }
    }
  }

  // End of Chart: '<S94>/Throttle_Pos'

  // Chart: '<S264>/Throttle_Limiter'
  // Gateway: MX_Gtwy_Control/Inputs/Throttle/FastTravelThrottleLimit/Throttle_Limiter 
  if ((uint32_T)MX_Gtwy_Control_DWork.temporalCounter_i1_fomj < 65535U) {
    MX_Gtwy_Control_DWork.temporalCounter_i1_fomj = (uint16_T)(int32_T)((int32_T)
      MX_Gtwy_Control_DWork.temporalCounter_i1_fomj + 1);
  }

  // During: MX_Gtwy_Control/Inputs/Throttle/FastTravelThrottleLimit/Throttle_Limiter 
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID1.is_active_c15_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/Throttle/FastTravelThrottleLimit/Throttle_Limiter 
    MX_Gtwy_Control_DWork.bitsForTID1.is_active_c15_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/Throttle/FastTravelThrottleLimit/Throttle_Limiter 
    // Transition: '<S267>:31'
    MX_Gtwy_Control_DWork.bitsForTID1.is_c15_MX_Gtwy_Control =
      MX_Gtwy_Contr_IN_Non_Functional;

    // Entry 'Non_Functional': '<S267>:30'
    percent_Throttle = MX_Gtwy_Control_B.percent_Throttle_pqmy;
  } else {
    switch (MX_Gtwy_Control_DWork.bitsForTID1.is_c15_MX_Gtwy_Control) {
     case MX_Gtwy_Contro_IN_Debounce_nllm:
      // During 'Debounce': '<S267>:2'
      if ((int32_T)MX_Gtwy_Control_B.RateTransition6 >= 512) {
        // Transition: '<S267>:4'
        MX_Gtwy_Control_DWork.bitsForTID1.is_c15_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_Traveling;

        // Entry 'Traveling': '<S267>:1'
        percent_Throttle = MX_Gtwy_Control_B.percent_Throttle_pqmy;
      } else if (MX_Gtwy_Control_DWork.temporalCounter_i1_fomj >=
                 CONSTANT_DATA->FAST_TRAVEL_THROTTLE_DELAY) {
        // Transition: '<S267>:6'
        MX_Gtwy_Control_DWork.bitsForTID1.is_c15_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_In_Neutral;
      } else {
        percent_Throttle = MX_Gtwy_Control_B.percent_Throttle_pqmy;
      }
      break;

     case MX_Gtwy_Control_IN_In_Neutral:
      // During 'In_Neutral': '<S267>:5'
      if ((int32_T)MX_Gtwy_Control_B.RateTransition6 >= 512) {
        // Transition: '<S267>:7'
        MX_Gtwy_Control_DWork.bitsForTID1.is_c15_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_Traveling;

        // Entry 'Traveling': '<S267>:1'
        percent_Throttle = MX_Gtwy_Control_B.percent_Throttle_pqmy;
      } else {
        // Transition: '<S267>:18'
        if (MX_Gtwy_Control_B.percent_Throttle_pqmy >
            CONSTANT_DATA->FAST_TRAVEL_THROTTLE_LIMIT) {
          // Transition: '<S267>:19'
          // Transition: '<S267>:25'
          percent_Throttle = CONSTANT_DATA->FAST_TRAVEL_THROTTLE_LIMIT;

          // Transition: '<S267>:26'
        } else {
          // Transition: '<S267>:21'
          percent_Throttle = MX_Gtwy_Control_B.percent_Throttle_pqmy;
        }

        // Transition: '<S267>:28'
      }
      break;

     case MX_Gtwy_Contr_IN_Non_Functional:
      // During 'Non_Functional': '<S267>:30'
      if (CONSTANT_DATA->FAST_TRAVEL_FUNCTION != NON_FUNCTIONAL) {
        // Transition: '<S267>:15'
        MX_Gtwy_Control_DWork.bitsForTID1.is_c15_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_In_Neutral;
      } else {
        percent_Throttle = MX_Gtwy_Control_B.percent_Throttle_pqmy;
      }
      break;

     default:
      // During 'Traveling': '<S267>:1'
      if ((int32_T)MX_Gtwy_Control_B.RateTransition6 < 512) {
        // Transition: '<S267>:3'
        MX_Gtwy_Control_DWork.bitsForTID1.is_c15_MX_Gtwy_Control =
          MX_Gtwy_Contro_IN_Debounce_nllm;
        MX_Gtwy_Control_DWork.temporalCounter_i1_fomj = 0U;

        // Entry 'Debounce': '<S267>:2'
        percent_Throttle = MX_Gtwy_Control_B.percent_Throttle_pqmy;
      } else {
        percent_Throttle = MX_Gtwy_Control_B.percent_Throttle_pqmy;
      }
      break;
    }
  }

  // End of Chart: '<S264>/Throttle_Limiter'
}

//
//  System initialize for atomic system:
//     '<S276>/LP_Fitler_Adj_Gain'
//     '<S277>/LP_Fitler_Adj_Gain'

void MX_Gtwy_LP_Fitler_Adj_Gain_Init(int32_T *rty_Output,
  rtDW_LP_Fitler_Adj_Gain_MX_Gtwy *localDW)
{
  localDW->bitsForTID1.is_active_c12_MX_Gtwy_Control = 0U;
  localDW->bitsForTID1.is_c12_MX_Gtwy_Control = MX_Gtwy_IN_NO_ACTIVE_CHILD_a4gb;
  *rty_Output = 0;
}

//
//  Output and update for atomic system:
//     '<S276>/LP_Fitler_Adj_Gain'
//     '<S277>/LP_Fitler_Adj_Gain'

void MX_Gtwy_Cont_LP_Fitler_Adj_Gain(uint8_T rtu_Gain, int16_T rtu_Input,
  int32_T *rty_Output, rtDW_LP_Fitler_Adj_Gain_MX_Gtwy *localDW)
{
  // Chart: '<S276>/LP_Fitler_Adj_Gain'
  // Gateway: MX_Gtwy_Control/Inputs/VBattery/LP_Filter_Adj_Gain/LP_Fitler_Adj_Gain 
  // During: MX_Gtwy_Control/Inputs/VBattery/LP_Filter_Adj_Gain/LP_Fitler_Adj_Gain 
  if ((uint32_T)localDW->bitsForTID1.is_active_c12_MX_Gtwy_Control == 0U) {
    // Entry: MX_Gtwy_Control/Inputs/VBattery/LP_Filter_Adj_Gain/LP_Fitler_Adj_Gain 
    localDW->bitsForTID1.is_active_c12_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/VBattery/LP_Filter_Adj_Gain/LP_Fitler_Adj_Gain 
    // Transition: '<S279>:3'
    localDW->bitsForTID1.is_c12_MX_Gtwy_Control =
      MX_Gtwy_Control_IN_INITIAL_effc;

    // Entry 'INITIAL': '<S279>:1'
    *rty_Output = (int32_T)((int32_T)rtu_Input << 8);
  } else if (localDW->bitsForTID1.is_c12_MX_Gtwy_Control ==
             MX_Gtwy_Control_IN_INITIAL_effc) {
    // During 'INITIAL': '<S279>:1'
    // Transition: '<S279>:4'
    localDW->bitsForTID1.is_c12_MX_Gtwy_Control =
      MX_Gtwy_Contr_IN_LP_FILTER_k1me;
  } else {
    // During 'LP_FILTER': '<S279>:2'
    *rty_Output += div_s32((int32_T)((int32_T)((int32_T)rtu_Input << 8) -
      *rty_Output), (int32_T)(1 << (int32_T)rtu_Gain));
  }

  // End of Chart: '<S276>/LP_Fitler_Adj_Gain'
}

// Function for Chart: '<S95>/VBattery_State'
static void MX_Gtwy_Control_NORMAL_f3er(void)
{
  // During 'NORMAL': '<S278>:12'
  if ((uint32_T)calc_VBattery <= (uint32_T)((uint32_T)
       CONSTANT_DATA->VBATTERY_OORL << 8)) {
    // Transition: '<S278>:28'
    // Exit Internal 'NORMAL': '<S278>:12'
    // Exit Internal 'ALTERNATOR_HIGH': '<S278>:24'
    MX_Gtwy_Control_DWork.bitsForTID1.is_ALTERNATOR_HIGH =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
    MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;

    // Exit Internal 'ALTERNATOR_LOW': '<S278>:21'
    MX_Gtwy_Control_DWork.bitsForTID1.is_ALTERNATOR_LOW =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;

    // Exit Internal 'EXTREMELY_HIGH': '<S278>:18'
    MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;

    // Exit Internal 'EXTREMELY_LOW': '<S278>:10'
    MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;

    // Exit Internal 'HIGH': '<S278>:7'
    MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH = MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;

    // Exit Internal 'LOW': '<S278>:17'
    MX_Gtwy_Control_DWork.bitsForTID1.is_LOW = MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;

    // Exit Internal 'NORMAL': '<S278>:5'
    MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_avx0 =
      MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
    MX_Gtwy_Control_DWork.bitsForTID1.is_c13_MX_Gtwy_Control =
      MX_Gtwy_Control_IN_OORL_n1b0;

    // Entry Internal 'OORL': '<S278>:15'
    // Transition: '<S278>:37'
    MX_Gtwy_Control_DWork.bitsForTID1.is_OORL = MX_Gtwy_Contro_IN_DEBOUNCE_OORL;

    // Entry 'DEBOUNCE_OORL': '<S278>:13'
    MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
  } else {
    switch (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy) {
     case MX_Gtwy_Cont_IN_ALTERNATOR_HIGH:
      // During 'ALTERNATOR_HIGH': '<S278>:24'
      if (((int32_T)(uint32_T)((uint32_T)calc_VBattery >> 4) < (int32_T)
           ((int32_T)((int32_T)CONSTANT_DATA->ALTERNATOR_HIGH << 4) - (int32_T)
            CONSTANT_DATA->VOLTAGE_HYSTERESIS)) ||
          (MX_Gtwy_Control_B.RateTransition20 <
           CONSTANT_DATA->ALTERNATOR_ALARM_ENGINE_SPEED)) {
        // Transition: '<S278>:59'
        // Exit Internal 'ALTERNATOR_HIGH': '<S278>:24'
        MX_Gtwy_Control_DWork.bitsForTID1.is_ALTERNATOR_HIGH =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy_Control_IN_NORMAL_bs1ue;

        // Entry Internal 'NORMAL': '<S278>:5'
        // Transition: '<S278>:36'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_avx0 =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:11'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if ((uint32_T)calc_VBattery >= (uint32_T)((uint32_T)
                  CONSTANT_DATA->VBATTERY_EXTREMELY_HIGH << 8)) {
        // Transition: '<S278>:62'
        // Exit Internal 'ALTERNATOR_HIGH': '<S278>:24'
        MX_Gtwy_Control_DWork.bitsForTID1.is_ALTERNATOR_HIGH =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy__IN_EXTREMELY_HIGH_mwoj;

        // Entry Internal 'EXTREMELY_HIGH': '<S278>:18'
        // Transition: '<S278>:49'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:19'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_ALTERNATOR_HIGH ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_fulw) {
        // During 'DEBOUNCE': '<S278>:25'
        if (MX_Gtwy_Control_DWork.debounceCount_fgwe >=
            CONSTANT_DATA->ALTERNATOR_DEBOUNCE_HIGH) {
          // Transition: '<S278>:55'
          MX_Gtwy_Control_DWork.bitsForTID1.is_ALTERNATOR_HIGH =
            MX_Gtwy_Control_IN_HIGH_mgfkm;

          // Entry 'HIGH': '<S278>:26'
          state_Alternator = HIGH;
          state_VBattery = NORMAL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_fgwe = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_fgwe + 1);
        }
      } else {
        state_Alternator = HIGH;
        state_VBattery = NORMAL;

        // During 'HIGH': '<S278>:26'
      }
      break;

     case MX_Gtwy_Contr_IN_ALTERNATOR_LOW:
      // During 'ALTERNATOR_LOW': '<S278>:21'
      if (((int32_T)(uint32_T)((uint32_T)calc_VBattery >> 4) > (int32_T)
           ((int32_T)((int32_T)CONSTANT_DATA->ALTERNATOR_LOW << 4) + (int32_T)
            CONSTANT_DATA->VOLTAGE_HYSTERESIS)) ||
          (MX_Gtwy_Control_B.RateTransition20 <
           CONSTANT_DATA->ALTERNATOR_ALARM_ENGINE_SPEED)) {
        // Transition: '<S278>:57'
        // Exit Internal 'ALTERNATOR_LOW': '<S278>:21'
        MX_Gtwy_Control_DWork.bitsForTID1.is_ALTERNATOR_LOW =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy_Control_IN_NORMAL_bs1ue;

        // Entry Internal 'NORMAL': '<S278>:5'
        // Transition: '<S278>:36'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_avx0 =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:11'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if ((uint32_T)calc_VBattery <= (uint32_T)((uint32_T)
                  CONSTANT_DATA->VBATTERY_EXTREMELY_LOW << 8)) {
        // Transition: '<S278>:61'
        // Exit Internal 'ALTERNATOR_LOW': '<S278>:21'
        MX_Gtwy_Control_DWork.bitsForTID1.is_ALTERNATOR_LOW =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy_C_IN_EXTREMELY_LOW_agev;

        // Entry Internal 'EXTREMELY_LOW': '<S278>:10'
        // Transition: '<S278>:51'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:6'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_ALTERNATOR_LOW ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_fulw) {
        // During 'DEBOUNCE': '<S278>:22'
        if (MX_Gtwy_Control_DWork.debounceCount_fgwe >=
            CONSTANT_DATA->ALTERNATOR_DEBOUNCE_LOW) {
          // Transition: '<S278>:53'
          MX_Gtwy_Control_DWork.bitsForTID1.is_ALTERNATOR_LOW =
            MX_Gtwy_Control_IN_LOW_bgvct;

          // Entry 'LOW': '<S278>:23'
          state_Alternator = LOW;
          state_VBattery = NORMAL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_fgwe = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_fgwe + 1);
        }
      } else {
        state_Alternator = LOW;
        state_VBattery = NORMAL;

        // During 'LOW': '<S278>:23'
      }
      break;

     case MX_Gtwy__IN_EXTREMELY_HIGH_mwoj:
      // During 'EXTREMELY_HIGH': '<S278>:18'
      if (((int32_T)(uint32_T)((uint32_T)calc_VBattery >> 4) < (int32_T)
           ((int32_T)((int32_T)CONSTANT_DATA->VBATTERY_EXTREMELY_HIGH << 4) -
            (int32_T)CONSTANT_DATA->VOLTAGE_HYSTERESIS)) &&
          ((CONSTANT_DATA->ALTERNATOR_FUNCTION != NON_FUNCTIONAL) &&
           (MX_Gtwy_Control_B.RateTransition20 >=
            CONSTANT_DATA->ALTERNATOR_ALARM_ENGINE_SPEED))) {
        // Transition: '<S278>:63'
        // Exit Internal 'EXTREMELY_HIGH': '<S278>:18'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy_Cont_IN_ALTERNATOR_HIGH;

        // Entry Internal 'ALTERNATOR_HIGH': '<S278>:24'
        // Transition: '<S278>:54'
        MX_Gtwy_Control_DWork.bitsForTID1.is_ALTERNATOR_HIGH =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:25'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if (((int32_T)(uint32_T)((uint32_T)calc_VBattery >> 4) < (int32_T)
                  ((int32_T)((int32_T)CONSTANT_DATA->VBATTERY_EXTREMELY_HIGH <<
                             4) - (int32_T)CONSTANT_DATA->VOLTAGE_HYSTERESIS)) &&
                 ((CONSTANT_DATA->ALTERNATOR_FUNCTION == NON_FUNCTIONAL) ||
                  (MX_Gtwy_Control_B.RateTransition20 <
                   CONSTANT_DATA->ALTERNATOR_ALARM_ENGINE_SPEED))) {
        // Transition: '<S278>:38'
        // Exit Internal 'EXTREMELY_HIGH': '<S278>:18'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy_Control_IN_HIGH_mgfk;

        // Entry Internal 'HIGH': '<S278>:7'
        // Transition: '<S278>:41'
        MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:8'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_fulw) {
        // During 'DEBOUNCE': '<S278>:19'
        if ((MX_Gtwy_Control_DWork.debounceCount_fgwe >=
             CONSTANT_DATA->VBATTERY_DEBOUNCE_EXTREMELY_HIGH) || (state_VBattery
             == EXTREMELY_HIGH)) {
          // Transition: '<S278>:31'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH =
            MX_Gtwy_IN_EXTREMELY_HIGH_mwoji;

          // Entry 'EXTREMELY_HIGH': '<S278>:20'
          state_VBattery = EXTREMELY_HIGH;
          state_Alternator = NORMAL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_fgwe = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_fgwe + 1);
        }
      } else {
        state_VBattery = EXTREMELY_HIGH;
        state_Alternator = NORMAL;

        // During 'EXTREMELY_HIGH': '<S278>:20'
      }
      break;

     case MX_Gtwy_C_IN_EXTREMELY_LOW_agev:
      // During 'EXTREMELY_LOW': '<S278>:10'
      if (((int32_T)(uint32_T)((uint32_T)calc_VBattery >> 4) > (int32_T)
           ((int32_T)((int32_T)CONSTANT_DATA->VBATTERY_EXTREMELY_LOW << 4) +
            (int32_T)CONSTANT_DATA->VOLTAGE_HYSTERESIS)) &&
          ((CONSTANT_DATA->ALTERNATOR_FUNCTION != NON_FUNCTIONAL) &&
           (MX_Gtwy_Control_B.RateTransition20 >=
            CONSTANT_DATA->ALTERNATOR_ALARM_ENGINE_SPEED))) {
        // Transition: '<S278>:60'
        // Exit Internal 'EXTREMELY_LOW': '<S278>:10'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy_Contr_IN_ALTERNATOR_LOW;

        // Entry Internal 'ALTERNATOR_LOW': '<S278>:21'
        // Transition: '<S278>:52'
        MX_Gtwy_Control_DWork.bitsForTID1.is_ALTERNATOR_LOW =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:22'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if (((int32_T)(uint32_T)((uint32_T)calc_VBattery >> 4) > (int32_T)
                  ((int32_T)((int32_T)CONSTANT_DATA->VBATTERY_EXTREMELY_LOW << 4)
                   + (int32_T)CONSTANT_DATA->VOLTAGE_HYSTERESIS)) &&
                 (MX_Gtwy_Control_B.RateTransition3_hfqm != ENGINE_CRANKING) &&
                 ((CONSTANT_DATA->ALTERNATOR_FUNCTION == NON_FUNCTIONAL) ||
                  (MX_Gtwy_Control_B.RateTransition20 <
                   CONSTANT_DATA->ALTERNATOR_ALARM_ENGINE_SPEED))) {
        // Transition: '<S278>:47'
        // Exit Internal 'EXTREMELY_LOW': '<S278>:10'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy_Control_IN_LOW_bgvc;

        // Entry Internal 'LOW': '<S278>:17'
        // Transition: '<S278>:48'
        MX_Gtwy_Control_DWork.bitsForTID1.is_LOW =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:9'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_fulw) {
        // During 'DEBOUNCE': '<S278>:6'
        if ((MX_Gtwy_Control_DWork.debounceCount_fgwe >=
             CONSTANT_DATA->VBATTERY_DEBOUNCE_EXTREMELY_LOW) || (state_VBattery ==
             EXTREMELY_LOW)) {
          // Transition: '<S278>:32'
          MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW =
            MX_Gtwy__IN_EXTREMELY_LOW_agev0;

          // Entry 'EXTREMELY_LOW': '<S278>:16'
          state_VBattery = EXTREMELY_LOW;
          state_Alternator = NORMAL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_fgwe = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_fgwe + 1);
        }
      } else {
        state_VBattery = EXTREMELY_LOW;
        state_Alternator = NORMAL;

        // During 'EXTREMELY_LOW': '<S278>:16'
      }
      break;

     case MX_Gtwy_Control_IN_HIGH_mgfk:
      // During 'HIGH': '<S278>:7'
      if ((uint32_T)calc_VBattery >= (uint32_T)((uint32_T)
           CONSTANT_DATA->VBATTERY_EXTREMELY_HIGH << 8)) {
        // Transition: '<S278>:39'
        // Exit Internal 'HIGH': '<S278>:7'
        MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy__IN_EXTREMELY_HIGH_mwoj;

        // Entry Internal 'EXTREMELY_HIGH': '<S278>:18'
        // Transition: '<S278>:49'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:19'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if ((int32_T)(uint32_T)((uint32_T)calc_VBattery >> 4) < (int32_T)
                 ((int32_T)((int32_T)CONSTANT_DATA->VBATTERY_HIGH << 4) -
                  (int32_T)CONSTANT_DATA->VOLTAGE_HYSTERESIS)) {
        // Transition: '<S278>:42'
        // Exit Internal 'HIGH': '<S278>:7'
        MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy_Control_IN_NORMAL_bs1ue;

        // Entry Internal 'NORMAL': '<S278>:5'
        // Transition: '<S278>:36'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_avx0 =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:11'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_fulw) {
        // During 'DEBOUNCE': '<S278>:8'
        if ((MX_Gtwy_Control_DWork.debounceCount_fgwe >=
             CONSTANT_DATA->VBATTERY_DEBOUNCE_HIGH) || (state_VBattery == HIGH))
        {
          // Transition: '<S278>:29'
          MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH =
            MX_Gtwy_Control_IN_HIGH_mgfkm;

          // Entry 'HIGH': '<S278>:3'
          state_VBattery = HIGH;
          state_Alternator = NORMAL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_fgwe = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_fgwe + 1);
        }
      } else {
        state_VBattery = HIGH;
        state_Alternator = NORMAL;

        // During 'HIGH': '<S278>:3'
      }
      break;

     case MX_Gtwy_Control_IN_LOW_bgvc:
      // During 'LOW': '<S278>:17'
      if (((int32_T)(uint32_T)((uint32_T)calc_VBattery >> 4) > (int32_T)
           ((int32_T)((int32_T)CONSTANT_DATA->VBATTERY_LOW << 4) + (int32_T)
            CONSTANT_DATA->VOLTAGE_HYSTERESIS)) &&
          (MX_Gtwy_Control_B.RateTransition3_hfqm != ENGINE_CRANKING)) {
        // Transition: '<S278>:45'
        // Exit Internal 'LOW': '<S278>:17'
        MX_Gtwy_Control_DWork.bitsForTID1.is_LOW =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy_Control_IN_NORMAL_bs1ue;

        // Entry Internal 'NORMAL': '<S278>:5'
        // Transition: '<S278>:36'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_avx0 =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:11'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if ((uint32_T)calc_VBattery <= (uint32_T)((uint32_T)
                  CONSTANT_DATA->VBATTERY_EXTREMELY_LOW << 8)) {
        // Transition: '<S278>:46'
        // Exit Internal 'LOW': '<S278>:17'
        MX_Gtwy_Control_DWork.bitsForTID1.is_LOW =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy_C_IN_EXTREMELY_LOW_agev;

        // Entry Internal 'EXTREMELY_LOW': '<S278>:10'
        // Transition: '<S278>:51'
        MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:6'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_LOW ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_fulw) {
        // During 'DEBOUNCE': '<S278>:9'
        if ((MX_Gtwy_Control_DWork.debounceCount_fgwe >=
             CONSTANT_DATA->VBATTERY_DEBOUNCE_LOW) || (state_VBattery == LOW)) {
          // Transition: '<S278>:34'
          MX_Gtwy_Control_DWork.bitsForTID1.is_LOW =
            MX_Gtwy_Control_IN_LOW_bgvct;

          // Entry 'LOW': '<S278>:4'
          state_VBattery = LOW;
          state_Alternator = NORMAL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_fgwe = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_fgwe + 1);
        }
      } else {
        state_VBattery = LOW;
        state_Alternator = NORMAL;

        // During 'LOW': '<S278>:4'
      }
      break;

     default:
      // During 'NORMAL': '<S278>:5'
      if ((CONSTANT_DATA->ALTERNATOR_FUNCTION != NON_FUNCTIONAL) && ((uint32_T)
           calc_VBattery <= (uint32_T)((uint32_T)CONSTANT_DATA->ALTERNATOR_LOW <<
            8)) && (MX_Gtwy_Control_B.RateTransition20 >=
                    CONSTANT_DATA->ALTERNATOR_ALARM_ENGINE_SPEED)) {
        // Transition: '<S278>:56'
        // Exit Internal 'NORMAL': '<S278>:5'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_avx0 =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy_Contr_IN_ALTERNATOR_LOW;

        // Entry Internal 'ALTERNATOR_LOW': '<S278>:21'
        // Transition: '<S278>:52'
        MX_Gtwy_Control_DWork.bitsForTID1.is_ALTERNATOR_LOW =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:22'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if ((CONSTANT_DATA->ALTERNATOR_FUNCTION != NON_FUNCTIONAL) &&
                 ((uint32_T)calc_VBattery >= (uint32_T)((uint32_T)
                   CONSTANT_DATA->ALTERNATOR_HIGH << 8)) &&
                 (MX_Gtwy_Control_B.RateTransition20 >=
                  CONSTANT_DATA->ALTERNATOR_ALARM_ENGINE_SPEED)) {
        // Transition: '<S278>:58'
        // Exit Internal 'NORMAL': '<S278>:5'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_avx0 =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy_Cont_IN_ALTERNATOR_HIGH;

        // Entry Internal 'ALTERNATOR_HIGH': '<S278>:24'
        // Transition: '<S278>:54'
        MX_Gtwy_Control_DWork.bitsForTID1.is_ALTERNATOR_HIGH =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:25'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if (((uint32_T)calc_VBattery >= (uint32_T)((uint32_T)
                   CONSTANT_DATA->VBATTERY_HIGH << 8)) &&
                 ((CONSTANT_DATA->ALTERNATOR_FUNCTION == NON_FUNCTIONAL) ||
                  (MX_Gtwy_Control_B.RateTransition20 <
                   CONSTANT_DATA->ALTERNATOR_ALARM_ENGINE_SPEED))) {
        // Transition: '<S278>:43'
        // Exit Internal 'NORMAL': '<S278>:5'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_avx0 =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy_Control_IN_HIGH_mgfk;

        // Entry Internal 'HIGH': '<S278>:7'
        // Transition: '<S278>:41'
        MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:8'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if (((uint32_T)calc_VBattery <= (uint32_T)((uint32_T)
                   CONSTANT_DATA->VBATTERY_LOW << 8)) &&
                 ((CONSTANT_DATA->ALTERNATOR_FUNCTION == NON_FUNCTIONAL) ||
                  (MX_Gtwy_Control_B.RateTransition20 <
                   CONSTANT_DATA->ALTERNATOR_ALARM_ENGINE_SPEED))) {
        // Transition: '<S278>:44'
        // Exit Internal 'NORMAL': '<S278>:5'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_avx0 =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy_Control_IN_LOW_bgvc;

        // Entry Internal 'LOW': '<S278>:17'
        // Transition: '<S278>:48'
        MX_Gtwy_Control_DWork.bitsForTID1.is_LOW =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:9'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_avx0 ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_fulw) {
        // During 'DEBOUNCE': '<S278>:11'
        if ((MX_Gtwy_Control_DWork.debounceCount_fgwe >=
             CONSTANT_DATA->VBATTERY_DEBOUNCE_NORMAL) || ((state_VBattery ==
              NORMAL) && (state_Alternator == NORMAL))) {
          // Transition: '<S278>:50'
          MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_avx0 =
            MX_Gtwy_Control_IN_NORMAL_bs1u;

          // Entry 'NORMAL': '<S278>:2'
          state_VBattery = NORMAL;
          state_Alternator = NORMAL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_fgwe = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_fgwe + 1);
        }
      } else {
        state_VBattery = NORMAL;
        state_Alternator = NORMAL;

        // During 'NORMAL': '<S278>:2'
      }
      break;
    }
  }
}

// System initialize for atomic system: '<S3>/VBattery'
void MX_Gtwy_Control_VBattery_Init(void)
{
  // SystemInitialize for Chart: '<S276>/LP_Fitler_Adj_Gain'
  MX_Gtwy_LP_Fitler_Adj_Gain_Init(&MX_Gtwy_Control_B.Output_fkzw,
    &MX_Gtwy_Control_DWork.sf_LP_Fitler_Adj_Gain);

  // SystemInitialize for Chart: '<S277>/LP_Fitler_Adj_Gain'
  MX_Gtwy_LP_Fitler_Adj_Gain_Init(&MX_Gtwy_Control_B.Output,
    &MX_Gtwy_Control_DWork.sf_LP_Fitler_Adj_Gain_hx42);

  // SystemInitialize for Chart: '<S95>/VBattery_State'
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
  MX_Gtwy_Control_DWork.bitsForTID1.is_ALTERNATOR_HIGH =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
  MX_Gtwy_Control_DWork.bitsForTID1.is_ALTERNATOR_LOW =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
  MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_HIGH =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
  MX_Gtwy_Control_DWork.bitsForTID1.is_EXTREMELY_LOW =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
  MX_Gtwy_Control_DWork.bitsForTID1.is_HIGH = MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
  MX_Gtwy_Control_DWork.bitsForTID1.is_LOW = MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
  MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_avx0 =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
  MX_Gtwy_Control_DWork.bitsForTID1.is_OORL = MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
  MX_Gtwy_Control_DWork.bitsForTID1.is_active_c13_MX_Gtwy_Control = 0U;
  MX_Gtwy_Control_DWork.bitsForTID1.is_c13_MX_Gtwy_Control =
    MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
  MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
  state_VBattery = 0U;
  state_Alternator = 0U;
}

// Output and update for atomic system: '<S3>/VBattery'
void MX_Gtwy_Control_VBattery(void)
{
  int16_T rtb_DataTypeConversion3_ecvq;
  int16_T rtb_DataTypeConversion2;
  uint32_T tmp;

  // Gain: '<S95>/Vbatt'
  tmp = (uint32_T)((uint32_T)CONSTANT_DATA->VBATTERY_GAIN * (uint32_T)
                   MX_Gtwy_Control_B.RateTransition39);
  tmp = (uint32_T)((uint32_T)(tmp >> 4) + (uint32_T)((uint32_T)(tmp & 8U) != 0U));
  if (tmp > 65535U) {
    tmp = 65535U;
  }

  // DataTypeConversion: '<S95>/Data Type Conversion3' incorporates:
  //   Gain: '<S95>/Vbatt'

  rtb_DataTypeConversion3_ecvq = (int16_T)tmp;

  // Chart: '<S276>/LP_Fitler_Adj_Gain' incorporates:
  //   Constant: '<S95>/Constant2'

  MX_Gtwy_Cont_LP_Fitler_Adj_Gain(CONSTANT_DATA->VBATTERY_FILTER_GAIN,
    rtb_DataTypeConversion3_ecvq, &MX_Gtwy_Control_B.Output_fkzw,
    &MX_Gtwy_Control_DWork.sf_LP_Fitler_Adj_Gain);

  // Product: '<S95>/Divide1' incorporates:
  //   Constant: '<S95>/Constant1'
  //   Product: '<S95>/Divide'

  calc_VBattery = (uint16_T)div_repeat_s32_near(MX_Gtwy_Control_B.Output_fkzw,
    (int32_T)(uint16_T)div_u32_near((uint32_T)((uint32_T)
    MX_Gtwy_Control_B.RateTransition11 << 10), (uint32_T)
    CONSTANT_DATA->PRECISION_REF_NOMINAL_VALUE), 2U);

  // DataTypeConversion: '<S95>/Data Type Conversion2'
  rtb_DataTypeConversion2 = (int16_T)calc_VBattery;

  // Chart: '<S277>/LP_Fitler_Adj_Gain' incorporates:
  //   Constant: '<S95>/Constant3'

  MX_Gtwy_Cont_LP_Fitler_Adj_Gain(CONSTANT_DATA->VBATTERY_FILTER_DISPLAY_GAIN,
    rtb_DataTypeConversion2, &MX_Gtwy_Control_B.Output,
    &MX_Gtwy_Control_DWork.sf_LP_Fitler_Adj_Gain_hx42);

  // DataTypeConversion: '<S95>/Data Type Conversion1'
  calcFlt_VBattery = (uint16_T)(int32_T)(MX_Gtwy_Control_B.Output >> 8);

  // Chart: '<S95>/VBattery_State'
  // Gateway: MX_Gtwy_Control/Inputs/VBattery/VBattery_State
  // During: MX_Gtwy_Control/Inputs/VBattery/VBattery_State
  if ((uint32_T)MX_Gtwy_Control_DWork.bitsForTID1.is_active_c13_MX_Gtwy_Control ==
      0U) {
    // Entry: MX_Gtwy_Control/Inputs/VBattery/VBattery_State
    MX_Gtwy_Control_DWork.bitsForTID1.is_active_c13_MX_Gtwy_Control = 1U;

    // Entry Internal: MX_Gtwy_Control/Inputs/VBattery/VBattery_State
    // Transition: '<S278>:27'
    MX_Gtwy_Control_DWork.bitsForTID1.is_c13_MX_Gtwy_Control =
      MX_Gtwy__IN_NON_FUNCTIONAL_mmil;

    // Entry 'NON_FUNCTIONAL': '<S278>:1'
    state_VBattery = NORMAL;
    state_Alternator = NORMAL;
  } else {
    switch (MX_Gtwy_Control_DWork.bitsForTID1.is_c13_MX_Gtwy_Control) {
     case MX_Gtwy__IN_NON_FUNCTIONAL_mmil:
      state_VBattery = NORMAL;
      state_Alternator = NORMAL;

      // During 'NON_FUNCTIONAL': '<S278>:1'
      if (CONSTANT_DATA->VBATTERY_FUNCTION != NON_FUNCTIONAL) {
        // Transition: '<S278>:33'
        MX_Gtwy_Control_DWork.bitsForTID1.is_c13_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_NORMAL_bs1u;

        // Entry Internal 'NORMAL': '<S278>:12'
        // Transition: '<S278>:40'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy_Control_IN_NORMAL_bs1ue;

        // Entry Internal 'NORMAL': '<S278>:5'
        // Transition: '<S278>:36'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_avx0 =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:11'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      }
      break;

     case MX_Gtwy_Control_IN_NORMAL_bs1u:
      MX_Gtwy_Control_NORMAL_f3er();
      break;

     default:
      // During 'OORL': '<S278>:15'
      if ((MX_Gtwy_Control_B.RateTransition3_hfqm != ENGINE_CRANKING) &&
          ((int32_T)(uint32_T)((uint32_T)calc_VBattery >> 4) > (int32_T)
           ((int32_T)((int32_T)CONSTANT_DATA->VBATTERY_OORL << 4) + (int32_T)
            CONSTANT_DATA->VOLTAGE_HYSTERESIS))) {
        // Transition: '<S278>:30'
        // Exit Internal 'OORL': '<S278>:15'
        MX_Gtwy_Control_DWork.bitsForTID1.is_OORL =
          MX_Gtwy_IN_NO_ACTIVE_CHILD_j3du;
        MX_Gtwy_Control_DWork.bitsForTID1.is_c13_MX_Gtwy_Control =
          MX_Gtwy_Control_IN_NORMAL_bs1u;

        // Entry Internal 'NORMAL': '<S278>:12'
        // Transition: '<S278>:40'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_p1uy =
          MX_Gtwy_Control_IN_NORMAL_bs1ue;

        // Entry Internal 'NORMAL': '<S278>:5'
        // Transition: '<S278>:36'
        MX_Gtwy_Control_DWork.bitsForTID1.is_NORMAL_avx0 =
          MX_Gtwy_Contro_IN_DEBOUNCE_fulw;

        // Entry 'DEBOUNCE': '<S278>:11'
        MX_Gtwy_Control_DWork.debounceCount_fgwe = 0U;
      } else if (MX_Gtwy_Control_DWork.bitsForTID1.is_OORL ==
                 MX_Gtwy_Contro_IN_DEBOUNCE_OORL) {
        // During 'DEBOUNCE_OORL': '<S278>:13'
        if ((MX_Gtwy_Control_DWork.debounceCount_fgwe >=
             CONSTANT_DATA->VBATTERY_DEBOUNCE_OORL) || (state_VBattery == OORL))
        {
          // Transition: '<S278>:35'
          MX_Gtwy_Control_DWork.bitsForTID1.is_OORL =
            MX_Gtwy_Control_IN_OORL_n1b0f;

          // Entry 'OORL': '<S278>:14'
          state_VBattery = OORL;
          state_Alternator = NORMAL;
        } else {
          MX_Gtwy_Control_DWork.debounceCount_fgwe = (uint16_T)(int32_T)
            ((int32_T)MX_Gtwy_Control_DWork.debounceCount_fgwe + 1);
        }
      } else {
        state_VBattery = OORL;
        state_Alternator = NORMAL;

        // During 'OORL': '<S278>:14'
      }
      break;
    }
  }

  // End of Chart: '<S95>/VBattery_State'
}

//
//  [EOF]


//
//  Copyright (c) 2009 Bobcat Company as an unpublished work.
//  All Rights Reserved.
//
//  The information contained herein is confidential property of Bobcat Company.
//  The use, copying, transfer or disclosure of such information is prohibited except
//  by express written agreement with Bobcat Company.
//
//  Code Generated by Simulink Real-Time Workshop
//
//  Simulink model                       : MX_Gtwy_Control


#ifndef RTW_HEADER_mod_Inputs_h_
#define RTW_HEADER_mod_Inputs_h_
#ifndef MX_Gtwy_Control_COMMON_INCLUDES_
# define MX_Gtwy_Control_COMMON_INCLUDES_
#include "rtwtypes.h"
#endif                                 // MX_Gtwy_Control_COMMON_INCLUDES_

#include "MX_Gtwy_Control_types.h"

// Child system includes
#include "mod_Library.h"

// Block states (auto storage) for system '<S276>/LP_Fitler_Adj_Gain'
typedef struct {
  struct {
    uint_T is_c12_MX_Gtwy_Control:2;   // '<S276>/LP_Fitler_Adj_Gain'
    uint_T is_active_c12_MX_Gtwy_Control:1;// '<S276>/LP_Fitler_Adj_Gain'
  } bitsForTID1;
} rtDW_LP_Fitler_Adj_Gain_MX_Gtwy;

extern void MX_Gtwy_Control_Truth_Table(uint8_T rtu_state, uint8_T *rty_gauge);
extern void MX_Gtwy_LP_Fitler_Adj_Gain_Init(int32_T *rty_Output,
  rtDW_LP_Fitler_Adj_Gain_MX_Gtwy *localDW);
extern void MX_Gtwy_Cont_LP_Fitler_Adj_Gain(uint8_T rtu_Gain, int16_T rtu_Input,
  int32_T *rty_Output, rtDW_LP_Fitler_Adj_Gain_MX_Gtwy *localDW);
extern void MX_Gtwy_Control_AirFilter_Init(void);
extern void MX_Gtwy_Control_AirFilter(void);
extern void MX_Gtwy_Control_Aux_Pot_Init(void);
extern void MX_Gtwy_Control_Aux_Pot(void);
extern void MX_Gtwy_Control_Buttons_Init(void);
extern void MX_Gtwy_Control_Buttons(void);
extern void MX_Gtwy_Con_Console_Sensor_Init(void);
extern void MX_Gtwy_Control_Console_Sensor(void);
extern void MX_Gtwy_Control_ECT_Init(void);
extern void MX_Gtwy_Control_ECT(void);
extern void MX_Gtwy_Control_Normal_Pot_Init(void);
extern void MX_Gtwy_Contro_Normal_Pot_Reset(void);
extern void MX_Gtwy_Cont_Normal_Pot_Disable(void);
extern void MX_Gtwy_Control_Normal_Pot(void);
extern void MX_Gtwy_Control_RightPot_Init(void);
extern void MX_Gtwy_Control_RightPot_Reset(void);
extern void MX_Gtwy_Contro_RightPot_Disable(void);
extern void MX_Gtwy_Control_RightPot(void);
extern void MX_Gtwy_Control_EOP_Init(void);
extern void MX_Gtwy_Control_EOP(void);
extern void MX_Gtwy_Control_Eco_Mode_Init(void);
extern void MX_Gtwy_Control_Eco_Mode(void);
extern void MX_Gtwy_Contro_EngineSpeed_Init(void);
extern void MX_Gtwy_Control_EngineSpeed(void);
extern void MX__Engine_Oil_Temperature_Init(void);
extern void MX_Gtwy__Engine_Oil_Temperature(void);
extern void Engine_Start_Init(void);
extern void Engine_Start(void);
extern void MX_Gtwy_Control_FuelLevel_Init(void);
extern void MX_Gtwy_Control_FuelLevel(void);
extern void MX_Gtwy_C_Fuel_Temperature_Init(void);
extern void MX_Gtwy_Contro_Fuel_Temperature(void);
extern void MX_Gtwy_Control_HCFilter1_Init(void);
extern void MX_Gtwy_Control_HCFilter1(void);
extern void MX_Gtwy_Control_HydOilTemp_Init(void);
extern void MX_Gtwy_Control_HydOilTemp(void);
extern void MX_Gtwy_Control_Joystick_Pots(void);
extern void MX_Gtwy_Control_Key_Init(void);
extern void MX_Gtwy_Control_Key(void);
extern void MX_Gtwy_Load_Moment_Sensor_Init(void);
extern void MX_Gtw_Load_Moment_Sensor_Reset(void);
extern void MX_G_Load_Moment_Sensor_Disable(void);
extern void MX_Gtwy_Cont_Load_Moment_Sensor(void);
extern void MX_Gtwy_Load_Moment_Switch_Init(void);
extern void MX_Gtw_Load_Moment_Switch_Reset(void);
extern void MX_G_Load_Moment_Switch_Disable(void);
extern void MX_Gtwy_Cont_Load_Moment_Switch(void);
extern void MX_Gtwy_Control_Load_Sense_Init(void);
extern void MX_Gtwy_Control_Load_Sense(void);
extern void MX_Gtwy_Control_Offset_Pot_Init(void);
extern void MX_Gtwy_Control_Offset_Pot(void);
extern void MX_Gtwy_Cont_SensorSupply1_Init(void);
extern void MX_Gtwy_Control_SensorSupply1(void);
extern void MX_Gtwy_Cont_SensorSupply2_Init(void);
extern void MX_Gtwy_Control_SensorSupply2(void);
extern void MX_Gtwy_Control_Throttle_Init(void);
extern void MX_Gtwy_Control_Throttle(void);
extern void MX_Gtwy_Control_VBattery_Init(void);
extern void MX_Gtwy_Control_VBattery(void);

#endif                                 // RTW_HEADER_mod_Inputs_h_

//
//  [EOF]


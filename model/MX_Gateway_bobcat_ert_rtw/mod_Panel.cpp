//
//  Copyright (c) 2009 Bobcat Company as an unpublished work.
//  All Rights Reserved.
//
//  The information contained herein is confidential property of Bobcat Company.
//  The use, copying, transfer or disclosure of such information is prohibited except
//  by express written agreement with Bobcat Company.
//
//  Code Generated by Simulink Real-Time Workshop
//
//  Simulink model                       : MX_Gateway


#include "mod_Panel.h"

// Include model header file for global data
#include "MX_Gateway.h"
#include "MX_Gateway_private.h"

// Named constants for Chart: '<S592>/AutoIdle_Indicator'
#define MX_Gate_IN_NO_ACTIVE_CHILD_iog0 ((uint8_T)0U)
#define MX_Gatew_IN_NON_FUNCTIONAL_ai25 ((uint8_T)3U)
#define MX_Gateway_IN_ACTIVE_fmsm      ((uint8_T)1U)
#define MX_Gateway_IN_Dont_Care        ((uint8_T)2U)
#define MX_Gateway_IN_ERROR_bbvn       ((uint8_T)1U)
#define MX_Gateway_IN_Functional_mdyq  ((uint8_T)2U)
#define MX_Gateway_IN_INACTIVE_g54c    ((uint8_T)2U)
#define MX_Gateway_IN_INACTIVE_g54cr   ((uint8_T)3U)

// Named constants for Chart: '<S593>/Aux1_Indicator'
#define MX_Gate_IN_NO_ACTIVE_CHILD_cgos ((uint8_T)0U)
#define MX_Gateway_IN_ACTIVE_ct3c      ((uint8_T)1U)
#define MX_Gateway_IN_FLASH            ((uint8_T)2U)
#define MX_Gateway_IN_FLASH1           ((uint8_T)3U)
#define MX_Gateway_IN_INACTIVE_clkz    ((uint8_T)4U)
#define MX_Gateway_IN_Off1             ((uint8_T)1U)
#define MX_Gateway_IN_Off_lfso         ((uint8_T)1U)
#define MX_Gateway_IN_On1              ((uint8_T)2U)
#define MX_Gateway_IN_On_fcki          ((uint8_T)2U)

// Named constants for Chart: '<S593>/Aux2_Indicator'
#define MX_Gateway_IN_DONT_CARE        ((uint8_T)2U)
#define MX_Gateway_IN_FLASH_eqyq       ((uint8_T)3U)

// Named constants for Chart: '<S594>/Backlighting'
#define MX_Gateway_IN_ACTIVE_jqay      ((uint8_T)1U)
#define MX_Gateway_IN_INACTIVE_lef2    ((uint8_T)2U)

// Named constants for Chart: '<S595>/LightIndicator'
#define MX_Gate_IN_NO_ACTIVE_CHILD_ofol ((uint8_T)0U)
#define MX_Gateway_IN_ACTIVE_flsu      ((uint8_T)1U)
#define MX_Gateway_IN_ERROR_jseg       ((uint8_T)2U)
#define MX_Gateway_IN_INACTIVE_ieoc    ((uint8_T)3U)
#define MX_Gateway_IN_INACTIVE_ieocp   ((uint8_T)2U)

// Named constants for Chart: '<S596>/Display_Type'
#define MX_Gate_IN_NO_ACTIVE_CHILD_h3fa ((uint8_T)0U)
#define MX_Gatew_IN_SERVICE_CLOCK_ALARM ((uint8_T)7U)
#define MX_Gatew_IN_SERVICE_CLOCK_RESET ((uint8_T)15U)
#define MX_Gatewa_IN_EMEA_CONTROLS_m253 ((uint8_T)2U)
#define MX_Gatewa_IN_INACTIVE_WAIT_dudm ((uint8_T)4U)
#define MX_Gateway_IN_ACTIVE_jlqb      ((uint8_T)1U)
#define MX_Gateway_IN_AUX              ((uint8_T)1U)
#define MX_Gateway_IN_Aux_Detent_Error ((uint8_T)1U)
#define MX_Gateway_IN_BATTERY_VOLTAGE  ((uint8_T)1U)
#define MX_Gateway_IN_COLD_d4sj        ((uint8_T)2U)
#define MX_Gateway_IN_DEBOUNCE_kfhl    ((uint8_T)1U)
#define MX_Gateway_IN_DELUXE_ERROR     ((uint8_T)1U)
#define MX_Gateway_IN_DELUXE_GOOD      ((uint8_T)2U)
#define MX_Gateway_IN_ECT              ((uint8_T)2U)
#define MX_Gateway_IN_ECT_al12         ((uint8_T)1U)
#define MX_Gateway_IN_EDGE             ((uint8_T)2U)
#define MX_Gateway_IN_EMEA_CONTROLS1   ((uint8_T)3U)
#define MX_Gateway_IN_ENGINE_HOURS     ((uint8_T)4U)
#define MX_Gateway_IN_ENGINE_RPM       ((uint8_T)5U)
#define MX_Gateway_IN_EOP              ((uint8_T)6U)
#define MX_Gateway_IN_ERROR_CODES      ((uint8_T)3U)
#define MX_Gateway_IN_ERROR_CODES_pycf ((uint8_T)7U)
#define MX_Gateway_IN_FACTORY          ((uint8_T)8U)
#define MX_Gateway_IN_FLASH_COLD       ((uint8_T)3U)
#define MX_Gateway_IN_GLOW_PLUGS       ((uint8_T)4U)
#define MX_Gateway_IN_HOLD             ((uint8_T)2U)
#define MX_Gateway_IN_HOT              ((uint8_T)2U)
#define MX_Gateway_IN_HOT2             ((uint8_T)9U)
#define MX_Gateway_IN_INACTIVE_bvom    ((uint8_T)3U)
#define MX_Gateway_IN_INACTIVE_bvomz   ((uint8_T)4U)
#define MX_Gateway_IN_INACTIVE_bvomzg  ((uint8_T)2U)
#define MX_Gateway_IN_JOB_CLOCK_1      ((uint8_T)10U)
#define MX_Gateway_IN_JOB_CLOCK_2      ((uint8_T)11U)
#define MX_Gateway_IN_JOB_CLOCK_RESET1 ((uint8_T)12U)
#define MX_Gateway_IN_JOB_CLOCK_RESET2 ((uint8_T)13U)
#define MX_Gateway_IN_JUMP_STATE       ((uint8_T)3U)
#define MX_Gateway_IN_KSS              ((uint8_T)1U)
#define MX_Gateway_IN_NON_SHUTDOWN     ((uint8_T)2U)
#define MX_Gateway_IN_NO_STATE         ((uint8_T)5U)
#define MX_Gateway_IN_OFFSET           ((uint8_T)6U)
#define MX_Gateway_IN_RESET_STATE      ((uint8_T)3U)
#define MX_Gateway_IN_SECOND_AUX       ((uint8_T)5U)
#define MX_Gateway_IN_SERVICE_CLOCK    ((uint8_T)14U)
#define MX_Gateway_IN_SHUTDOWN_dqeb    ((uint8_T)3U)
#define MX_Gateway_IN_VERSION          ((uint8_T)4U)
#define MX__IN_THROTTLE_CAL_DIAGNOSTICS ((uint8_T)8U)

// Named constants for Chart: '<S597>/Keyless_Ind'
#define MX_Gate_IN_NO_ACTIVE_CHILD_czmb ((uint8_T)0U)
#define MX_Gateway_IN_ACTIVE_i3z5      ((uint8_T)1U)
#define MX_Gateway_IN_FAIL             ((uint8_T)2U)
#define MX_Gateway_IN_INACTIVE_iuhb    ((uint8_T)3U)
#define MX_Gateway_IN_INACTIVE_iuhba   ((uint8_T)2U)

// Named constants for Chart: '<S599>/BatteryIcon'
#define MX_Gateway_IN_ACTIVE_ppnp      ((uint8_T)1U)
#define MX_Gateway_IN_ERROR_lt5m       ((uint8_T)2U)
#define MX_Gateway_IN_INACTIVE_dgzx    ((uint8_T)3U)

// Named constants for Chart: '<S600>/WarningIcon'
#define MX_Gateway_IN_ACTIVE_mhfl      ((uint8_T)1U)
#define MX_Gateway_IN_ERROR_nuaf       ((uint8_T)2U)
#define MX_Gateway_IN_INACTIVE_lbx3    ((uint8_T)3U)

// Named constants for Chart: '<S601>/EngineIcon'
#define MX_Gate_IN_NO_ACTIVE_CHILD_nv1a ((uint8_T)0U)
#define MX_Gateway_IN_ACTIVE_bkfs      ((uint8_T)1U)
#define MX_Gateway_IN_ERROR_imwc       ((uint8_T)1U)
#define MX_Gateway_IN_INACTIVE_ilsp    ((uint8_T)2U)
#define MX_Gateway_IN_SOLID            ((uint8_T)2U)

// Named constants for Chart: '<S602>/FuelLevel'
#define MX_Gateway_IN_ACTIVE_ninr      ((uint8_T)1U)
#define MX_Gateway_IN_INACTIVE_aifo    ((uint8_T)2U)

// Named constants for Chart: '<S603>/WarningIcon'
#define MX_Gate_IN_NO_ACTIVE_CHILD_aqm0 ((uint8_T)0U)
#define MX_Gateway_IN_ACTIVE_lz1p      ((uint8_T)1U)
#define MX_Gateway_IN_ERROR_bpuu       ((uint8_T)1U)
#define MX_Gateway_IN_INACTIVE_mgt2    ((uint8_T)2U)
#define MX_Gateway_IN_SOLID_cuaa       ((uint8_T)2U)

// Named constants for Chart: '<S604>/GlowPlugIcon'
#define MX_Gateway_IN_ACTIVE_obqu      ((uint8_T)1U)
#define MX_Gateway_IN_ERROR_lmjx       ((uint8_T)2U)
#define MX_Gateway_IN_INACTIVE_ntul    ((uint8_T)3U)

// Named constants for Chart: '<S606>/HydraulicIcon'
#define MX_Gateway_IN_ACTIVE_igzq      ((uint8_T)1U)
#define MX_Gateway_IN_ERROR_l5g0       ((uint8_T)2U)
#define MX_Gateway_IN_INACTIVE_op2o    ((uint8_T)3U)

// Named constants for Chart: '<S609>/LockoutIcons'
#define MX_Gate_IN_NO_ACTIVE_CHILD_jrfm ((uint8_T)0U)
#define MX_Gateway_IN_ACTIVE_kxp1      ((uint8_T)1U)
#define MX_Gateway_IN_ERROR_hdaa       ((uint8_T)2U)
#define MX_Gateway_IN_INACTIVE_fdmy    ((uint8_T)3U)

// Named constants for Chart: '<S610>/RPM_ICON'
#define MX_Gateway_IN_ACTIVE_mdep      ((uint8_T)1U)
#define MX_Gateway_IN_ERROR_aiwx       ((uint8_T)2U)
#define MX_Gateway_IN_INACTIVE_kbzf    ((uint8_T)3U)

// Named constants for Chart: '<S611>/Chart'
#define MX_Gateway_IN_ACTIVE_pqjc      ((uint8_T)1U)
#define MX_Gateway_IN_INACTIVE_ipmx    ((uint8_T)2U)

// Named constants for Chart: '<S613>/RabbitIcon'
#define MX_Gateway_IN_ACTIVE_hjng      ((uint8_T)1U)
#define MX_Gateway_IN_ERROR_a5ft       ((uint8_T)2U)
#define MX_Gateway_IN_INACTIVE_digz    ((uint8_T)3U)

// Forward declaration for local functions
static void MX_Gateway_SECONDARY_STATE(const boolean_T
  *FixPtRelationalOperator_ksvm);
static void MX_Gatewa_enter_internal_ACTIVE(void);
static void MX_Gateway_JOB_CLOCK_2(void);
static void MX_Gateway_JOB_CLOCK_RESET1(void);
static void MX_Gateway_JOB_CLOCK_RESET2(void);
static void MX_Gateway_SERVICE_CLOCK(void);
static void MX_Gateway_ACTIVE(void);

// System initialize for atomic system: '<S27>/AutoIdle_Ind'
void MX_Gateway_AutoIdle_Ind_Init(void)
{
  // SystemInitialize for Chart: '<S592>/AutoIdle_Indicator'
  MX_Gateway_DWork.bitsForTID2.is_ERROR_eeq1 = MX_Gate_IN_NO_ACTIVE_CHILD_iog0;
  MX_Gateway_DWork.bitsForTID2.is_Functional_jr2s =
    MX_Gate_IN_NO_ACTIVE_CHILD_iog0;
  MX_Gateway_DWork.temporalCounter_i1_g12a = 0U;
  MX_Gateway_DWork.debounceCount_ppme = 0U;

  // Chart: '<S592>/AutoIdle_Indicator'
  // Entry: MX_Gtwy_Control/PanelInterface/AutoIdle_Ind/AutoIdle_Indicator
  // Entry Internal: MX_Gtwy_Control/PanelInterface/AutoIdle_Ind/AutoIdle_Indicator 
  // Transition: '<S614>:7'
  MX_Gateway_DWork.bitsForTID2.is_c43_MX_Gateway =
    MX_Gatew_IN_NON_FUNCTIONAL_ai25;

  // Entry 'NON_FUNCTIONAL': '<S614>:6'
  ind_AutoIdle = NON_FUNCTIONAL;
}

// Output and update for atomic system: '<S27>/AutoIdle_Ind'
void MX_Gateway_AutoIdle_Ind(void)
{
  // Chart: '<S592>/AutoIdle_Indicator'
  // Gateway: MX_Gtwy_Control/PanelInterface/AutoIdle_Ind/AutoIdle_Indicator
  if ((uint32_T)MX_Gateway_DWork.temporalCounter_i1_g12a < 31U) {
    MX_Gateway_DWork.temporalCounter_i1_g12a = (uint8_T)(int32_T)((int32_T)
      MX_Gateway_DWork.temporalCounter_i1_g12a + 1);
  }

  // During: MX_Gtwy_Control/PanelInterface/AutoIdle_Ind/AutoIdle_Indicator
  switch (MX_Gateway_DWork.bitsForTID2.is_c43_MX_Gateway) {
   case MX_Gateway_IN_ERROR_bbvn:
    // During 'ERROR': '<S614>:3'
    if (eeMirror.ee_ThrottleCalState != IN_CAL_MODE) {
      // Transition: '<S614>:12'
      // Exit Internal 'ERROR': '<S614>:3'
      MX_Gateway_DWork.bitsForTID2.is_ERROR_eeq1 =
        MX_Gate_IN_NO_ACTIVE_CHILD_iog0;
      MX_Gateway_DWork.bitsForTID2.is_c43_MX_Gateway =
        MX_Gateway_IN_Functional_mdyq;

      // Entry Internal 'Functional': '<S614>:38'
      // Transition: '<S614>:40'
      MX_Gateway_DWork.bitsForTID2.is_Functional_jr2s =
        MX_Gateway_IN_INACTIVE_g54cr;
      MX_Gateway_DWork.temporalCounter_i1_g12a = 0U;

      // Entry 'INACTIVE': '<S614>:1'
      ind_AutoIdle = INACTIVE;
    } else if (MX_Gateway_DWork.bitsForTID2.is_ERROR_eeq1 ==
               MX_Gateway_IN_ACTIVE_fmsm) {
      ind_AutoIdle = ACTIVE;

      // During 'ACTIVE': '<S614>:4'
      if (MX_Gateway_DWork.debounceCount_ppme >= CONSTANT_DATA->ICON_FLASH_RATE)
      {
        // Transition: '<S614>:14'
        MX_Gateway_DWork.bitsForTID2.is_ERROR_eeq1 = MX_Gateway_IN_INACTIVE_g54c;

        // Entry 'INACTIVE': '<S614>:5'
        ind_AutoIdle = INACTIVE;
        MX_Gateway_DWork.debounceCount_ppme = 0U;
      } else {
        MX_Gateway_DWork.debounceCount_ppme = (uint16_T)(int32_T)((int32_T)
          MX_Gateway_DWork.debounceCount_ppme + 1);
      }
    } else {
      ind_AutoIdle = INACTIVE;

      // During 'INACTIVE': '<S614>:5'
      if (MX_Gateway_DWork.debounceCount_ppme >= CONSTANT_DATA->ICON_FLASH_RATE)
      {
        // Transition: '<S614>:13'
        MX_Gateway_DWork.bitsForTID2.is_ERROR_eeq1 = MX_Gateway_IN_ACTIVE_fmsm;

        // Entry 'ACTIVE': '<S614>:4'
        ind_AutoIdle = ACTIVE;
        MX_Gateway_DWork.debounceCount_ppme = 0U;
      } else {
        MX_Gateway_DWork.debounceCount_ppme = (uint16_T)(int32_T)((int32_T)
          MX_Gateway_DWork.debounceCount_ppme + 1);
      }
    }
    break;

   case MX_Gateway_IN_Functional_mdyq:
    // During 'Functional': '<S614>:38'
    if ((CONSTANT_DATA->CAN_THROTTLE_FUNCTION != NON_FUNCTIONAL) &&
        (eeMirror.ee_ThrottleCalState == IN_CAL_MODE)) {
      // Transition: '<S614>:10'
      // Exit Internal 'Functional': '<S614>:38'
      MX_Gateway_DWork.bitsForTID2.is_Functional_jr2s =
        MX_Gate_IN_NO_ACTIVE_CHILD_iog0;
      MX_Gateway_DWork.bitsForTID2.is_c43_MX_Gateway = MX_Gateway_IN_ERROR_bbvn;

      // Entry Internal 'ERROR': '<S614>:3'
      // Transition: '<S614>:15'
      MX_Gateway_DWork.bitsForTID2.is_ERROR_eeq1 = MX_Gateway_IN_INACTIVE_g54c;

      // Entry 'INACTIVE': '<S614>:5'
      ind_AutoIdle = INACTIVE;
      MX_Gateway_DWork.debounceCount_ppme = 0U;
    } else {
      switch (MX_Gateway_DWork.bitsForTID2.is_Functional_jr2s) {
       case MX_Gateway_IN_ACTIVE_fmsm:
        ind_AutoIdle = ACTIVE;

        // During 'ACTIVE': '<S614>:2'
        if (state_AutoIdleEnable == INACTIVE) {
          // Transition: '<S614>:9'
          MX_Gateway_DWork.bitsForTID2.is_Functional_jr2s =
            MX_Gateway_IN_INACTIVE_g54cr;
          MX_Gateway_DWork.temporalCounter_i1_g12a = 0U;

          // Entry 'INACTIVE': '<S614>:1'
          ind_AutoIdle = INACTIVE;
        }
        break;

       case MX_Gateway_IN_Dont_Care:
        ind_AutoIdle = DONT_CARE;

        // During 'Dont_Care': '<S614>:29'
        if (state_AutoIdleEnable == ACTIVE) {
          // Transition: '<S614>:31'
          MX_Gateway_DWork.bitsForTID2.is_Functional_jr2s =
            MX_Gateway_IN_ACTIVE_fmsm;

          // Entry 'ACTIVE': '<S614>:2'
          ind_AutoIdle = ACTIVE;
        }
        break;

       default:
        ind_AutoIdle = INACTIVE;

        // During 'INACTIVE': '<S614>:1'
        if (state_AutoIdleEnable == ACTIVE) {
          // Transition: '<S614>:8'
          MX_Gateway_DWork.bitsForTID2.is_Functional_jr2s =
            MX_Gateway_IN_ACTIVE_fmsm;

          // Entry 'ACTIVE': '<S614>:2'
          ind_AutoIdle = ACTIVE;
        } else {
          if ((int32_T)MX_Gateway_DWork.temporalCounter_i1_g12a >= 30) {
            // Transition: '<S614>:30'
            MX_Gateway_DWork.bitsForTID2.is_Functional_jr2s =
              MX_Gateway_IN_Dont_Care;

            // Entry 'Dont_Care': '<S614>:29'
            ind_AutoIdle = DONT_CARE;
          }
        }
        break;
      }
    }
    break;

   default:
    ind_AutoIdle = NON_FUNCTIONAL;

    // During 'NON_FUNCTIONAL': '<S614>:6'
    if (CONSTANT_DATA->AUTOIDLE_FUNCTION != NON_FUNCTIONAL) {
      // Transition: '<S614>:16'
      MX_Gateway_DWork.bitsForTID2.is_c43_MX_Gateway =
        MX_Gateway_IN_Functional_mdyq;

      // Entry Internal 'Functional': '<S614>:38'
      // Transition: '<S614>:40'
      MX_Gateway_DWork.bitsForTID2.is_Functional_jr2s =
        MX_Gateway_IN_INACTIVE_g54cr;
      MX_Gateway_DWork.temporalCounter_i1_g12a = 0U;

      // Entry 'INACTIVE': '<S614>:1'
      ind_AutoIdle = INACTIVE;
    }
    break;
  }

  // End of Chart: '<S592>/AutoIdle_Indicator'
}

// System initialize for atomic system: '<S27>/Aux_Ind'
void MX_Gateway_Aux_Ind_Init(void)
{
  // SystemInitialize for Chart: '<S593>/Aux1_Indicator'
  MX_Gateway_DWork.bitsForTID2.is_FLASH_lgdn = MX_Gate_IN_NO_ACTIVE_CHILD_cgos;
  MX_Gateway_DWork.temporalCounter_i2_ldfl = 0U;
  MX_Gateway_DWork.bitsForTID2.is_FLASH1 = MX_Gate_IN_NO_ACTIVE_CHILD_cgos;
  MX_Gateway_DWork.temporalCounter_i1_nlr4 = 0U;
  MX_Gateway_DWork.bitsForTID2.is_active_c30_MX_Gateway = 0U;
  MX_Gateway_DWork.bitsForTID2.is_c30_MX_Gateway =
    MX_Gate_IN_NO_ACTIVE_CHILD_cgos;
  ind_Aux1 = 0U;

  // SystemInitialize for Chart: '<S593>/Aux2_Indicator'
  MX_Gateway_DWork.bitsForTID2.is_FLASH = MX_Gate_IN_NO_ACTIVE_CHILD_cgos;
  MX_Gateway_DWork.temporalCounter_i2_iv2a = 0U;
  MX_Gateway_DWork.temporalCounter_i1_akth = 0U;
  MX_Gateway_DWork.bitsForTID2.is_active_c24_MX_Gateway = 0U;
  MX_Gateway_DWork.bitsForTID2.is_c24_MX_Gateway =
    MX_Gate_IN_NO_ACTIVE_CHILD_cgos;
  ind_Aux2 = 0U;
}

// Output and update for atomic system: '<S27>/Aux_Ind'
void MX_Gateway_Aux_Ind(void)
{
  // Chart: '<S593>/Aux1_Indicator'
  // Gateway: MX_Gtwy_Control/PanelInterface/Aux_Ind/Aux1_Indicator
  if ((uint32_T)MX_Gateway_DWork.temporalCounter_i1_nlr4 < 3U) {
    MX_Gateway_DWork.temporalCounter_i1_nlr4 = (uint8_T)(int32_T)((int32_T)
      MX_Gateway_DWork.temporalCounter_i1_nlr4 + 1);
  }

  if ((uint32_T)MX_Gateway_DWork.temporalCounter_i2_ldfl < 65535U) {
    MX_Gateway_DWork.temporalCounter_i2_ldfl = (uint16_T)(int32_T)((int32_T)
      MX_Gateway_DWork.temporalCounter_i2_ldfl + 1);
  }

  // During: MX_Gtwy_Control/PanelInterface/Aux_Ind/Aux1_Indicator
  if ((uint32_T)MX_Gateway_DWork.bitsForTID2.is_active_c30_MX_Gateway == 0U) {
    // Entry: MX_Gtwy_Control/PanelInterface/Aux_Ind/Aux1_Indicator
    MX_Gateway_DWork.bitsForTID2.is_active_c30_MX_Gateway = 1U;

    // Entry Internal: MX_Gtwy_Control/PanelInterface/Aux_Ind/Aux1_Indicator
    // Transition: '<S615>:2'
    MX_Gateway_DWork.bitsForTID2.is_c30_MX_Gateway = MX_Gateway_IN_INACTIVE_clkz;

    // Entry 'INACTIVE': '<S615>:1'
    ind_Aux1 = INACTIVE;
  } else {
    switch (MX_Gateway_DWork.bitsForTID2.is_c30_MX_Gateway) {
     case MX_Gateway_IN_ACTIVE_ct3c:
      ind_Aux1 = ACTIVE;

      // During 'ACTIVE': '<S615>:3'
      if (MX_Gateway_B.RateTransition5_dpci == INACTIVE) {
        // Transition: '<S615>:9'
        MX_Gateway_DWork.bitsForTID2.is_c30_MX_Gateway =
          MX_Gateway_IN_INACTIVE_clkz;

        // Entry 'INACTIVE': '<S615>:1'
        ind_Aux1 = INACTIVE;
      } else {
        if ((MX_Gateway_B.RateTransition20_je5d == ERR_DETENT) &&
            (eeMirror.deluxe_G5 != ACTIVE) &&
            (CONSTANT_DATA->DELUXE_GEN5_5_FUNCTION == NON_FUNCTIONAL)) {
          // Transition: '<S615>:7'
          MX_Gateway_DWork.bitsForTID2.is_c30_MX_Gateway = MX_Gateway_IN_FLASH;
          MX_Gateway_DWork.temporalCounter_i2_ldfl = 0U;

          // Entry Internal 'FLASH': '<S615>:4'
          // Transition: '<S615>:30'
          MX_Gateway_DWork.bitsForTID2.is_FLASH_lgdn = MX_Gateway_IN_On_fcki;
          MX_Gateway_DWork.temporalCounter_i1_nlr4 = 0U;

          // Entry 'On': '<S615>:26'
        }
      }
      break;

     case MX_Gateway_IN_FLASH:
      // During 'FLASH': '<S615>:4'
      if (((MX_Gateway_DWork.temporalCounter_i2_ldfl >=
            CONSTANT_DATA->AUX_DETENT_FLASH_TIME) &&
           (MX_Gateway_B.RateTransition20_je5d != ERR_DETENT)) ||
          (MX_Gateway_B.RateTransition18_dd31 == ACTIVE)) {
        // Transition: '<S615>:8'
        // Exit Internal 'FLASH': '<S615>:4'
        MX_Gateway_DWork.bitsForTID2.is_FLASH_lgdn =
          MX_Gate_IN_NO_ACTIVE_CHILD_cgos;
        MX_Gateway_DWork.bitsForTID2.is_c30_MX_Gateway =
          MX_Gateway_IN_ACTIVE_ct3c;

        // Entry 'ACTIVE': '<S615>:3'
        ind_Aux1 = ACTIVE;
      } else if (MX_Gateway_DWork.bitsForTID2.is_FLASH_lgdn ==
                 MX_Gateway_IN_Off_lfso) {
        ind_Aux1 = INACTIVE;

        // During 'Off': '<S615>:27'
        if ((int32_T)MX_Gateway_DWork.temporalCounter_i1_nlr4 >= 2) {
          // Transition: '<S615>:29'
          MX_Gateway_DWork.bitsForTID2.is_FLASH_lgdn = MX_Gateway_IN_On_fcki;
          MX_Gateway_DWork.temporalCounter_i1_nlr4 = 0U;

          // Entry 'On': '<S615>:26'
          ind_Aux1 = ACTIVE;
        }
      } else {
        ind_Aux1 = ACTIVE;

        // During 'On': '<S615>:26'
        if ((int32_T)MX_Gateway_DWork.temporalCounter_i1_nlr4 >= 2) {
          // Transition: '<S615>:28'
          MX_Gateway_DWork.bitsForTID2.is_FLASH_lgdn = MX_Gateway_IN_Off_lfso;
          MX_Gateway_DWork.temporalCounter_i1_nlr4 = 0U;

          // Entry 'Off': '<S615>:27'
          ind_Aux1 = INACTIVE;
        }
      }
      break;

     case MX_Gateway_IN_FLASH1:
      // During 'FLASH1': '<S615>:37'
      if (!MX_Gateway_B.RateTransition57_doaz) {
        // Transition: '<S615>:44'
        // Exit Internal 'FLASH1': '<S615>:37'
        MX_Gateway_DWork.bitsForTID2.is_FLASH1 = MX_Gate_IN_NO_ACTIVE_CHILD_cgos;
        MX_Gateway_DWork.bitsForTID2.is_c30_MX_Gateway =
          MX_Gateway_IN_INACTIVE_clkz;

        // Entry 'INACTIVE': '<S615>:1'
        ind_Aux1 = INACTIVE;
      } else if (MX_Gateway_DWork.bitsForTID2.is_FLASH1 == MX_Gateway_IN_Off1) {
        ind_Aux1 = INACTIVE;

        // During 'Off1': '<S615>:40'
        if ((int32_T)MX_Gateway_DWork.temporalCounter_i1_nlr4 >= 2) {
          // Transition: '<S615>:38'
          MX_Gateway_DWork.bitsForTID2.is_FLASH1 = MX_Gateway_IN_On1;
          MX_Gateway_DWork.temporalCounter_i1_nlr4 = 0U;

          // Entry 'On1': '<S615>:39'
          ind_Aux1 = ACTIVE;
        }
      } else {
        ind_Aux1 = ACTIVE;

        // During 'On1': '<S615>:39'
        if ((int32_T)MX_Gateway_DWork.temporalCounter_i1_nlr4 >= 2) {
          // Transition: '<S615>:41'
          MX_Gateway_DWork.bitsForTID2.is_FLASH1 = MX_Gateway_IN_Off1;
          MX_Gateway_DWork.temporalCounter_i1_nlr4 = 0U;

          // Entry 'Off1': '<S615>:40'
          ind_Aux1 = INACTIVE;
        }
      }
      break;

     default:
      ind_Aux1 = INACTIVE;

      // During 'INACTIVE': '<S615>:1'
      if (MX_Gateway_B.RateTransition5_dpci != INACTIVE) {
        // Transition: '<S615>:6'
        MX_Gateway_DWork.bitsForTID2.is_c30_MX_Gateway =
          MX_Gateway_IN_ACTIVE_ct3c;

        // Entry 'ACTIVE': '<S615>:3'
        ind_Aux1 = ACTIVE;
      } else {
        if (MX_Gateway_B.RateTransition57_doaz) {
          // Transition: '<S615>:43'
          MX_Gateway_DWork.bitsForTID2.is_c30_MX_Gateway = MX_Gateway_IN_FLASH1;

          // Entry Internal 'FLASH1': '<S615>:37'
          // Transition: '<S615>:42'
          MX_Gateway_DWork.bitsForTID2.is_FLASH1 = MX_Gateway_IN_On1;
          MX_Gateway_DWork.temporalCounter_i1_nlr4 = 0U;

          // Entry 'On1': '<S615>:39'
          ind_Aux1 = ACTIVE;
        }
      }
      break;
    }
  }

  // End of Chart: '<S593>/Aux1_Indicator'

  // Chart: '<S593>/Aux2_Indicator'
  // Gateway: MX_Gtwy_Control/PanelInterface/Aux_Ind/Aux2_Indicator
  if ((uint32_T)MX_Gateway_DWork.temporalCounter_i1_akth < 7U) {
    MX_Gateway_DWork.temporalCounter_i1_akth = (uint8_T)(int32_T)((int32_T)
      MX_Gateway_DWork.temporalCounter_i1_akth + 1);
  }

  if ((uint32_T)MX_Gateway_DWork.temporalCounter_i2_iv2a < 65535U) {
    MX_Gateway_DWork.temporalCounter_i2_iv2a = (uint16_T)(int32_T)((int32_T)
      MX_Gateway_DWork.temporalCounter_i2_iv2a + 1);
  }

  // During: MX_Gtwy_Control/PanelInterface/Aux_Ind/Aux2_Indicator
  if ((uint32_T)MX_Gateway_DWork.bitsForTID2.is_active_c24_MX_Gateway == 0U) {
    // Entry: MX_Gtwy_Control/PanelInterface/Aux_Ind/Aux2_Indicator
    MX_Gateway_DWork.bitsForTID2.is_active_c24_MX_Gateway = 1U;

    // Entry Internal: MX_Gtwy_Control/PanelInterface/Aux_Ind/Aux2_Indicator
    // Transition: '<S616>:2'
    MX_Gateway_DWork.bitsForTID2.is_c24_MX_Gateway = MX_Gateway_IN_INACTIVE_clkz;
    MX_Gateway_DWork.temporalCounter_i1_akth = 0U;

    // Entry 'INACTIVE': '<S616>:1'
    ind_Aux2 = INACTIVE;
  } else {
    switch (MX_Gateway_DWork.bitsForTID2.is_c24_MX_Gateway) {
     case MX_Gateway_IN_ACTIVE_ct3c:
      ind_Aux2 = ACTIVE;

      // During 'ACTIVE': '<S616>:3'
      if (MX_Gateway_B.RateTransition18_dd31 != ACTIVE) {
        // Transition: '<S616>:9'
        MX_Gateway_DWork.bitsForTID2.is_c24_MX_Gateway =
          MX_Gateway_IN_INACTIVE_clkz;
        MX_Gateway_DWork.temporalCounter_i1_akth = 0U;

        // Entry 'INACTIVE': '<S616>:1'
        ind_Aux2 = INACTIVE;
      }
      break;

     case MX_Gateway_IN_DONT_CARE:
      ind_Aux2 = DONT_CARE;

      // During 'DONT_CARE': '<S616>:5'
      if (MX_Gateway_B.RateTransition18_dd31 == ACTIVE) {
        // Transition: '<S616>:11'
        MX_Gateway_DWork.bitsForTID2.is_c24_MX_Gateway =
          MX_Gateway_IN_ACTIVE_ct3c;

        // Entry 'ACTIVE': '<S616>:3'
        ind_Aux2 = ACTIVE;
      } else {
        if ((MX_Gateway_B.RateTransition20_je5d == ERR_DETENT) &&
            (eeMirror.deluxe_G5 != ACTIVE) &&
            (CONSTANT_DATA->DELUXE_GEN5_5_FUNCTION == NON_FUNCTIONAL)) {
          // Transition: '<S616>:12'
          MX_Gateway_DWork.bitsForTID2.is_c24_MX_Gateway =
            MX_Gateway_IN_FLASH_eqyq;
          MX_Gateway_DWork.temporalCounter_i2_iv2a = 0U;

          // Entry Internal 'FLASH': '<S616>:4'
          // Transition: '<S616>:30'
          MX_Gateway_DWork.bitsForTID2.is_FLASH = MX_Gateway_IN_On_fcki;
          MX_Gateway_DWork.temporalCounter_i1_akth = 0U;

          // Entry 'On': '<S616>:26'
          ind_Aux2 = ACTIVE;
        }
      }
      break;

     case MX_Gateway_IN_FLASH_eqyq:
      // During 'FLASH': '<S616>:4'
      if ((MX_Gateway_DWork.temporalCounter_i2_iv2a >=
           CONSTANT_DATA->AUX_DETENT_FLASH_TIME) &&
          (MX_Gateway_B.RateTransition20_je5d != ERR_DETENT)) {
        // Transition: '<S616>:8'
        // Exit Internal 'FLASH': '<S616>:4'
        MX_Gateway_DWork.bitsForTID2.is_FLASH = MX_Gate_IN_NO_ACTIVE_CHILD_cgos;
        MX_Gateway_DWork.bitsForTID2.is_c24_MX_Gateway =
          MX_Gateway_IN_INACTIVE_clkz;
        MX_Gateway_DWork.temporalCounter_i1_akth = 0U;

        // Entry 'INACTIVE': '<S616>:1'
        ind_Aux2 = INACTIVE;
      } else if (MX_Gateway_B.RateTransition18_dd31 == ACTIVE) {
        // Transition: '<S616>:14'
        // Exit Internal 'FLASH': '<S616>:4'
        MX_Gateway_DWork.bitsForTID2.is_FLASH = MX_Gate_IN_NO_ACTIVE_CHILD_cgos;
        MX_Gateway_DWork.bitsForTID2.is_c24_MX_Gateway =
          MX_Gateway_IN_ACTIVE_ct3c;

        // Entry 'ACTIVE': '<S616>:3'
        ind_Aux2 = ACTIVE;
      } else if (MX_Gateway_DWork.bitsForTID2.is_FLASH == MX_Gateway_IN_Off_lfso)
      {
        ind_Aux2 = INACTIVE;

        // During 'Off': '<S616>:27'
        if ((int32_T)MX_Gateway_DWork.temporalCounter_i1_akth >= 2) {
          // Transition: '<S616>:29'
          MX_Gateway_DWork.bitsForTID2.is_FLASH = MX_Gateway_IN_On_fcki;
          MX_Gateway_DWork.temporalCounter_i1_akth = 0U;

          // Entry 'On': '<S616>:26'
          ind_Aux2 = ACTIVE;
        }
      } else {
        ind_Aux2 = ACTIVE;

        // During 'On': '<S616>:26'
        if ((int32_T)MX_Gateway_DWork.temporalCounter_i1_akth >= 2) {
          // Transition: '<S616>:28'
          MX_Gateway_DWork.bitsForTID2.is_FLASH = MX_Gateway_IN_Off_lfso;
          MX_Gateway_DWork.temporalCounter_i1_akth = 0U;

          // Entry 'Off': '<S616>:27'
          ind_Aux2 = INACTIVE;
        }
      }
      break;

     default:
      ind_Aux2 = INACTIVE;

      // During 'INACTIVE': '<S616>:1'
      if (MX_Gateway_B.RateTransition18_dd31 == ACTIVE) {
        // Transition: '<S616>:6'
        MX_Gateway_DWork.bitsForTID2.is_c24_MX_Gateway =
          MX_Gateway_IN_ACTIVE_ct3c;

        // Entry 'ACTIVE': '<S616>:3'
        ind_Aux2 = ACTIVE;
      } else if ((MX_Gateway_B.RateTransition20_je5d == ERR_DETENT) &&
                 (eeMirror.deluxe_G5 != ACTIVE) &&
                 (CONSTANT_DATA->DELUXE_GEN5_5_FUNCTION == NON_FUNCTIONAL)) {
        // Transition: '<S616>:7'
        MX_Gateway_DWork.bitsForTID2.is_c24_MX_Gateway =
          MX_Gateway_IN_FLASH_eqyq;
        MX_Gateway_DWork.temporalCounter_i2_iv2a = 0U;

        // Entry Internal 'FLASH': '<S616>:4'
        // Transition: '<S616>:30'
        MX_Gateway_DWork.bitsForTID2.is_FLASH = MX_Gateway_IN_On_fcki;
        MX_Gateway_DWork.temporalCounter_i1_akth = 0U;

        // Entry 'On': '<S616>:26'
        ind_Aux2 = ACTIVE;
      } else {
        if ((int32_T)MX_Gateway_DWork.temporalCounter_i1_akth >= 3) {
          // Transition: '<S616>:13'
          MX_Gateway_DWork.bitsForTID2.is_c24_MX_Gateway =
            MX_Gateway_IN_DONT_CARE;

          // Entry 'DONT_CARE': '<S616>:5'
          ind_Aux2 = DONT_CARE;
        }
      }
      break;
    }
  }

  // End of Chart: '<S593>/Aux2_Indicator'
}

// System initialize for atomic system: '<S27>/Backlighting'
void MX_Gateway_Backlighting_Init(void)
{
  // Chart: '<S594>/Backlighting'
  // Entry: MX_Gtwy_Control/PanelInterface/Backlighting/Backlighting
  // Entry Internal: MX_Gtwy_Control/PanelInterface/Backlighting/Backlighting
  // Transition: '<S617>:3'
  MX_Gateway_DWork.bitsForTID2.is_c79_MX_Gateway = MX_Gateway_IN_INACTIVE_lef2;

  // Entry 'INACTIVE': '<S617>:1'
  level_DisplayBacklight = CONSTANT_DATA->PANEL_BACKLIGHT_OFF_LEVEL;
  level_IconBacklight = CONSTANT_DATA->ICON_BACKLIGHT_OFF_LEVEL;
}

// Output and update for atomic system: '<S27>/Backlighting'
void MX_Gateway_Backlighting(void)
{
  // Chart: '<S594>/Backlighting'
  // Gateway: MX_Gtwy_Control/PanelInterface/Backlighting/Backlighting
  // During: MX_Gtwy_Control/PanelInterface/Backlighting/Backlighting
  if (MX_Gateway_DWork.bitsForTID2.is_c79_MX_Gateway ==
      MX_Gateway_IN_ACTIVE_jqay) {
    level_DisplayBacklight = CONSTANT_DATA->PANEL_BACKLIGHT_ON_LEVEL;
    level_IconBacklight = CONSTANT_DATA->ICON_BACKLIGHT_ON_LEVEL;

    // During 'ACTIVE': '<S617>:2'
    if (dout_Lights == (int32_T)INACTIVE) {
      // Transition: '<S617>:5'
      MX_Gateway_DWork.bitsForTID2.is_c79_MX_Gateway =
        MX_Gateway_IN_INACTIVE_lef2;

      // Entry 'INACTIVE': '<S617>:1'
      level_DisplayBacklight = CONSTANT_DATA->PANEL_BACKLIGHT_OFF_LEVEL;
      level_IconBacklight = CONSTANT_DATA->ICON_BACKLIGHT_OFF_LEVEL;
    }
  } else {
    level_DisplayBacklight = CONSTANT_DATA->PANEL_BACKLIGHT_OFF_LEVEL;
    level_IconBacklight = CONSTANT_DATA->ICON_BACKLIGHT_OFF_LEVEL;

    // During 'INACTIVE': '<S617>:1'
    if (dout_Lights == (int32_T)ACTIVE) {
      // Transition: '<S617>:4'
      MX_Gateway_DWork.bitsForTID2.is_c79_MX_Gateway = MX_Gateway_IN_ACTIVE_jqay;

      // Entry 'ACTIVE': '<S617>:2'
      level_DisplayBacklight = CONSTANT_DATA->PANEL_BACKLIGHT_ON_LEVEL;
      level_IconBacklight = CONSTANT_DATA->ICON_BACKLIGHT_ON_LEVEL;
    }
  }

  // End of Chart: '<S594>/Backlighting'
}

// System initialize for atomic system: '<S27>/FrontLight'
void MX_Gateway_FrontLight_Init(void)
{
  // SystemInitialize for Chart: '<S595>/LightIndicator'
  MX_Gateway_DWork.bitsForTID2.is_ERROR = MX_Gate_IN_NO_ACTIVE_CHILD_ofol;
  MX_Gateway_DWork.debounceCount_k5q3 = 0U;

  // Chart: '<S595>/LightIndicator'
  // Entry: MX_Gtwy_Control/PanelInterface/FrontLight/LightIndicator
  // Entry Internal: MX_Gtwy_Control/PanelInterface/FrontLight/LightIndicator
  // Transition: '<S618>:6'
  MX_Gateway_DWork.bitsForTID2.is_c80_MX_Gateway = MX_Gateway_IN_INACTIVE_ieoc;

  // Entry 'INACTIVE': '<S618>:1'
  ind_Light1 = ((int32_T)INACTIVE != 0);
}

// Output and update for atomic system: '<S27>/FrontLight'
void MX_Gateway_FrontLight(void)
{
  // Chart: '<S595>/LightIndicator'
  // Gateway: MX_Gtwy_Control/PanelInterface/FrontLight/LightIndicator
  // During: MX_Gtwy_Control/PanelInterface/FrontLight/LightIndicator
  switch (MX_Gateway_DWork.bitsForTID2.is_c80_MX_Gateway) {
   case MX_Gateway_IN_ACTIVE_flsu:
    // During 'ACTIVE': '<S618>:2'
    if (dout_Lights == (int32_T)INACTIVE) {
      // Transition: '<S618>:8'
      MX_Gateway_DWork.bitsForTID2.is_c80_MX_Gateway =
        MX_Gateway_IN_INACTIVE_ieoc;

      // Entry 'INACTIVE': '<S618>:1'
      ind_Light1 = ((int32_T)INACTIVE != 0);
    } else {
      if (state_LightsOutput != NORMAL) {
        // Transition: '<S618>:10'
        MX_Gateway_DWork.bitsForTID2.is_c80_MX_Gateway =
          MX_Gateway_IN_ERROR_jseg;

        // Entry Internal 'ERROR': '<S618>:4'
        // Transition: '<S618>:12'
        MX_Gateway_DWork.bitsForTID2.is_ERROR = MX_Gateway_IN_INACTIVE_ieocp;

        // Entry 'INACTIVE': '<S618>:5'
        ind_Light1 = ((int32_T)INACTIVE != 0);
        MX_Gateway_DWork.debounceCount_k5q3 = 0U;
      }
    }
    break;

   case MX_Gateway_IN_ERROR_jseg:
    // During 'ERROR': '<S618>:4'
    if (state_LightsOutput == NORMAL) {
      // Transition: '<S618>:11'
      // Exit Internal 'ERROR': '<S618>:4'
      MX_Gateway_DWork.bitsForTID2.is_ERROR = MX_Gate_IN_NO_ACTIVE_CHILD_ofol;
      MX_Gateway_DWork.bitsForTID2.is_c80_MX_Gateway =
        MX_Gateway_IN_INACTIVE_ieoc;

      // Entry 'INACTIVE': '<S618>:1'
      ind_Light1 = ((int32_T)INACTIVE != 0);
    } else if (MX_Gateway_DWork.bitsForTID2.is_ERROR ==
               MX_Gateway_IN_ACTIVE_flsu) {
      // During 'ACTIVE': '<S618>:3'
      if (MX_Gateway_DWork.debounceCount_k5q3 >= CONSTANT_DATA->ICON_FLASH_RATE)
      {
        // Transition: '<S618>:13'
        MX_Gateway_DWork.bitsForTID2.is_ERROR = MX_Gateway_IN_INACTIVE_ieocp;

        // Entry 'INACTIVE': '<S618>:5'
        ind_Light1 = ((int32_T)INACTIVE != 0);
        MX_Gateway_DWork.debounceCount_k5q3 = 0U;
      } else {
        MX_Gateway_DWork.debounceCount_k5q3 = (uint16_T)(int32_T)((int32_T)
          MX_Gateway_DWork.debounceCount_k5q3 + 1);
      }
    } else {
      // During 'INACTIVE': '<S618>:5'
      if (MX_Gateway_DWork.debounceCount_k5q3 >= CONSTANT_DATA->ICON_FLASH_RATE)
      {
        // Transition: '<S618>:14'
        MX_Gateway_DWork.bitsForTID2.is_ERROR = MX_Gateway_IN_ACTIVE_flsu;

        // Entry 'ACTIVE': '<S618>:3'
        ind_Light1 = ((int32_T)ACTIVE != 0);
        MX_Gateway_DWork.debounceCount_k5q3 = 0U;
      } else {
        MX_Gateway_DWork.debounceCount_k5q3 = (uint16_T)(int32_T)((int32_T)
          MX_Gateway_DWork.debounceCount_k5q3 + 1);
      }
    }
    break;

   default:
    // During 'INACTIVE': '<S618>:1'
    if (state_LightsOutput != NORMAL) {
      // Transition: '<S618>:9'
      MX_Gateway_DWork.bitsForTID2.is_c80_MX_Gateway = MX_Gateway_IN_ERROR_jseg;

      // Entry Internal 'ERROR': '<S618>:4'
      // Transition: '<S618>:12'
      MX_Gateway_DWork.bitsForTID2.is_ERROR = MX_Gateway_IN_INACTIVE_ieocp;

      // Entry 'INACTIVE': '<S618>:5'
      ind_Light1 = ((int32_T)INACTIVE != 0);
      MX_Gateway_DWork.debounceCount_k5q3 = 0U;
    } else {
      if (dout_Lights == (int32_T)ACTIVE) {
        // Transition: '<S618>:7'
        MX_Gateway_DWork.bitsForTID2.is_c80_MX_Gateway =
          MX_Gateway_IN_ACTIVE_flsu;

        // Entry 'ACTIVE': '<S618>:2'
        ind_Light1 = ((int32_T)ACTIVE != 0);
      }
    }
    break;
  }

  // End of Chart: '<S595>/LightIndicator'
}

// Function for Chart: '<S596>/Display_Type'
static void MX_Gateway_SECONDARY_STATE(const boolean_T
  *FixPtRelationalOperator_ksvm)
{
  // During 'SECONDARY_STATE': '<S620>:3'
  if (MX_Gateway_DWork.bitsForTID2.is_SECONDARY_STATE ==
      MX_Gateway_IN_DELUXE_ERROR) {
    // During 'DELUXE_ERROR': '<S620>:17'
    if (MX_Gateway_B.RateTransition24_nbsd != NO_COMMUNICATION) {
      // Transition: '<S620>:56'
      MX_Gateway_DWork.bitsForTID2.is_SECONDARY_STATE =
        MX_Gateway_IN_DELUXE_GOOD;

      // Entry Internal 'DELUXE_GOOD': '<S620>:24'
      // Transition: '<S620>:63'
      MX_Gateway_DWork.bitsForTID2.is_DELUXE_GOOD = MX_Gateway_IN_NON_SHUTDOWN;

      // Entry Internal 'NON_SHUTDOWN': '<S620>:4'
      // Transition: '<S620>:53'
      MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN = MX_Gateway_IN_NO_STATE;

      // Entry 'NO_STATE': '<S620>:1'
      state_InfoSecondary = INACTIVE;
    }
  } else {
    // During 'DELUXE_GOOD': '<S620>:24'
    if (MX_Gateway_B.RateTransition24_nbsd == NO_COMMUNICATION) {
      // Transition: '<S620>:62'
      // Exit Internal 'DELUXE_GOOD': '<S620>:24'
      MX_Gateway_DWork.bitsForTID2.is_DELUXE_GOOD =
        MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

      // Exit Internal 'NON_SHUTDOWN': '<S620>:4'
      // Exit Internal 'Aux_Detent_Error': '<S620>:842'
      MX_Gateway_DWork.bitsForTID2.is_Aux_Detent_Error =
        MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
      MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
        MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
      MX_Gateway_DWork.bitsForTID2.is_SECONDARY_STATE =
        MX_Gateway_IN_DELUXE_ERROR;

      // Entry 'DELUXE_ERROR': '<S620>:17'
      state_InfoSecondary = DISPLAY_DELUXE_ERROR;
    } else {
      switch (MX_Gateway_DWork.bitsForTID2.is_DELUXE_GOOD) {
       case MX_Gateway_IN_KSS:
        // During 'KSS': '<S620>:934'
        if (MX_Gateway_B.RateTransition23_puo4 == INACTIVE) {
          // Transition: '<S620>:936'
          MX_Gateway_DWork.bitsForTID2.is_DELUXE_GOOD =
            MX_Gateway_IN_NON_SHUTDOWN;

          // Entry Internal 'NON_SHUTDOWN': '<S620>:4'
          // Transition: '<S620>:53'
          MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN = MX_Gateway_IN_NO_STATE;

          // Entry 'NO_STATE': '<S620>:1'
          state_InfoSecondary = INACTIVE;
        } else {
          state_InfoSecondary = MX_Gateway_B.RateTransition23_puo4;
        }
        break;

       case MX_Gateway_IN_NON_SHUTDOWN:
        // During 'NON_SHUTDOWN': '<S620>:4'
        if ((MX_Gateway_B.RateTransition22_bwuf == SHUTDOWN) && ((int32_T)
             MX_Gateway_DWork.shutdownTimer == 0) &&
            (MX_Gateway_B.RateTransition19_nllh != MULTIPLE)) {
          // Transition: '<S620>:51'
          // Exit Internal 'NON_SHUTDOWN': '<S620>:4'
          // Exit Internal 'Aux_Detent_Error': '<S620>:842'
          MX_Gateway_DWork.bitsForTID2.is_Aux_Detent_Error =
            MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
          MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
            MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
          MX_Gateway_DWork.bitsForTID2.is_DELUXE_GOOD =
            MX_Gateway_IN_SHUTDOWN_dqeb;

          // Entry 'SHUTDOWN': '<S620>:2'
          state_InfoSecondary = DISPLAY_SHUTDOWN;
          MX_Gateway_DWork.shutdownTimer = 0U;
        } else if (MX_Gateway_DWork.state_LightButton == ACTIVE) {
          // Transition: '<S620>:76'
          // Exit Internal 'NON_SHUTDOWN': '<S620>:4'
          // Exit Internal 'Aux_Detent_Error': '<S620>:842'
          MX_Gateway_DWork.bitsForTID2.is_Aux_Detent_Error =
            MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
          MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
            MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
          MX_Gateway_DWork.bitsForTID2.is_DELUXE_GOOD = MX_Gateway_IN_VERSION;

          // Entry 'VERSION': '<S620>:31'
          state_InfoSecondary = DISPLAY_VERSION;
        } else if (MX_Gateway_B.RateTransition23_puo4 != INACTIVE) {
          // Transition: '<S620>:935'
          // Exit Internal 'NON_SHUTDOWN': '<S620>:4'
          // Exit Internal 'Aux_Detent_Error': '<S620>:842'
          MX_Gateway_DWork.bitsForTID2.is_Aux_Detent_Error =
            MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
          MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
            MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
          MX_Gateway_DWork.bitsForTID2.is_DELUXE_GOOD = MX_Gateway_IN_KSS;

          // Entry 'KSS': '<S620>:934'
          state_InfoSecondary = MX_Gateway_B.RateTransition23_puo4;
        } else {
          switch (MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN) {
           case MX_Gateway_IN_Aux_Detent_Error:
            // During 'Aux_Detent_Error': '<S620>:842'
            if ((MX_Gateway_DWork.temporalCounter_i3 >=
                 CONSTANT_DATA->AUX_DETENT_FLASH_TIME) ||
                (MX_Gateway_B.RateTransition33_aqcg == ACTIVE)) {
              // Transition: '<S620>:848'
              // Exit Internal 'Aux_Detent_Error': '<S620>:842'
              MX_Gateway_DWork.bitsForTID2.is_Aux_Detent_Error =
                MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
              MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
                MX_Gateway_IN_NO_STATE;

              // Entry 'NO_STATE': '<S620>:1'
              state_InfoSecondary = INACTIVE;
            } else if (MX_Gateway_DWork.bitsForTID2.is_Aux_Detent_Error ==
                       MX_Gateway_IN_AUX) {
              // During 'AUX': '<S620>:844'
              if (MX_Gateway_DWork.temporalCounter_i4 >=
                  CONSTANT_DATA->AUX_DETENT_CYCLE_TIME) {
                // Transition: '<S620>:851'
                MX_Gateway_DWork.bitsForTID2.is_Aux_Detent_Error =
                  MX_Gateway_IN_HOLD;
                MX_Gateway_DWork.temporalCounter_i4 = 0U;

                // Entry 'HOLD': '<S620>:843'
                state_InfoSecondary = DISPLAY_HOLD;
              }
            } else {
              // During 'HOLD': '<S620>:843'
              if (MX_Gateway_DWork.temporalCounter_i4 >=
                  CONSTANT_DATA->AUX_DETENT_CYCLE_TIME) {
                // Transition: '<S620>:850'
                MX_Gateway_DWork.bitsForTID2.is_Aux_Detent_Error =
                  MX_Gateway_IN_AUX;
                MX_Gateway_DWork.temporalCounter_i4 = 0U;

                // Entry 'AUX': '<S620>:844'
                state_InfoSecondary = DISPLAY_AUX;
              }
            }
            break;

           case MX_Gateway_IN_COLD_d4sj:
            // During 'COLD': '<S620>:909'
            if (state_TC == NORMAL) {
              // Transition: '<S620>:911'
              MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
                MX_Gateway_IN_NO_STATE;

              // Entry 'NO_STATE': '<S620>:1'
              state_InfoSecondary = INACTIVE;
            } else {
              if (state_TC == EVENT) {
                // Transition: '<S620>:913'
                MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
                  MX_Gateway_IN_FLASH_COLD;

                // Entry 'FLASH_COLD': '<S620>:910'
                state_InfoSecondary = DISPLAY_FLASH_COLD;
              }
            }
            break;

           case MX_Gateway_IN_FLASH_COLD:
            // During 'FLASH_COLD': '<S620>:910'
            if (state_TC != EVENT) {
              // Transition: '<S620>:914'
              MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
                MX_Gateway_IN_COLD_d4sj;

              // Entry 'COLD': '<S620>:909'
              state_InfoSecondary = DISPLAY_COLD;
            }
            break;

           case MX_Gateway_IN_GLOW_PLUGS:
            // During 'GLOW_PLUGS': '<S620>:5'
            if (((int32_T)count_GlowPlug == 0) || ((state_CANThrottleCalDiag !=
                  INACTIVE) && (state_InfoPrimary == DISPLAY_ENGINE_HOURS))) {
              // Transition: '<S620>:49'
              MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
                MX_Gateway_IN_NO_STATE;

              // Entry 'NO_STATE': '<S620>:1'
              state_InfoSecondary = INACTIVE;
            }
            break;

           case MX_Gateway_IN_NO_STATE:
            // During 'NO_STATE': '<S620>:1'
            if ((state_TC == LOW) || (state_TC == EXTREMELY_LOW)) {
              // Transition: '<S620>:912'
              MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
                MX_Gateway_IN_COLD_d4sj;

              // Entry 'COLD': '<S620>:909'
              state_InfoSecondary = DISPLAY_COLD;
            } else if ((int32_T)count_GlowPlug > 0) {
              // Transition: '<S620>:48'
              MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
                MX_Gateway_IN_GLOW_PLUGS;

              // Entry 'GLOW_PLUGS': '<S620>:5'
              state_InfoSecondary = DISPLAY_GLOW_PLUGS;
            } else if ((MX_Gateway_B.RateTransition31_hc54 == ACTIVE) &&
                       ((int32_T)MX_Gateway_DWork.serviceClockAlarmTimer == 0) &&
                       (MX_Gateway_B.RateTransition25_jx1a != ACTIVE)) {
              // Transition: '<S620>:47'
              MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
                MX_Gatew_IN_SERVICE_CLOCK_ALARM;

              // Entry 'SERVICE_CLOCK_ALARM': '<S620>:7'
              state_InfoSecondary = DISPLAY_SERVICE_CLOCK_ALARM;
              MX_Gateway_DWork.serviceClockAlarmTimer = 0U;
            } else if ((MX_Gateway_B.RateTransition21_ey3k == ERR_DETENT) &&
                       (eeMirror.deluxe_G5 != ACTIVE) &&
                       (CONSTANT_DATA->DELUXE_GEN5_5_FUNCTION == NON_FUNCTIONAL))
            {
              // Transition: '<S620>:847'
              MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
                MX_Gateway_IN_Aux_Detent_Error;
              MX_Gateway_DWork.temporalCounter_i3 = 0U;

              // Entry Internal 'Aux_Detent_Error': '<S620>:842'
              // Transition: '<S620>:849'
              MX_Gateway_DWork.bitsForTID2.is_Aux_Detent_Error =
                MX_Gateway_IN_HOLD;
              MX_Gateway_DWork.temporalCounter_i4 = 0U;

              // Entry 'HOLD': '<S620>:843'
              state_InfoSecondary = DISPLAY_HOLD;
            } else if ((state_CANThrottleCalDiag != INACTIVE) &&
                       (state_InfoPrimary == DISPLAY_ENGINE_HOURS)) {
              // Transition: '<S620>:853'
              MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
                MX__IN_THROTTLE_CAL_DIAGNOSTICS;
              MX_Gateway_DWork.temporalCounter_i3 = 0U;

              // Entry 'THROTTLE_CAL_DIAGNOSTICS': '<S620>:852'
              state_InfoSecondary = DISPLAY_CAN_THROTTLE_DIAG;
            } else {
              if ((CONSTANT_DATA->SECOND_AUX_FUNCTION != NON_FUNCTIONAL) &&
                  (*FixPtRelationalOperator_ksvm)) {
                // Transition: '<S620>:941'
                MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
                  MX_Gateway_IN_OFFSET;
                MX_Gateway_DWork.temporalCounter_i3 = 0U;

                // Entry 'OFFSET': '<S620>:940'
                state_InfoSecondary = DISPLAY_OFFSET;
              }
            }
            break;

           case MX_Gateway_IN_OFFSET:
            // During 'OFFSET': '<S620>:940'
            if (MX_Gateway_DWork.temporalCounter_i3 >=
                CONSTANT_DATA->SECOND_AUX_OFFSET_DISP_TIME) {
              // Transition: '<S620>:942'
              MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
                MX_Gateway_IN_NO_STATE;

              // Entry 'NO_STATE': '<S620>:1'
              state_InfoSecondary = INACTIVE;
            }
            break;

           case MX_Gatew_IN_SERVICE_CLOCK_ALARM:
            // During 'SERVICE_CLOCK_ALARM': '<S620>:7'
            if (MX_Gateway_DWork.serviceClockAlarmTimer >=
                CONSTANT_DATA->DISPLAY_SERVICE_CLOCK_ALARM_TIME) {
              // Transition: '<S620>:39'
              MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
                MX_Gateway_IN_NO_STATE;

              // Entry 'NO_STATE': '<S620>:1'
              state_InfoSecondary = INACTIVE;
            } else {
              MX_Gateway_DWork.serviceClockAlarmTimer = (uint16_T)(int32_T)
                ((int32_T)MX_Gateway_DWork.serviceClockAlarmTimer + 1);
            }
            break;

           default:
            // During 'THROTTLE_CAL_DIAGNOSTICS': '<S620>:852'
            if ((MX_Gateway_DWork.temporalCounter_i3 >=
                 CONSTANT_DATA->CAN_THROTTLE_CAL_DIAG_TIME) ||
                (state_CANThrottleCalDiag == INACTIVE)) {
              // Transition: '<S620>:854'
              MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN =
                MX_Gateway_IN_NO_STATE;

              // Entry 'NO_STATE': '<S620>:1'
              state_InfoSecondary = INACTIVE;
            }
            break;
          }
        }
        break;

       case MX_Gateway_IN_SHUTDOWN_dqeb:
        // During 'SHUTDOWN': '<S620>:2'
        if (MX_Gateway_DWork.shutdownTimer >=
            CONSTANT_DATA->DISPLAY_SHUTDOWN_TIME) {
          // Transition: '<S620>:40'
          MX_Gateway_DWork.bitsForTID2.is_DELUXE_GOOD =
            MX_Gateway_IN_NON_SHUTDOWN;

          // Entry Internal 'NON_SHUTDOWN': '<S620>:4'
          // Transition: '<S620>:53'
          MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN = MX_Gateway_IN_NO_STATE;

          // Entry 'NO_STATE': '<S620>:1'
          state_InfoSecondary = INACTIVE;
        } else {
          MX_Gateway_DWork.shutdownTimer = (uint16_T)(int32_T)((int32_T)
            MX_Gateway_DWork.shutdownTimer + 1);
        }
        break;

       default:
        // During 'VERSION': '<S620>:31'
        if ((MX_Gateway_B.RateTransition22_bwuf == SHUTDOWN) ||
            (MX_Gateway_DWork.state_LightButton != ACTIVE)) {
          // Transition: '<S620>:77'
          MX_Gateway_DWork.bitsForTID2.is_DELUXE_GOOD =
            MX_Gateway_IN_NON_SHUTDOWN;

          // Entry Internal 'NON_SHUTDOWN': '<S620>:4'
          // Transition: '<S620>:53'
          MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN = MX_Gateway_IN_NO_STATE;

          // Entry 'NO_STATE': '<S620>:1'
          state_InfoSecondary = INACTIVE;
        }
        break;
      }
    }
  }
}

// Function for Chart: '<S596>/Display_Type'
static void MX_Gatewa_enter_internal_ACTIVE(void)
{
  // Entry Internal 'ACTIVE': '<S620>:884'
  switch (MX_Gateway_DWork.bitsForTID2.was_ACTIVE) {
   case MX_Gateway_IN_BATTERY_VOLTAGE:
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_BATTERY_VOLTAGE;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_BATTERY_VOLTAGE;

    // Entry 'BATTERY_VOLTAGE': '<S620>:14'
    state_InfoPrimary = DISPLAY_BATTERY_VOLTAGE;
    state_InfoButton = INACTIVE;
    break;

   case MX_Gateway_IN_ECT:
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_ECT;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_ECT;

    // Entry 'ECT': '<S620>:192'
    state_InfoPrimary = DISPLAY_ECT;
    state_InfoButton = INACTIVE;
    break;

   case MX_Gateway_IN_EMEA_CONTROLS1:
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_EMEA_CONTROLS1;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_EMEA_CONTROLS1;

    // Entry 'EMEA_CONTROLS1': '<S620>:981'
    state_InfoPrimary = DISPLAY_EMEA_CONTROLS;
    break;

   case MX_Gateway_IN_ENGINE_HOURS:
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_ENGINE_HOURS;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_ENGINE_HOURS;

    // Entry 'ENGINE_HOURS': '<S620>:15'
    state_InfoPrimary = DISPLAY_ENGINE_HOURS;
    state_InfoButton = INACTIVE;
    enable_RightLeft = INACTIVE;

    // Entry Internal 'ENGINE_HOURS': '<S620>:15'
    // Transition: '<S620>:870'
    MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS = MX_Gateway_IN_INACTIVE_bvomzg;

    // Entry 'INACTIVE': '<S620>:868'
    MX_Gateway_DWork.state_Jump = 0U;
    break;

   case MX_Gateway_IN_ENGINE_RPM:
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_ENGINE_RPM;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_ENGINE_RPM;

    // Entry 'ENGINE_RPM': '<S620>:777'
    state_InfoPrimary = DISPLAY_ENGINE_RPM;
    state_InfoButton = INACTIVE;
    break;

   case MX_Gateway_IN_EOP:
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_EOP;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_EOP;

    // Entry 'EOP': '<S620>:190'
    state_InfoPrimary = DISPLAY_EOP;
    state_InfoButton = INACTIVE;
    break;

   case MX_Gateway_IN_ERROR_CODES_pycf:
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_ERROR_CODES_pycf;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_ERROR_CODES_pycf;

    // Entry 'ERROR_CODES': '<S620>:19'
    state_InfoPrimary = DISPLAY_ERROR_CODES;
    state_InfoButton = INACTIVE;
    break;

   case MX_Gateway_IN_FACTORY:
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_FACTORY;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_FACTORY;

    // Entry 'FACTORY': '<S620>:862'
    state_InfoButton = INACTIVE;
    MX_Gateway_DWork.state_Jump = INACTIVE;

    // Entry Internal 'FACTORY': '<S620>:862'
    // Transition: '<S620>:901'
    if (CONSTANT_DATA->HOT_FUNCTION != NON_FUNCTIONAL) {
      // Transition: '<S620>:903'
      MX_Gateway_DWork.bitsForTID2.is_FACTORY = MX_Gateway_IN_HOT;

      // Entry 'HOT': '<S620>:898'
      state_InfoPrimary = DISPLAY_HOT;
    } else {
      // Transition: '<S620>:900'
      MX_Gateway_DWork.bitsForTID2.is_FACTORY = MX_Gateway_IN_ECT_al12;

      // Entry 'ECT': '<S620>:899'
      state_InfoPrimary = DISPLAY_ECT;
    }
    break;

   case MX_Gateway_IN_HOT2:
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_HOT2;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_HOT2;

    // Entry 'HOT2': '<S620>:193'
    state_InfoPrimary = DISPLAY_HOT;
    state_InfoButton = INACTIVE;
    break;

   case MX_Gateway_IN_JOB_CLOCK_1:
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_JOB_CLOCK_1;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_JOB_CLOCK_1;

    // Entry 'JOB_CLOCK_1': '<S620>:781'
    state_InfoPrimary = DISPLAY_JOB_CLOCK_1;
    state_InfoButton = INACTIVE;
    enable_RightLeft = INACTIVE;

    // Entry Internal 'JOB_CLOCK_1': '<S620>:781'
    // Transition: '<S620>:782'
    MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_1 = MX_Gateway_IN_INACTIVE_bvomzg;

    // Entry 'INACTIVE': '<S620>:786'
    MX_Gateway_DWork.state_Jump = 0U;
    break;

   case MX_Gateway_IN_JOB_CLOCK_2:
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_JOB_CLOCK_2;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_JOB_CLOCK_2;

    // Entry 'JOB_CLOCK_2': '<S620>:825'
    state_InfoPrimary = DISPLAY_JOB_CLOCK_2;
    state_InfoButton = INACTIVE;
    enable_RightLeft = INACTIVE;

    // Entry Internal 'JOB_CLOCK_2': '<S620>:825'
    // Transition: '<S620>:826'
    MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_2 = MX_Gateway_IN_INACTIVE_bvomzg;

    // Entry 'INACTIVE': '<S620>:831'
    MX_Gateway_DWork.state_Jump = 0U;
    break;

   case MX_Gateway_IN_JOB_CLOCK_RESET1:
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_JOB_CLOCK_RESET1;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_JOB_CLOCK_RESET1;
    MX_Gateway_DWork.temporalCounter_i2_gfi0 = 0U;

    // Entry 'JOB_CLOCK_RESET1': '<S620>:819'
    eeMirror.jobClockLHP[0] = 0U;
    matlab_UpdateEEVar();
    break;

   case MX_Gateway_IN_JOB_CLOCK_RESET2:
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_JOB_CLOCK_RESET2;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_JOB_CLOCK_RESET2;
    MX_Gateway_DWork.temporalCounter_i2_gfi0 = 0U;

    // Entry 'JOB_CLOCK_RESET2': '<S620>:823'
    eeMirror.jobClockLHP[1] = 0U;
    matlab_UpdateEEVar();
    break;

   case MX_Gateway_IN_SERVICE_CLOCK:
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_SERVICE_CLOCK;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_SERVICE_CLOCK;

    // Entry 'SERVICE_CLOCK': '<S620>:16'
    state_InfoPrimary = DISPLAY_SERVICE_CLOCK;
    state_InfoButton = INACTIVE;
    enable_RightLeft = INACTIVE;

    // Entry Internal 'SERVICE_CLOCK': '<S620>:16'
    // Transition: '<S620>:66'
    MX_Gateway_DWork.bitsForTID2.is_SERVICE_CLOCK =
      MX_Gateway_IN_INACTIVE_bvomzg;

    // Entry 'INACTIVE': '<S620>:22'
    MX_Gateway_DWork.state_Jump = 0U;
    break;

   case MX_Gatew_IN_SERVICE_CLOCK_RESET:
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gatew_IN_SERVICE_CLOCK_RESET;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gatew_IN_SERVICE_CLOCK_RESET;
    MX_Gateway_DWork.temporalCounter_i2_gfi0 = 0U;

    // Entry 'SERVICE_CLOCK_RESET': '<S620>:18'
    state_InfoPrimary = DISPLAY_SERVICE_CLOCK_RESET;
    break;

   default:
    // Transition: '<S620>:59'
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_ENGINE_HOURS;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_ENGINE_HOURS;

    // Entry 'ENGINE_HOURS': '<S620>:15'
    state_InfoPrimary = DISPLAY_ENGINE_HOURS;
    state_InfoButton = INACTIVE;
    enable_RightLeft = INACTIVE;

    // Entry Internal 'ENGINE_HOURS': '<S620>:15'
    // Transition: '<S620>:870'
    MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS = MX_Gateway_IN_INACTIVE_bvomzg;

    // Entry 'INACTIVE': '<S620>:868'
    MX_Gateway_DWork.state_Jump = 0U;
    break;
  }
}

// Function for Chart: '<S596>/Display_Type'
static void MX_Gateway_JOB_CLOCK_2(void)
{
  state_InfoPrimary = DISPLAY_JOB_CLOCK_2;
  enable_RightLeft = INACTIVE;

  // During 'JOB_CLOCK_2': '<S620>:825'
  if (state_InfoButton == ACTIVE) {
    // Transition: '<S620>:57'
    // Exit Internal 'JOB_CLOCK_2': '<S620>:825'
    MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_2 =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_ENGINE_RPM;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_ENGINE_RPM;

    // Entry 'ENGINE_RPM': '<S620>:777'
    state_InfoPrimary = DISPLAY_ENGINE_RPM;
    state_InfoButton = INACTIVE;
  } else if (MX_Gateway_DWork.state_Jump == ACTIVE) {
    // Transition: '<S620>:833'
    // Exit Internal 'JOB_CLOCK_2': '<S620>:825'
    MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_2 =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_JOB_CLOCK_RESET2;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_JOB_CLOCK_RESET2;
    MX_Gateway_DWork.temporalCounter_i2_gfi0 = 0U;

    // Entry 'JOB_CLOCK_RESET2': '<S620>:823'
    eeMirror.jobClockLHP[1] = 0U;
    matlab_UpdateEEVar();
  } else {
    switch (MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_2) {
     case MX_Gateway_IN_DEBOUNCE_kfhl:
      // During 'DEBOUNCE': '<S620>:832'
      if ((int32_T)MX_Gateway_DWork.debounceCount_cmr2 >= 25) {
        // Transition: '<S620>:829'
        MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_2 = MX_Gateway_IN_RESET_STATE;

        // Entry 'RESET_STATE': '<S620>:830'
        MX_Gateway_DWork.state_Jump = ACTIVE;
      } else if ((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] &
                           (int32_T)INFO_BUTTON_MASK) == (int32_T)INACTIVE) {
        // Transition: '<S620>:827'
        MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_2 =
          MX_Gateway_IN_INACTIVE_bvomzg;

        // Entry 'INACTIVE': '<S620>:831'
        MX_Gateway_DWork.state_Jump = 0U;
      } else {
        MX_Gateway_DWork.debounceCount_cmr2 = (uint16_T)(int32_T)((int32_T)
          MX_Gateway_DWork.debounceCount_cmr2 + 1);
      }
      break;

     case MX_Gateway_IN_INACTIVE_bvomzg:
      // During 'INACTIVE': '<S620>:831'
      if (((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] & (int32_T)
                     INFO_BUTTON_MASK) == (int32_T)INFO_BUTTON_PRESS) &&
          (state_InfoSecondary == INACTIVE)) {
        // Transition: '<S620>:828'
        MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_2 =
          MX_Gateway_IN_DEBOUNCE_kfhl;

        // Entry 'DEBOUNCE': '<S620>:832'
        MX_Gateway_DWork.debounceCount_cmr2 = 0U;
      }
      break;

     default:
      // During 'RESET_STATE': '<S620>:830'
      break;
    }
  }
}

// Function for Chart: '<S596>/Display_Type'
static void MX_Gateway_JOB_CLOCK_RESET1(void)
{
  // During 'JOB_CLOCK_RESET1': '<S620>:819'
  if ((int32_T)MX_Gateway_DWork.temporalCounter_i2_gfi0 >= 10) {
    // Transition: '<S620>:821'
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_JOB_CLOCK_1;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_JOB_CLOCK_1;

    // Entry 'JOB_CLOCK_1': '<S620>:781'
    state_InfoPrimary = DISPLAY_JOB_CLOCK_1;
    state_InfoButton = INACTIVE;
    enable_RightLeft = INACTIVE;

    // Entry Internal 'JOB_CLOCK_1': '<S620>:781'
    // Transition: '<S620>:782'
    MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_1 = MX_Gateway_IN_INACTIVE_bvomzg;

    // Entry 'INACTIVE': '<S620>:786'
    MX_Gateway_DWork.state_Jump = 0U;
  }
}

// Function for Chart: '<S596>/Display_Type'
static void MX_Gateway_JOB_CLOCK_RESET2(void)
{
  // During 'JOB_CLOCK_RESET2': '<S620>:823'
  if ((int32_T)MX_Gateway_DWork.temporalCounter_i2_gfi0 >= 10) {
    // Transition: '<S620>:824'
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_JOB_CLOCK_2;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_JOB_CLOCK_2;

    // Entry 'JOB_CLOCK_2': '<S620>:825'
    state_InfoPrimary = DISPLAY_JOB_CLOCK_2;
    state_InfoButton = INACTIVE;
    enable_RightLeft = INACTIVE;

    // Entry Internal 'JOB_CLOCK_2': '<S620>:825'
    // Transition: '<S620>:826'
    MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_2 = MX_Gateway_IN_INACTIVE_bvomzg;

    // Entry 'INACTIVE': '<S620>:831'
    MX_Gateway_DWork.state_Jump = 0U;
  }
}

// Function for Chart: '<S596>/Display_Type'
static void MX_Gateway_SERVICE_CLOCK(void)
{
  state_InfoPrimary = DISPLAY_SERVICE_CLOCK;
  enable_RightLeft = INACTIVE;

  // During 'SERVICE_CLOCK': '<S620>:16'
  if (MX_Gateway_DWork.state_Jump == ACTIVE) {
    // Transition: '<S620>:60'
    // Exit Internal 'SERVICE_CLOCK': '<S620>:16'
    MX_Gateway_DWork.bitsForTID2.is_SERVICE_CLOCK =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gatew_IN_SERVICE_CLOCK_RESET;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gatew_IN_SERVICE_CLOCK_RESET;
    MX_Gateway_DWork.temporalCounter_i2_gfi0 = 0U;

    // Entry 'SERVICE_CLOCK_RESET': '<S620>:18'
    state_InfoPrimary = DISPLAY_SERVICE_CLOCK_RESET;
  } else if (state_InfoButton == ACTIVE) {
    // Transition: '<S620>:50'
    // Exit Internal 'SERVICE_CLOCK': '<S620>:16'
    MX_Gateway_DWork.bitsForTID2.is_SERVICE_CLOCK =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_ERROR_CODES_pycf;
    MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_ERROR_CODES_pycf;

    // Entry 'ERROR_CODES': '<S620>:19'
    state_InfoPrimary = DISPLAY_ERROR_CODES;
    state_InfoButton = INACTIVE;
  } else {
    switch (MX_Gateway_DWork.bitsForTID2.is_SERVICE_CLOCK) {
     case MX_Gateway_IN_DEBOUNCE_kfhl:
      // During 'DEBOUNCE': '<S620>:20'
      if ((int32_T)MX_Gateway_DWork.debounceCount_cmr2 >= 70) {
        // Transition: '<S620>:67'
        MX_Gateway_DWork.bitsForTID2.is_SERVICE_CLOCK = MX_Gateway_IN_JUMP_STATE;

        // Entry 'JUMP_STATE': '<S620>:21'
        MX_Gateway_DWork.state_Jump = ACTIVE;
      } else if ((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] &
                           (int32_T)INFO_BUTTON_MASK) == (int32_T)INACTIVE) {
        // Transition: '<S620>:69'
        MX_Gateway_DWork.bitsForTID2.is_SERVICE_CLOCK =
          MX_Gateway_IN_INACTIVE_bvomzg;

        // Entry 'INACTIVE': '<S620>:22'
        MX_Gateway_DWork.state_Jump = 0U;
      } else {
        MX_Gateway_DWork.debounceCount_cmr2 = (uint16_T)(int32_T)((int32_T)
          MX_Gateway_DWork.debounceCount_cmr2 + 1);
      }
      break;

     case MX_Gateway_IN_INACTIVE_bvomzg:
      // During 'INACTIVE': '<S620>:22'
      if (((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] & (int32_T)
                     INFO_BUTTON_MASK) == (int32_T)INFO_BUTTON_PRESS) &&
          (MX_Gateway_B.RateTransition31_hc54 == ACTIVE) && (state_InfoSecondary
           == INACTIVE)) {
        // Transition: '<S620>:65'
        MX_Gateway_DWork.bitsForTID2.is_SERVICE_CLOCK =
          MX_Gateway_IN_DEBOUNCE_kfhl;

        // Entry 'DEBOUNCE': '<S620>:20'
        MX_Gateway_DWork.debounceCount_cmr2 = 0U;
      }
      break;

     default:
      // During 'JUMP_STATE': '<S620>:21'
      break;
    }
  }
}

// Function for Chart: '<S596>/Display_Type'
static void MX_Gateway_ACTIVE(void)
{
  // During 'ACTIVE': '<S620>:884'
  if ((state_InfoSecondary != INACTIVE) && ((state_InfoSecondary !=
        MX_Gateway_DWork.prev_InfoSecondary) || ((int32_T)
        MX_Gateway_DWork.temporalCounter_i1_lbig >= 40))) {
    // Transition: '<S620>:888'
    // Exit Internal 'ACTIVE': '<S620>:884'
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'ENGINE_HOURS': '<S620>:15'
    MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'FACTORY': '<S620>:862'
    MX_Gateway_DWork.bitsForTID2.is_FACTORY = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'JOB_CLOCK_1': '<S620>:781'
    MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_1 =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'JOB_CLOCK_2': '<S620>:825'
    MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_2 =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'SERVICE_CLOCK': '<S620>:16'
    MX_Gateway_DWork.bitsForTID2.is_SERVICE_CLOCK =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
    MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE = MX_Gateway_IN_INACTIVE_bvomz;

    // Entry 'INACTIVE': '<S620>:887'
    state_InfoPrimary = DISPLAY_PRIMARY_INACTIVE;
    MX_Gateway_DWork.prev_InfoSecondary = state_InfoSecondary;
  } else if ((CONSTANT_DATA->AUTO_DISPLAY_FAULT_FUNCTION != NON_FUNCTIONAL) &&
             ((int32_T)flag_StdActiveWarn != 0) && (eeMirror.deluxe_G5 != ACTIVE)
             && (CONSTANT_DATA->DELUXE_GEN5_5_FUNCTION == NON_FUNCTIONAL)) {
    // Transition: '<S620>:923'
    // Exit Internal 'ACTIVE': '<S620>:884'
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'ENGINE_HOURS': '<S620>:15'
    MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'FACTORY': '<S620>:862'
    MX_Gateway_DWork.bitsForTID2.is_FACTORY = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'JOB_CLOCK_1': '<S620>:781'
    MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_1 =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'JOB_CLOCK_2': '<S620>:825'
    MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_2 =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'SERVICE_CLOCK': '<S620>:16'
    MX_Gateway_DWork.bitsForTID2.is_SERVICE_CLOCK =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
    MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE = MX_Gateway_IN_ERROR_CODES;
    MX_Gateway_DWork.temporalCounter_i1_lbig = 0U;

    // Entry 'ERROR_CODES': '<S620>:922'
    state_InfoPrimary = DISPLAY_ERROR_CODES;
    state_InfoButton = INACTIVE;
    MX_Gateway_DWork.debounceCode = 0U;
  } else if ((CONSTANT_DATA->EMEA_CONTROLS_DISPLAY_MODE != NON_FUNCTIONAL) &&
             mode_ControlChange && (state_InfoPrimary != DISPLAY_EMEA_CONTROLS))
  {
    // Transition: '<S620>:963'
    // Exit Internal 'ACTIVE': '<S620>:884'
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'ENGINE_HOURS': '<S620>:15'
    MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'FACTORY': '<S620>:862'
    MX_Gateway_DWork.bitsForTID2.is_FACTORY = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'JOB_CLOCK_1': '<S620>:781'
    MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_1 =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'JOB_CLOCK_2': '<S620>:825'
    MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_2 =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'SERVICE_CLOCK': '<S620>:16'
    MX_Gateway_DWork.bitsForTID2.is_SERVICE_CLOCK =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
    MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE =
      MX_Gatewa_IN_EMEA_CONTROLS_m253;
    MX_Gateway_DWork.temporalCounter_i1_lbig = 0U;

    // Entry 'EMEA_CONTROLS': '<S620>:961'
    state_InfoPrimary = DISPLAY_EMEA_CONTROLS;
    MX_Gateway_DWork.prev_InfoSecondary = state_InfoSecondary;
  } else if ((CONSTANT_DATA->SECOND_AUX_FUNCTION != NON_FUNCTIONAL) &&
             (MX_Gateway_B.RateTransition29_pq5l == (int32_T)ACTIVE) &&
             (MX_Gateway_DWork.bitsForTID2.prev_SecondAux == (int32_T)INACTIVE))
  {
    // Transition: '<S620>:944'
    // Exit Internal 'ACTIVE': '<S620>:884'
    MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'ENGINE_HOURS': '<S620>:15'
    MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'FACTORY': '<S620>:862'
    MX_Gateway_DWork.bitsForTID2.is_FACTORY = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'JOB_CLOCK_1': '<S620>:781'
    MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_1 =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'JOB_CLOCK_2': '<S620>:825'
    MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_2 =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;

    // Exit Internal 'SERVICE_CLOCK': '<S620>:16'
    MX_Gateway_DWork.bitsForTID2.is_SERVICE_CLOCK =
      MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
    MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE = MX_Gateway_IN_SECOND_AUX;

    // Entry 'SECOND_AUX': '<S620>:943'
    state_InfoPrimary = DISPLAY_SECOND_AUX;
    MX_Gateway_DWork.prev_InfoSecondary = state_InfoSecondary;
    MX_Gateway_DWork.bitsForTID2.prev_SecondAux = ((int32_T)ACTIVE != 0);
  } else {
    if ((int32_T)MX_Gateway_DWork.temporalCounter_i1_lbig >= 50) {
      MX_Gateway_DWork.bitsForTID2.prev_SecondAux = ((int32_T)INACTIVE != 0);
    }

    switch (MX_Gateway_DWork.bitsForTID2.is_ACTIVE) {
     case MX_Gateway_IN_BATTERY_VOLTAGE:
      state_InfoPrimary = DISPLAY_BATTERY_VOLTAGE;

      // During 'BATTERY_VOLTAGE': '<S620>:14'
      if (state_InfoButton == ACTIVE) {
        // Transition: '<S620>:247'
        MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_SERVICE_CLOCK;
        MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_SERVICE_CLOCK;

        // Entry 'SERVICE_CLOCK': '<S620>:16'
        state_InfoPrimary = DISPLAY_SERVICE_CLOCK;
        state_InfoButton = INACTIVE;
        enable_RightLeft = INACTIVE;

        // Entry Internal 'SERVICE_CLOCK': '<S620>:16'
        // Transition: '<S620>:66'
        MX_Gateway_DWork.bitsForTID2.is_SERVICE_CLOCK =
          MX_Gateway_IN_INACTIVE_bvomzg;

        // Entry 'INACTIVE': '<S620>:22'
        MX_Gateway_DWork.state_Jump = 0U;
      }
      break;

     case MX_Gateway_IN_ECT:
      state_InfoPrimary = DISPLAY_ECT;

      // During 'ECT': '<S620>:192'
      if (state_InfoButton == ACTIVE) {
        // Transition: '<S620>:197'
        MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_HOT2;
        MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_HOT2;

        // Entry 'HOT2': '<S620>:193'
        state_InfoPrimary = DISPLAY_HOT;
        state_InfoButton = INACTIVE;
      }
      break;

     case MX_Gateway_IN_EMEA_CONTROLS1:
      state_InfoPrimary = DISPLAY_EMEA_CONTROLS;

      // During 'EMEA_CONTROLS1': '<S620>:981'
      if (state_InfoButton == ACTIVE) {
        // Transition: '<S620>:983'
        MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_BATTERY_VOLTAGE;
        MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_BATTERY_VOLTAGE;

        // Entry 'BATTERY_VOLTAGE': '<S620>:14'
        state_InfoPrimary = DISPLAY_BATTERY_VOLTAGE;
        state_InfoButton = INACTIVE;
      }
      break;

     case MX_Gateway_IN_ENGINE_HOURS:
      state_InfoPrimary = DISPLAY_ENGINE_HOURS;
      enable_RightLeft = INACTIVE;

      // During 'ENGINE_HOURS': '<S620>:15'
      if (MX_Gateway_DWork.state_Jump == ACTIVE) {
        // Transition: '<S620>:864'
        // Exit Internal 'ENGINE_HOURS': '<S620>:15'
        MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS =
          MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
        MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_FACTORY;
        MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_FACTORY;

        // Entry 'FACTORY': '<S620>:862'
        state_InfoButton = INACTIVE;
        MX_Gateway_DWork.state_Jump = INACTIVE;

        // Entry Internal 'FACTORY': '<S620>:862'
        // Transition: '<S620>:901'
        if (CONSTANT_DATA->HOT_FUNCTION != NON_FUNCTIONAL) {
          // Transition: '<S620>:903'
          MX_Gateway_DWork.bitsForTID2.is_FACTORY = MX_Gateway_IN_HOT;

          // Entry 'HOT': '<S620>:898'
          state_InfoPrimary = DISPLAY_HOT;
        } else {
          // Transition: '<S620>:900'
          MX_Gateway_DWork.bitsForTID2.is_FACTORY = MX_Gateway_IN_ECT_al12;

          // Entry 'ECT': '<S620>:899'
          state_InfoPrimary = DISPLAY_ECT;
        }
      } else if (state_InfoButton == ACTIVE) {
        // Transition: '<S620>:55'
        // Exit Internal 'ENGINE_HOURS': '<S620>:15'
        MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS =
          MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
        MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_JOB_CLOCK_1;
        MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_JOB_CLOCK_1;

        // Entry 'JOB_CLOCK_1': '<S620>:781'
        state_InfoPrimary = DISPLAY_JOB_CLOCK_1;
        state_InfoButton = INACTIVE;

        // Entry Internal 'JOB_CLOCK_1': '<S620>:781'
        // Transition: '<S620>:782'
        MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_1 =
          MX_Gateway_IN_INACTIVE_bvomzg;

        // Entry 'INACTIVE': '<S620>:786'
        MX_Gateway_DWork.state_Jump = 0U;
      } else if (MX_Gateway_B.RateTransition22_bwuf == ENGINE_CRANKING) {
        // Transition: '<S620>:894'
        // Exit Internal 'ENGINE_HOURS': '<S620>:15'
        MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS =
          MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
        MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_ENGINE_RPM;
        MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_ENGINE_RPM;

        // Entry 'ENGINE_RPM': '<S620>:777'
        state_InfoPrimary = DISPLAY_ENGINE_RPM;
        state_InfoButton = INACTIVE;
      } else {
        switch (MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS) {
         case MX_Gateway_IN_DEBOUNCE_kfhl:
          // During 'DEBOUNCE': '<S620>:867'
          if ((int32_T)MX_Gateway_DWork.debounceCount_cmr2 >= 50) {
            // Transition: '<S620>:869'
            MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS =
              MX_Gateway_IN_RESET_STATE;

            // Entry 'RESET_STATE': '<S620>:866'
            MX_Gateway_DWork.state_Jump = ACTIVE;
          } else if ((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] &
                               (int32_T)INFO_BUTTON_MASK) == (int32_T)INACTIVE)
          {
            // Transition: '<S620>:872'
            MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS =
              MX_Gateway_IN_INACTIVE_bvomzg;

            // Entry 'INACTIVE': '<S620>:868'
            MX_Gateway_DWork.state_Jump = 0U;
          } else {
            MX_Gateway_DWork.debounceCount_cmr2 = (uint16_T)(int32_T)((int32_T)
              MX_Gateway_DWork.debounceCount_cmr2 + 1);
          }
          break;

         case MX_Gateway_IN_INACTIVE_bvomzg:
          // During 'INACTIVE': '<S620>:868'
          if (((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] &
                         (int32_T)INFO_BUTTON_MASK) == (int32_T)
               INFO_BUTTON_PRESS) && (state_InfoSecondary == INACTIVE)) {
            // Transition: '<S620>:871'
            MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS =
              MX_Gateway_IN_DEBOUNCE_kfhl;

            // Entry 'DEBOUNCE': '<S620>:867'
            MX_Gateway_DWork.debounceCount_cmr2 = 0U;
          }
          break;

         default:
          // During 'RESET_STATE': '<S620>:866'
          break;
        }
      }
      break;

     case MX_Gateway_IN_ENGINE_RPM:
      state_InfoPrimary = DISPLAY_ENGINE_RPM;

      // During 'ENGINE_RPM': '<S620>:777'
      if ((state_InfoButton == ACTIVE) &&
          (CONSTANT_DATA->EMEA_CONTROLS_DISPLAY_MODE != NON_FUNCTIONAL)) {
        // Transition: '<S620>:982'
        MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_EMEA_CONTROLS1;
        MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_EMEA_CONTROLS1;

        // Entry 'EMEA_CONTROLS1': '<S620>:981'
        state_InfoPrimary = DISPLAY_EMEA_CONTROLS;
      } else {
        if (state_InfoButton == ACTIVE) {
          // Transition: '<S620>:778'
          MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_BATTERY_VOLTAGE;
          MX_Gateway_DWork.bitsForTID2.was_ACTIVE =
            MX_Gateway_IN_BATTERY_VOLTAGE;

          // Entry 'BATTERY_VOLTAGE': '<S620>:14'
          state_InfoPrimary = DISPLAY_BATTERY_VOLTAGE;
          state_InfoButton = INACTIVE;
        }
      }
      break;

     case MX_Gateway_IN_EOP:
      state_InfoPrimary = DISPLAY_EOP;

      // During 'EOP': '<S620>:190'
      if (state_InfoButton == ACTIVE) {
        // Transition: '<S620>:196'
        MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_ECT;
        MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_ECT;

        // Entry 'ECT': '<S620>:192'
        state_InfoPrimary = DISPLAY_ECT;
        state_InfoButton = INACTIVE;
      }
      break;

     case MX_Gateway_IN_ERROR_CODES_pycf:
      state_InfoPrimary = DISPLAY_ERROR_CODES;

      // During 'ERROR_CODES': '<S620>:19'
      if (((int32_T)eeMirror.EngData == 1) && (state_InfoButton == ACTIVE)) {
        // Transition: '<S620>:695'
        MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_EOP;
        MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_EOP;

        // Entry 'EOP': '<S620>:190'
        state_InfoPrimary = DISPLAY_EOP;
        state_InfoButton = INACTIVE;
      } else {
        if (state_InfoButton == ACTIVE) {
          // Transition: '<S620>:200'
          // Transition: '<S620>:61'
          MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_ENGINE_HOURS;
          MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_ENGINE_HOURS;

          // Entry 'ENGINE_HOURS': '<S620>:15'
          state_InfoPrimary = DISPLAY_ENGINE_HOURS;
          state_InfoButton = INACTIVE;
          enable_RightLeft = INACTIVE;

          // Entry Internal 'ENGINE_HOURS': '<S620>:15'
          // Transition: '<S620>:870'
          MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS =
            MX_Gateway_IN_INACTIVE_bvomzg;

          // Entry 'INACTIVE': '<S620>:868'
          MX_Gateway_DWork.state_Jump = 0U;
        }
      }
      break;

     case MX_Gateway_IN_FACTORY:
      // During 'FACTORY': '<S620>:862'
      if (state_InfoButton == ACTIVE) {
        // Transition: '<S620>:865'
        // Exit Internal 'FACTORY': '<S620>:862'
        MX_Gateway_DWork.bitsForTID2.is_FACTORY =
          MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
        MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_ENGINE_HOURS;
        MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_ENGINE_HOURS;

        // Entry 'ENGINE_HOURS': '<S620>:15'
        state_InfoPrimary = DISPLAY_ENGINE_HOURS;
        state_InfoButton = INACTIVE;
        enable_RightLeft = INACTIVE;

        // Entry Internal 'ENGINE_HOURS': '<S620>:15'
        // Transition: '<S620>:870'
        MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS =
          MX_Gateway_IN_INACTIVE_bvomzg;

        // Entry 'INACTIVE': '<S620>:868'
        MX_Gateway_DWork.state_Jump = 0U;
      } else if (MX_Gateway_DWork.bitsForTID2.is_FACTORY ==
                 MX_Gateway_IN_ECT_al12) {
        state_InfoPrimary = DISPLAY_ECT;

        // During 'ECT': '<S620>:899'
      } else {
        state_InfoPrimary = DISPLAY_HOT;

        // During 'HOT': '<S620>:898'
      }
      break;

     case MX_Gateway_IN_HOT2:
      state_InfoPrimary = DISPLAY_HOT;

      // During 'HOT2': '<S620>:193'
      if (state_InfoButton == ACTIVE) {
        // Transition: '<S620>:201'
        // Transition: '<S620>:697'
        // Transition: '<S620>:61'
        MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_ENGINE_HOURS;
        MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_ENGINE_HOURS;

        // Entry 'ENGINE_HOURS': '<S620>:15'
        state_InfoPrimary = DISPLAY_ENGINE_HOURS;
        state_InfoButton = INACTIVE;
        enable_RightLeft = INACTIVE;

        // Entry Internal 'ENGINE_HOURS': '<S620>:15'
        // Transition: '<S620>:870'
        MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS =
          MX_Gateway_IN_INACTIVE_bvomzg;

        // Entry 'INACTIVE': '<S620>:868'
        MX_Gateway_DWork.state_Jump = 0U;
      }
      break;

     case MX_Gateway_IN_JOB_CLOCK_1:
      state_InfoPrimary = DISPLAY_JOB_CLOCK_1;
      enable_RightLeft = INACTIVE;

      // During 'JOB_CLOCK_1': '<S620>:781'
      if (MX_Gateway_DWork.state_Jump == ACTIVE) {
        // Transition: '<S620>:820'
        // Exit Internal 'JOB_CLOCK_1': '<S620>:781'
        MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_1 =
          MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
        MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_JOB_CLOCK_RESET1;
        MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_JOB_CLOCK_RESET1;
        MX_Gateway_DWork.temporalCounter_i2_gfi0 = 0U;

        // Entry 'JOB_CLOCK_RESET1': '<S620>:819'
        eeMirror.jobClockLHP[0] = 0U;
        matlab_UpdateEEVar();
      } else if (state_InfoButton == ACTIVE) {
        // Transition: '<S620>:780'
        // Exit Internal 'JOB_CLOCK_1': '<S620>:781'
        MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_1 =
          MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
        MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_JOB_CLOCK_2;
        MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_JOB_CLOCK_2;

        // Entry 'JOB_CLOCK_2': '<S620>:825'
        state_InfoPrimary = DISPLAY_JOB_CLOCK_2;
        state_InfoButton = INACTIVE;

        // Entry Internal 'JOB_CLOCK_2': '<S620>:825'
        // Transition: '<S620>:826'
        MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_2 =
          MX_Gateway_IN_INACTIVE_bvomzg;

        // Entry 'INACTIVE': '<S620>:831'
        MX_Gateway_DWork.state_Jump = 0U;
      } else {
        switch (MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_1) {
         case MX_Gateway_IN_DEBOUNCE_kfhl:
          // During 'DEBOUNCE': '<S620>:788'
          if ((int32_T)MX_Gateway_DWork.debounceCount_cmr2 >= 25) {
            // Transition: '<S620>:785'
            MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_1 =
              MX_Gateway_IN_RESET_STATE;

            // Entry 'RESET_STATE': '<S620>:787'
            MX_Gateway_DWork.state_Jump = ACTIVE;
          } else if ((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] &
                               (int32_T)INFO_BUTTON_MASK) == (int32_T)INACTIVE)
          {
            // Transition: '<S620>:784'
            MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_1 =
              MX_Gateway_IN_INACTIVE_bvomzg;

            // Entry 'INACTIVE': '<S620>:786'
            MX_Gateway_DWork.state_Jump = 0U;
          } else {
            MX_Gateway_DWork.debounceCount_cmr2 = (uint16_T)(int32_T)((int32_T)
              MX_Gateway_DWork.debounceCount_cmr2 + 1);
          }
          break;

         case MX_Gateway_IN_INACTIVE_bvomzg:
          // During 'INACTIVE': '<S620>:786'
          if (((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] &
                         (int32_T)INFO_BUTTON_MASK) == (int32_T)
               INFO_BUTTON_PRESS) && (state_InfoSecondary == INACTIVE)) {
            // Transition: '<S620>:783'
            MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_1 =
              MX_Gateway_IN_DEBOUNCE_kfhl;

            // Entry 'DEBOUNCE': '<S620>:788'
            MX_Gateway_DWork.debounceCount_cmr2 = 0U;
          }
          break;

         default:
          // During 'RESET_STATE': '<S620>:787'
          break;
        }
      }
      break;

     case MX_Gateway_IN_JOB_CLOCK_2:
      MX_Gateway_JOB_CLOCK_2();
      break;

     case MX_Gateway_IN_JOB_CLOCK_RESET1:
      MX_Gateway_JOB_CLOCK_RESET1();
      break;

     case MX_Gateway_IN_JOB_CLOCK_RESET2:
      MX_Gateway_JOB_CLOCK_RESET2();
      break;

     case MX_Gateway_IN_SERVICE_CLOCK:
      MX_Gateway_SERVICE_CLOCK();
      break;

     default:
      state_InfoPrimary = DISPLAY_SERVICE_CLOCK_RESET;

      // During 'SERVICE_CLOCK_RESET': '<S620>:18'
      if ((int32_T)MX_Gateway_DWork.temporalCounter_i2_gfi0 >= 70) {
        // Transition: '<S620>:52'
        MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gateway_IN_SERVICE_CLOCK;
        MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gateway_IN_SERVICE_CLOCK;

        // Entry 'SERVICE_CLOCK': '<S620>:16'
        state_InfoPrimary = DISPLAY_SERVICE_CLOCK;
        state_InfoButton = INACTIVE;
        enable_RightLeft = INACTIVE;

        // Entry Internal 'SERVICE_CLOCK': '<S620>:16'
        // Transition: '<S620>:66'
        MX_Gateway_DWork.bitsForTID2.is_SERVICE_CLOCK =
          MX_Gateway_IN_INACTIVE_bvomzg;

        // Entry 'INACTIVE': '<S620>:22'
        MX_Gateway_DWork.state_Jump = 0U;
      }
      break;
    }
  }
}

// System initialize for atomic system: '<S27>/InformationDisplay'
void MX_Gate_InformationDisplay_Init(void)
{
  // SystemInitialize for Chart: '<S596>/Display_Type'
  MX_Gateway_DWork.bitsForTID2.is_INFO_BUTTON = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
  MX_Gateway_DWork.bitsForTID2.is_PANEL_BUTTON_c2fh =
    MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
  MX_Gateway_DWork.bitsForTID2.is_PANEL_BUTTON = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
  MX_Gateway_DWork.bitsForTID2.is_LIGHT_BUTTON_STATE =
    MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
  MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE =
    MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
  MX_Gateway_DWork.bitsForTID2.is_ACTIVE = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
  MX_Gateway_DWork.bitsForTID2.was_ACTIVE = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
  MX_Gateway_DWork.bitsForTID2.is_ENGINE_HOURS = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
  MX_Gateway_DWork.bitsForTID2.is_FACTORY = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
  MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_1 = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
  MX_Gateway_DWork.bitsForTID2.is_JOB_CLOCK_2 = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
  MX_Gateway_DWork.bitsForTID2.is_SERVICE_CLOCK =
    MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
  MX_Gateway_DWork.temporalCounter_i2_gfi0 = 0U;
  MX_Gateway_DWork.temporalCounter_i1_lbig = 0U;
  MX_Gateway_DWork.bitsForTID2.is_SECONDARY_STATE =
    MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
  MX_Gateway_DWork.bitsForTID2.is_DELUXE_GOOD = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
  MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN = MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
  MX_Gateway_DWork.bitsForTID2.is_Aux_Detent_Error =
    MX_Gate_IN_NO_ACTIVE_CHILD_h3fa;
  MX_Gateway_DWork.temporalCounter_i4 = 0U;
  MX_Gateway_DWork.temporalCounter_i3 = 0U;
  MX_Gateway_DWork.bitsForTID2.is_active_c81_MX_Gateway = 0U;
  MX_Gateway_DWork.debounceCount_cmr2 = 0U;
  MX_Gateway_DWork.serviceClockAlarmTimer = 0U;
  MX_Gateway_DWork.shutdownTimer = 0U;
  MX_Gateway_DWork.state_Jump = 0U;
  MX_Gateway_DWork.state_LightButton = 0U;
  MX_Gateway_DWork.debounceButton = 0U;
  MX_Gateway_DWork.debounceLeft = 0U;
  MX_Gateway_DWork.debounceRight = 0U;
  MX_Gateway_DWork.prev_InfoSecondary = 0U;
  MX_Gateway_DWork.debounceCode = 0U;
  MX_Gateway_DWork.bitsForTID2.prev_SecondAux = false;
  state_InfoPrimary = 0U;
  state_InfoButton = 0U;
  state_InfoSecondary = 0U;
  state_RightButton = 0U;
  state_LeftButton = 0U;
  enable_RightLeft = 0U;
}

// Output and update for atomic system: '<S27>/InformationDisplay'
void MX_Gateway_InformationDisplay(void)
{
  boolean_T FixPtRelationalOperator_ksvm;
  boolean_T guard1 = false;
  boolean_T guard2 = false;

  // RelationalOperator: '<S619>/FixPt Relational Operator' incorporates:
  //   UnitDelay: '<S619>/Delay Input1'

  FixPtRelationalOperator_ksvm = ((int32_T)MX_Gateway_B.RateTransition29_pq5l <
    (int32_T)MX_Gateway_DWork.DelayInput1_DSTATE_lxjv);

  // Chart: '<S596>/Display_Type'
  // Gateway: MX_Gtwy_Control/PanelInterface/InformationDisplay/Display_Type
  if ((uint32_T)MX_Gateway_DWork.temporalCounter_i1_lbig < 65535U) {
    MX_Gateway_DWork.temporalCounter_i1_lbig = (uint16_T)(int32_T)((int32_T)
      MX_Gateway_DWork.temporalCounter_i1_lbig + 1);
  }

  if ((uint32_T)MX_Gateway_DWork.temporalCounter_i2_gfi0 < 127U) {
    MX_Gateway_DWork.temporalCounter_i2_gfi0 = (uint8_T)(int32_T)((int32_T)
      MX_Gateway_DWork.temporalCounter_i2_gfi0 + 1);
  }

  if ((uint32_T)MX_Gateway_DWork.temporalCounter_i3 < 65535U) {
    MX_Gateway_DWork.temporalCounter_i3 = (uint16_T)(int32_T)((int32_T)
      MX_Gateway_DWork.temporalCounter_i3 + 1);
  }

  if ((uint32_T)MX_Gateway_DWork.temporalCounter_i4 < 65535U) {
    MX_Gateway_DWork.temporalCounter_i4 = (uint16_T)(int32_T)((int32_T)
      MX_Gateway_DWork.temporalCounter_i4 + 1);
  }

  // During: MX_Gtwy_Control/PanelInterface/InformationDisplay/Display_Type
  if ((uint32_T)MX_Gateway_DWork.bitsForTID2.is_active_c81_MX_Gateway == 0U) {
    // Entry: MX_Gtwy_Control/PanelInterface/InformationDisplay/Display_Type
    MX_Gateway_DWork.bitsForTID2.is_active_c81_MX_Gateway = 1U;

    // Entry Internal: MX_Gtwy_Control/PanelInterface/InformationDisplay/Display_Type 
    // Entry Internal 'BUTTON_STATE': '<S620>:11'
    // Entry Internal 'INFO_BUTTON': '<S620>:313'
    // Transition: '<S620>:41'
    MX_Gateway_DWork.bitsForTID2.is_INFO_BUTTON = MX_Gateway_IN_INACTIVE_bvom;

    // Entry 'INACTIVE': '<S620>:10'
    state_InfoButton = INACTIVE;

    // Entry Internal 'MOVE_RIGHT': '<S620>:314'
    // Entry Internal 'PANEL_BUTTON': '<S620>:405'
    // Transition: '<S620>:315'
    MX_Gateway_DWork.bitsForTID2.is_PANEL_BUTTON = MX_Gateway_IN_INACTIVE_bvom;

    // Entry 'INACTIVE': '<S620>:321'
    state_LeftButton = INACTIVE;

    // Entry Internal 'MOVE_LEFT': '<S620>:325'
    // Entry Internal 'PANEL_BUTTON': '<S620>:438'
    // Transition: '<S620>:326'
    MX_Gateway_DWork.bitsForTID2.is_PANEL_BUTTON_c2fh =
      MX_Gateway_IN_INACTIVE_bvom;

    // Entry 'INACTIVE': '<S620>:332'
    state_RightButton = INACTIVE;

    // Entry Internal 'SECONDARY_STATE': '<S620>:3'
    // Transition: '<S620>:90'
    MX_Gateway_DWork.bitsForTID2.is_SECONDARY_STATE = MX_Gateway_IN_DELUXE_GOOD;

    // Entry Internal 'DELUXE_GOOD': '<S620>:24'
    // Transition: '<S620>:63'
    MX_Gateway_DWork.bitsForTID2.is_DELUXE_GOOD = MX_Gateway_IN_NON_SHUTDOWN;

    // Entry Internal 'NON_SHUTDOWN': '<S620>:4'
    // Transition: '<S620>:53'
    MX_Gateway_DWork.bitsForTID2.is_NON_SHUTDOWN = MX_Gateway_IN_NO_STATE;

    // Entry 'NO_STATE': '<S620>:1'
    state_InfoSecondary = INACTIVE;

    // Entry Internal 'PRIMARY_STATE': '<S620>:12'
    // Transition: '<S620>:890'
    MX_Gateway_DWork.prev_InfoSecondary = INACTIVE;
    MX_Gateway_DWork.bitsForTID2.prev_SecondAux = ((int32_T)INACTIVE != 0);
    MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE = MX_Gateway_IN_ACTIVE_jlqb;
    MX_Gateway_DWork.temporalCounter_i1_lbig = 0U;
    MX_Gatewa_enter_internal_ACTIVE();

    // Entry Internal 'LIGHT_BUTTON_STATE': '<S620>:27'
    // Transition: '<S620>:71'
    MX_Gateway_DWork.bitsForTID2.is_LIGHT_BUTTON_STATE =
      MX_Gateway_IN_INACTIVE_bvom;

    // Entry 'INACTIVE': '<S620>:28'
    MX_Gateway_DWork.state_LightButton = INACTIVE;
  } else {
    // During 'BUTTON_STATE': '<S620>:11'
    // During 'INFO_BUTTON': '<S620>:313'
    switch (MX_Gateway_DWork.bitsForTID2.is_INFO_BUTTON) {
     case MX_Gateway_IN_ACTIVE_jlqb:
      // During 'ACTIVE': '<S620>:8'
      if ((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] & (int32_T)
                    INFO_BUTTON_MASK) == (int32_T)INACTIVE) {
        // Transition: '<S620>:46'
        MX_Gateway_DWork.bitsForTID2.is_INFO_BUTTON =
          MX_Gateway_IN_INACTIVE_bvom;

        // Entry 'INACTIVE': '<S620>:10'
        state_InfoButton = INACTIVE;
      }
      break;

     case MX_Gateway_IN_EDGE:
      // During 'EDGE': '<S620>:9'
      if (((int32_T)MX_Gateway_DWork.debounceButton > 100) ||
          (MX_Gateway_DWork.state_Jump == ACTIVE)) {
        // Transition: '<S620>:54'
        MX_Gateway_DWork.bitsForTID2.is_INFO_BUTTON =
          MX_Gatewa_IN_INACTIVE_WAIT_dudm;

        // Entry 'INACTIVE_WAIT': '<S620>:26'
        state_InfoButton = INACTIVE;
      } else if (((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] &
                            (int32_T)INFO_BUTTON_MASK) == (int32_T)INACTIVE) &&
                 (MX_Gateway_DWork.state_Jump != ACTIVE)) {
        // Transition: '<S620>:45'
        MX_Gateway_DWork.bitsForTID2.is_INFO_BUTTON = MX_Gateway_IN_ACTIVE_jlqb;

        // Entry 'ACTIVE': '<S620>:8'
        state_InfoButton = ACTIVE;
      } else {
        MX_Gateway_DWork.debounceButton = (uint16_T)(int32_T)((int32_T)
          MX_Gateway_DWork.debounceButton + 1);
      }
      break;

     case MX_Gateway_IN_INACTIVE_bvom:
      // During 'INACTIVE': '<S620>:10'
      if ((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] & (int32_T)
                    INFO_BUTTON_MASK) == (int32_T)INFO_BUTTON_PRESS) {
        // Transition: '<S620>:44'
        MX_Gateway_DWork.bitsForTID2.is_INFO_BUTTON = MX_Gateway_IN_EDGE;

        // Entry 'EDGE': '<S620>:9'
        MX_Gateway_DWork.debounceButton = 0U;
      }
      break;

     default:
      // During 'INACTIVE_WAIT': '<S620>:26'
      if ((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] & (int32_T)
                    INFO_BUTTON_MASK) == (int32_T)INACTIVE) {
        // Transition: '<S620>:64'
        MX_Gateway_DWork.bitsForTID2.is_INFO_BUTTON =
          MX_Gateway_IN_INACTIVE_bvom;

        // Entry 'INACTIVE': '<S620>:10'
        state_InfoButton = INACTIVE;
      }
      break;
    }

    // During 'MOVE_RIGHT': '<S620>:314'
    // During 'PANEL_BUTTON': '<S620>:405'
    switch (MX_Gateway_DWork.bitsForTID2.is_PANEL_BUTTON) {
     case MX_Gateway_IN_ACTIVE_jlqb:
      state_LeftButton = ACTIVE;

      // During 'ACTIVE': '<S620>:324'
      if ((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] & (int32_T)
                    RIGHT_BUTTON_MASK) == (int32_T)INACTIVE) {
        // Transition: '<S620>:317'
        MX_Gateway_DWork.bitsForTID2.is_PANEL_BUTTON =
          MX_Gateway_IN_INACTIVE_bvom;

        // Entry 'INACTIVE': '<S620>:321'
        state_LeftButton = INACTIVE;
      }
      break;

     case MX_Gateway_IN_EDGE:
      // During 'EDGE': '<S620>:322'
      if ((int32_T)MX_Gateway_DWork.debounceRight > 100) {
        // Transition: '<S620>:319'
        MX_Gateway_DWork.bitsForTID2.is_PANEL_BUTTON =
          MX_Gatewa_IN_INACTIVE_WAIT_dudm;

        // Entry 'INACTIVE_WAIT': '<S620>:323'
        state_LeftButton = INACTIVE;
      } else if ((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] &
                           (int32_T)RIGHT_BUTTON_MASK) == (int32_T)INACTIVE) {
        // Transition: '<S620>:320'
        MX_Gateway_DWork.bitsForTID2.is_PANEL_BUTTON = MX_Gateway_IN_ACTIVE_jlqb;

        // Entry 'ACTIVE': '<S620>:324'
        state_LeftButton = ACTIVE;
      } else {
        MX_Gateway_DWork.debounceRight = (uint16_T)(int32_T)((int32_T)
          MX_Gateway_DWork.debounceRight + 1);
      }
      break;

     case MX_Gateway_IN_INACTIVE_bvom:
      state_LeftButton = INACTIVE;

      // During 'INACTIVE': '<S620>:321'
      if (((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] & (int32_T)
                     RIGHT_BUTTON_MASK) == (int32_T)RIGHT_BUTTON_PRESS) &&
          ((int32_T)enable_RightLeft != 0)) {
        // Transition: '<S620>:316'
        MX_Gateway_DWork.bitsForTID2.is_PANEL_BUTTON = MX_Gateway_IN_EDGE;

        // Entry 'EDGE': '<S620>:322'
        MX_Gateway_DWork.debounceRight = 0U;
      }
      break;

     default:
      state_LeftButton = INACTIVE;

      // During 'INACTIVE_WAIT': '<S620>:323'
      if ((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] & (int32_T)
                    RIGHT_BUTTON_MASK) == (int32_T)INACTIVE) {
        // Transition: '<S620>:318'
        MX_Gateway_DWork.bitsForTID2.is_PANEL_BUTTON =
          MX_Gateway_IN_INACTIVE_bvom;

        // Entry 'INACTIVE': '<S620>:321'
      }
      break;
    }

    // During 'MOVE_LEFT': '<S620>:325'
    // During 'PANEL_BUTTON': '<S620>:438'
    switch (MX_Gateway_DWork.bitsForTID2.is_PANEL_BUTTON_c2fh) {
     case MX_Gateway_IN_ACTIVE_jlqb:
      state_RightButton = ACTIVE;

      // During 'ACTIVE': '<S620>:335'
      if ((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] & (int32_T)
                    LEFT_BUTTON_MASK) == (int32_T)INACTIVE) {
        // Transition: '<S620>:328'
        MX_Gateway_DWork.bitsForTID2.is_PANEL_BUTTON_c2fh =
          MX_Gateway_IN_INACTIVE_bvom;

        // Entry 'INACTIVE': '<S620>:332'
        state_RightButton = INACTIVE;
      }
      break;

     case MX_Gateway_IN_EDGE:
      // During 'EDGE': '<S620>:333'
      if ((int32_T)MX_Gateway_DWork.debounceLeft > 100) {
        // Transition: '<S620>:330'
        MX_Gateway_DWork.bitsForTID2.is_PANEL_BUTTON_c2fh =
          MX_Gatewa_IN_INACTIVE_WAIT_dudm;

        // Entry 'INACTIVE_WAIT': '<S620>:334'
        state_RightButton = INACTIVE;
      } else if ((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] &
                           (int32_T)LEFT_BUTTON_MASK) == (int32_T)INACTIVE) {
        // Transition: '<S620>:331'
        MX_Gateway_DWork.bitsForTID2.is_PANEL_BUTTON_c2fh =
          MX_Gateway_IN_ACTIVE_jlqb;

        // Entry 'ACTIVE': '<S620>:335'
        state_RightButton = ACTIVE;
      } else {
        MX_Gateway_DWork.debounceLeft = (uint16_T)(int32_T)((int32_T)
          MX_Gateway_DWork.debounceLeft + 1);
      }
      break;

     case MX_Gateway_IN_INACTIVE_bvom:
      state_RightButton = INACTIVE;

      // During 'INACTIVE': '<S620>:332'
      if (((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] & (int32_T)
                     LEFT_BUTTON_MASK) == (int32_T)LEFT_BUTTON_PRESS) &&
          ((int32_T)enable_RightLeft != 0)) {
        // Transition: '<S620>:327'
        MX_Gateway_DWork.bitsForTID2.is_PANEL_BUTTON_c2fh = MX_Gateway_IN_EDGE;

        // Entry 'EDGE': '<S620>:333'
        MX_Gateway_DWork.debounceLeft = 0U;
      }
      break;

     default:
      state_RightButton = INACTIVE;

      // During 'INACTIVE_WAIT': '<S620>:334'
      if ((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] & (int32_T)
                    LEFT_BUTTON_MASK) == (int32_T)INACTIVE) {
        // Transition: '<S620>:329'
        MX_Gateway_DWork.bitsForTID2.is_PANEL_BUTTON_c2fh =
          MX_Gateway_IN_INACTIVE_bvom;

        // Entry 'INACTIVE': '<S620>:332'
      }
      break;
    }

    MX_Gateway_SECONDARY_STATE(&FixPtRelationalOperator_ksvm);

    // During 'PRIMARY_STATE': '<S620>:12'
    guard1 = false;
    guard2 = false;
    switch (MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE) {
     case MX_Gateway_IN_ACTIVE_jlqb:
      MX_Gateway_ACTIVE();
      break;

     case MX_Gatewa_IN_EMEA_CONTROLS_m253:
      state_InfoPrimary = DISPLAY_EMEA_CONTROLS;

      // During 'EMEA_CONTROLS': '<S620>:961'
      if ((MX_Gateway_B.RateTransition63_jqha == MODE_LEFT_NONE) &&
          (MX_Gateway_B.RateTransition64_gsah == MODE_RIGHT_NONE)) {
        // Transition: '<S620>:975'
        guard2 = true;
      } else if (mode_ControlChange) {
        // Transition: '<S620>:974'
        MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE =
          MX_Gatewa_IN_EMEA_CONTROLS_m253;
        MX_Gateway_DWork.temporalCounter_i1_lbig = 0U;

        // Entry 'EMEA_CONTROLS': '<S620>:961'
        MX_Gateway_DWork.prev_InfoSecondary = state_InfoSecondary;
      } else if ((state_InfoButton == ACTIVE) ||
                 (MX_Gateway_DWork.temporalCounter_i1_lbig >=
                  CONSTANT_DATA->EMEA_CONTROLS_DISPLAY_TIME)) {
        // Transition: '<S620>:964'
        // Transition: '<S620>:966'
        guard2 = true;
      } else if ((state_InfoSecondary != INACTIVE) && (state_InfoSecondary !=
                  MX_Gateway_DWork.prev_InfoSecondary)) {
        // Transition: '<S620>:967'
        MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE =
          MX_Gateway_IN_INACTIVE_bvomz;

        // Entry 'INACTIVE': '<S620>:887'
        state_InfoPrimary = DISPLAY_PRIMARY_INACTIVE;
        MX_Gateway_DWork.prev_InfoSecondary = state_InfoSecondary;
      } else {
        if ((CONSTANT_DATA->AUTO_DISPLAY_FAULT_FUNCTION != NON_FUNCTIONAL) &&
            ((int32_T)flag_StdActiveWarn != 0) && (eeMirror.deluxe_G5 != ACTIVE)
            && (CONSTANT_DATA->DELUXE_GEN5_5_FUNCTION == NON_FUNCTIONAL)) {
          // Transition: '<S620>:980'
          MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE =
            MX_Gateway_IN_ERROR_CODES;
          MX_Gateway_DWork.temporalCounter_i1_lbig = 0U;

          // Entry 'ERROR_CODES': '<S620>:922'
          state_InfoPrimary = DISPLAY_ERROR_CODES;
          state_InfoButton = INACTIVE;
          MX_Gateway_DWork.debounceCode = 0U;
        }
      }
      break;

     case MX_Gateway_IN_ERROR_CODES:
      state_InfoPrimary = DISPLAY_ERROR_CODES;

      // During 'ERROR_CODES': '<S620>:922'
      if ((MX_Gateway_DWork.debounceCode >=
           CONSTANT_DATA->AUTO_DISPLAY_FAULT_DEBOUNCE_ACTIVE) ||
          (state_InfoButton == ACTIVE)) {
        // Transition: '<S620>:924'
        // Exit 'ERROR_CODES': '<S620>:922'
        flag_StdActiveWarn = INACTIVE;
        MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE =
          MX_Gateway_IN_ACTIVE_jlqb;
        MX_Gateway_DWork.temporalCounter_i1_lbig = 0U;
        MX_Gatewa_enter_internal_ACTIVE();
      } else if ((state_InfoSecondary != INACTIVE) && ((state_InfoSecondary !=
                   MX_Gateway_DWork.prev_InfoSecondary) || ((int32_T)
                   MX_Gateway_DWork.temporalCounter_i1_lbig >= 40))) {
        // Transition: '<S620>:925'
        // Exit 'ERROR_CODES': '<S620>:922'
        flag_StdActiveWarn = INACTIVE;
        MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE =
          MX_Gateway_IN_INACTIVE_bvomz;

        // Entry 'INACTIVE': '<S620>:887'
        state_InfoPrimary = DISPLAY_PRIMARY_INACTIVE;
        MX_Gateway_DWork.prev_InfoSecondary = state_InfoSecondary;
      } else {
        MX_Gateway_DWork.debounceCode = (uint16_T)(int32_T)((int32_T)
          MX_Gateway_DWork.debounceCode + 1);
      }
      break;

     case MX_Gateway_IN_INACTIVE_bvomz:
      state_InfoPrimary = DISPLAY_PRIMARY_INACTIVE;

      // During 'INACTIVE': '<S620>:887'
      if ((state_InfoSecondary == INACTIVE) || ((state_InfoButton == ACTIVE) &&
           (state_InfoSecondary != DISPLAY_DELUXE_ERROR) && (state_InfoSecondary
            != DISPLAY_SHUTDOWN) && (state_InfoSecondary !=
            DISPLAY_SERVICE_CLOCK_RESET) && (state_InfoSecondary !=
            DISPLAY_SERVICE_CLOCK_ALARM))) {
        // Transition: '<S620>:889'
        MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE =
          MX_Gateway_IN_ACTIVE_jlqb;
        MX_Gateway_DWork.temporalCounter_i1_lbig = 0U;
        MX_Gatewa_enter_internal_ACTIVE();
      } else {
        if ((MX_Gateway_B.RateTransition29_pq5l == (int32_T)ACTIVE) &&
            (MX_Gateway_DWork.bitsForTID2.prev_SecondAux == (int32_T)ACTIVE)) {
          // Transition: '<S620>:955'
          MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE =
            MX_Gateway_IN_SECOND_AUX;

          // Entry 'SECOND_AUX': '<S620>:943'
          state_InfoPrimary = DISPLAY_SECOND_AUX;
          MX_Gateway_DWork.prev_InfoSecondary = state_InfoSecondary;
          MX_Gateway_DWork.bitsForTID2.prev_SecondAux = ((int32_T)ACTIVE != 0);
        }
      }
      break;

     default:
      state_InfoPrimary = DISPLAY_SECOND_AUX;

      // During 'SECOND_AUX': '<S620>:943'
      if ((state_InfoSecondary != INACTIVE) && (state_InfoSecondary !=
           MX_Gateway_DWork.prev_InfoSecondary)) {
        // Transition: '<S620>:945'
        MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE =
          MX_Gateway_IN_INACTIVE_bvomz;

        // Entry 'INACTIVE': '<S620>:887'
        state_InfoPrimary = DISPLAY_PRIMARY_INACTIVE;
        MX_Gateway_DWork.prev_InfoSecondary = state_InfoSecondary;
      } else if (state_InfoButton == ACTIVE) {
        // Transition: '<S620>:946'
        guard1 = true;
      } else {
        if (MX_Gateway_B.RateTransition29_pq5l == (int32_T)INACTIVE) {
          // Transition: '<S620>:956'
          MX_Gateway_DWork.bitsForTID2.prev_SecondAux = ((int32_T)INACTIVE != 0);
          guard1 = true;
        }
      }
      break;
    }

    if (guard2) {
      MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE = MX_Gateway_IN_ACTIVE_jlqb;
      MX_Gateway_DWork.temporalCounter_i1_lbig = 0U;
      MX_Gatewa_enter_internal_ACTIVE();
    }

    if (guard1) {
      MX_Gateway_DWork.bitsForTID2.is_PRIMARY_STATE = MX_Gateway_IN_ACTIVE_jlqb;
      MX_Gateway_DWork.temporalCounter_i1_lbig = 0U;
      MX_Gatewa_enter_internal_ACTIVE();
    }

    // During 'LIGHT_BUTTON_STATE': '<S620>:27'
    switch (MX_Gateway_DWork.bitsForTID2.is_LIGHT_BUTTON_STATE) {
     case MX_Gateway_IN_ACTIVE_jlqb:
      // During 'ACTIVE': '<S620>:30'
      if ((int32_T)MX_Gateway_DWork.debounceCount_cmr2 >= 100) {
        // Transition: '<S620>:73'
        MX_Gateway_DWork.bitsForTID2.is_LIGHT_BUTTON_STATE =
          MX_Gateway_IN_INACTIVE_bvom;

        // Entry 'INACTIVE': '<S620>:28'
        MX_Gateway_DWork.state_LightButton = INACTIVE;
      } else {
        MX_Gateway_DWork.debounceCount_cmr2 = (uint16_T)(int32_T)((int32_T)
          MX_Gateway_DWork.debounceCount_cmr2 + 1);
      }
      break;

     case MX_Gateway_IN_EDGE:
      // During 'EDGE': '<S620>:29'
      if ((int32_T)MX_Gateway_DWork.debounceCount_cmr2 >= 60) {
        // Transition: '<S620>:74'
        MX_Gateway_DWork.bitsForTID2.is_LIGHT_BUTTON_STATE =
          MX_Gateway_IN_ACTIVE_jlqb;

        // Entry 'ACTIVE': '<S620>:30'
        MX_Gateway_DWork.state_LightButton = ACTIVE;
        MX_Gateway_DWork.debounceCount_cmr2 = 0U;
      } else if ((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] &
                           (int32_T)LIGHT_BUTTON_MASK) == (int32_T)INACTIVE) {
        // Transition: '<S620>:75'
        MX_Gateway_DWork.bitsForTID2.is_LIGHT_BUTTON_STATE =
          MX_Gateway_IN_INACTIVE_bvom;

        // Entry 'INACTIVE': '<S620>:28'
        MX_Gateway_DWork.state_LightButton = INACTIVE;
      } else {
        MX_Gateway_DWork.debounceCount_cmr2 = (uint16_T)(int32_T)((int32_T)
          MX_Gateway_DWork.debounceCount_cmr2 + 1);
      }
      break;

     default:
      // During 'INACTIVE': '<S620>:28'
      if ((int32_T)((int32_T)MX_Gateway_B.RateTransition35_nxld[0] & (int32_T)
                    LIGHT_BUTTON_MASK) == (int32_T)LIGHT_BUTTON_PRESS) {
        // Transition: '<S620>:72'
        MX_Gateway_DWork.bitsForTID2.is_LIGHT_BUTTON_STATE = MX_Gateway_IN_EDGE;

        // Entry 'EDGE': '<S620>:29'
        MX_Gateway_DWork.debounceCount_cmr2 = 0U;
      }
      break;
    }
  }

  // End of Chart: '<S596>/Display_Type'

  // Update for UnitDelay: '<S619>/Delay Input1'
  MX_Gateway_DWork.DelayInput1_DSTATE_lxjv = MX_Gateway_B.RateTransition29_pq5l;
}

// System initialize for atomic system: '<S27>/Keyless_Indicators'
void MX_Gate_Keyless_Indicators_Init(void)
{
  // SystemInitialize for Chart: '<S597>/Keyless_Ind'
  MX_Gateway_DWork.bitsForTID2.is_FAIL_g2di = MX_Gate_IN_NO_ACTIVE_CHILD_czmb;
  MX_Gateway_DWork.temporalCounter_i1_d02z = 0U;
  MX_Gateway_DWork.bitsForTID2.is_FAIL_jzu3 = MX_Gate_IN_NO_ACTIVE_CHILD_czmb;
  MX_Gateway_DWork.temporalCounter_i2_ps23 = 0U;

  // Chart: '<S597>/Keyless_Ind'
  // Entry: MX_Gtwy_Control/PanelInterface/Keyless_Indicators/Keyless_Ind
  // Entry Internal: MX_Gtwy_Control/PanelInterface/Keyless_Indicators/Keyless_Ind 
  // Entry Internal 'LOCK': '<S621>:1'
  // Transition: '<S621>:15'
  MX_Gateway_DWork.bitsForTID2.is_LOCK = MX_Gateway_IN_INACTIVE_iuhb;

  // Entry 'INACTIVE': '<S621>:3'
  ind_Lock = ((int32_T)INACTIVE != 0);

  // Entry Internal 'UNLOCK': '<S621>:55'
  // Transition: '<S621>:56'
  MX_Gateway_DWork.bitsForTID2.is_UNLOCK = MX_Gateway_IN_INACTIVE_iuhb;

  // Entry 'INACTIVE': '<S621>:63'
  ind_Unlock = ((int32_T)INACTIVE != 0);
}

// Output and update for atomic system: '<S27>/Keyless_Indicators'
void MX_Gateway_Keyless_Indicators(void)
{
  // Chart: '<S597>/Keyless_Ind'
  // Gateway: MX_Gtwy_Control/PanelInterface/Keyless_Indicators/Keyless_Ind
  if ((uint32_T)MX_Gateway_DWork.temporalCounter_i1_d02z < 65535U) {
    MX_Gateway_DWork.temporalCounter_i1_d02z = (uint16_T)(int32_T)((int32_T)
      MX_Gateway_DWork.temporalCounter_i1_d02z + 1);
  }

  if ((uint32_T)MX_Gateway_DWork.temporalCounter_i2_ps23 < 65535U) {
    MX_Gateway_DWork.temporalCounter_i2_ps23 = (uint16_T)(int32_T)((int32_T)
      MX_Gateway_DWork.temporalCounter_i2_ps23 + 1);
  }

  // During: MX_Gtwy_Control/PanelInterface/Keyless_Indicators/Keyless_Ind
  // During 'LOCK': '<S621>:1'
  switch (MX_Gateway_DWork.bitsForTID2.is_LOCK) {
   case MX_Gateway_IN_ACTIVE_i3z5:
    // During 'ACTIVE': '<S621>:4'
    if ((MX_Gateway_B.RateTransition65 == FAIL) ||
        ((MX_Gateway_B.RateTransition65 == ENTER_PWD) &&
         (MX_Gateway_B.RateTransition66 != KS_UNLOCK_MACHINE)) ||
        (MX_Gateway_B.RateTransition66 == KS_CHANGE)) {
      // Transition: '<S621>:19'
      MX_Gateway_DWork.bitsForTID2.is_LOCK = MX_Gateway_IN_FAIL;

      // Entry Internal 'FAIL': '<S621>:5'
      // Transition: '<S621>:22'
      MX_Gateway_DWork.bitsForTID2.is_FAIL_g2di = MX_Gateway_IN_ACTIVE_i3z5;
      MX_Gateway_DWork.temporalCounter_i1_d02z = 0U;

      // Entry 'ACTIVE': '<S621>:6'
      ind_Lock = ((int32_T)ACTIVE != 0);
    } else {
      if (eeMirror.passwordLock == INACTIVE) {
        // Transition: '<S621>:17'
        MX_Gateway_DWork.bitsForTID2.is_LOCK = MX_Gateway_IN_INACTIVE_iuhb;

        // Entry 'INACTIVE': '<S621>:3'
        ind_Lock = ((int32_T)INACTIVE != 0);
      }
    }
    break;

   case MX_Gateway_IN_FAIL:
    // During 'FAIL': '<S621>:5'
    if ((MX_Gateway_B.RateTransition65 != FAIL) &&
        (MX_Gateway_B.RateTransition65 != ENTER_PWD) && (eeMirror.passwordLock ==
         ACTIVE) && (MX_Gateway_B.RateTransition66 != KS_LOCK_MACHINE) &&
        (MX_Gateway_B.RateTransition66 != KS_CHANGE)) {
      // Transition: '<S621>:18'
      // Exit Internal 'FAIL': '<S621>:5'
      MX_Gateway_DWork.bitsForTID2.is_FAIL_g2di =
        MX_Gate_IN_NO_ACTIVE_CHILD_czmb;
      MX_Gateway_DWork.bitsForTID2.is_LOCK = MX_Gateway_IN_ACTIVE_i3z5;

      // Entry 'ACTIVE': '<S621>:4'
      ind_Lock = ((int32_T)ACTIVE != 0);
    } else if ((MX_Gateway_B.RateTransition65 != FAIL) &&
               (MX_Gateway_B.RateTransition65 != ENTER_PWD) &&
               (eeMirror.passwordLock == INACTIVE) &&
               (MX_Gateway_B.RateTransition66 != KS_LOCK_MACHINE) &&
               (MX_Gateway_B.RateTransition66 != KS_CHANGE)) {
      // Transition: '<S621>:20'
      // Exit Internal 'FAIL': '<S621>:5'
      MX_Gateway_DWork.bitsForTID2.is_FAIL_g2di =
        MX_Gate_IN_NO_ACTIVE_CHILD_czmb;
      MX_Gateway_DWork.bitsForTID2.is_LOCK = MX_Gateway_IN_INACTIVE_iuhb;

      // Entry 'INACTIVE': '<S621>:3'
      ind_Lock = ((int32_T)INACTIVE != 0);
    } else if (MX_Gateway_DWork.bitsForTID2.is_FAIL_g2di ==
               MX_Gateway_IN_ACTIVE_i3z5) {
      // During 'ACTIVE': '<S621>:6'
      if (MX_Gateway_DWork.temporalCounter_i1_d02z >=
          CONSTANT_DATA->ICON_FLASH_RATE) {
        // Transition: '<S621>:23'
        MX_Gateway_DWork.bitsForTID2.is_FAIL_g2di = MX_Gateway_IN_INACTIVE_iuhba;
        MX_Gateway_DWork.temporalCounter_i1_d02z = 0U;

        // Entry 'INACTIVE': '<S621>:7'
        ind_Lock = ((int32_T)INACTIVE != 0);
      }
    } else {
      // During 'INACTIVE': '<S621>:7'
      if (MX_Gateway_DWork.temporalCounter_i1_d02z >=
          CONSTANT_DATA->ICON_FLASH_RATE) {
        // Transition: '<S621>:24'
        MX_Gateway_DWork.bitsForTID2.is_FAIL_g2di = MX_Gateway_IN_ACTIVE_i3z5;
        MX_Gateway_DWork.temporalCounter_i1_d02z = 0U;

        // Entry 'ACTIVE': '<S621>:6'
        ind_Lock = ((int32_T)ACTIVE != 0);
      }
    }
    break;

   default:
    // During 'INACTIVE': '<S621>:3'
    if (eeMirror.passwordLock == ACTIVE) {
      // Transition: '<S621>:16'
      MX_Gateway_DWork.bitsForTID2.is_LOCK = MX_Gateway_IN_ACTIVE_i3z5;

      // Entry 'ACTIVE': '<S621>:4'
      ind_Lock = ((int32_T)ACTIVE != 0);
    } else {
      if ((MX_Gateway_B.RateTransition65 == FAIL) ||
          (MX_Gateway_B.RateTransition66 == KS_LOCK_MACHINE) ||
          (MX_Gateway_B.RateTransition66 == KS_CHANGE)) {
        // Transition: '<S621>:21'
        MX_Gateway_DWork.bitsForTID2.is_LOCK = MX_Gateway_IN_FAIL;

        // Entry Internal 'FAIL': '<S621>:5'
        // Transition: '<S621>:22'
        MX_Gateway_DWork.bitsForTID2.is_FAIL_g2di = MX_Gateway_IN_ACTIVE_i3z5;
        MX_Gateway_DWork.temporalCounter_i1_d02z = 0U;

        // Entry 'ACTIVE': '<S621>:6'
        ind_Lock = ((int32_T)ACTIVE != 0);
      }
    }
    break;
  }

  // During 'UNLOCK': '<S621>:55'
  switch (MX_Gateway_DWork.bitsForTID2.is_UNLOCK) {
   case MX_Gateway_IN_ACTIVE_i3z5:
    // During 'ACTIVE': '<S621>:64'
    if ((MX_Gateway_B.RateTransition65 == FAIL) ||
        (MX_Gateway_B.RateTransition66 == KS_CHANGE)) {
      // Transition: '<S621>:62'
      MX_Gateway_DWork.bitsForTID2.is_UNLOCK = MX_Gateway_IN_FAIL;

      // Entry Internal 'FAIL': '<S621>:65'
      // Transition: '<S621>:66'
      MX_Gateway_DWork.bitsForTID2.is_FAIL_jzu3 = MX_Gateway_IN_ACTIVE_i3z5;
      MX_Gateway_DWork.temporalCounter_i2_ps23 = 0U;

      // Entry 'ACTIVE': '<S621>:70'
      ind_Unlock = ((int32_T)ACTIVE != 0);
    } else {
      if (eeMirror.passwordLock == ACTIVE) {
        // Transition: '<S621>:58'
        MX_Gateway_DWork.bitsForTID2.is_UNLOCK = MX_Gateway_IN_INACTIVE_iuhb;

        // Entry 'INACTIVE': '<S621>:63'
        ind_Unlock = ((int32_T)INACTIVE != 0);
      }
    }
    break;

   case MX_Gateway_IN_FAIL:
    // During 'FAIL': '<S621>:65'
    if ((MX_Gateway_B.RateTransition65 != FAIL) && (eeMirror.passwordLock ==
         ACTIVE) && (MX_Gateway_B.RateTransition66 != KS_UNLOCK_MACHINE) &&
        (MX_Gateway_B.RateTransition66 != KS_CHANGE)) {
      // Transition: '<S621>:59'
      // Exit Internal 'FAIL': '<S621>:65'
      MX_Gateway_DWork.bitsForTID2.is_FAIL_jzu3 =
        MX_Gate_IN_NO_ACTIVE_CHILD_czmb;
      MX_Gateway_DWork.bitsForTID2.is_UNLOCK = MX_Gateway_IN_INACTIVE_iuhb;

      // Entry 'INACTIVE': '<S621>:63'
      ind_Unlock = ((int32_T)INACTIVE != 0);
    } else if ((MX_Gateway_B.RateTransition65 != FAIL) && (eeMirror.passwordLock
                == INACTIVE) && (MX_Gateway_B.RateTransition66 !=
                KS_UNLOCK_MACHINE) && (MX_Gateway_B.RateTransition66 !=
                KS_CHANGE)) {
      // Transition: '<S621>:61'
      // Exit Internal 'FAIL': '<S621>:65'
      MX_Gateway_DWork.bitsForTID2.is_FAIL_jzu3 =
        MX_Gate_IN_NO_ACTIVE_CHILD_czmb;
      MX_Gateway_DWork.bitsForTID2.is_UNLOCK = MX_Gateway_IN_ACTIVE_i3z5;

      // Entry 'ACTIVE': '<S621>:64'
      ind_Unlock = ((int32_T)ACTIVE != 0);
    } else if (MX_Gateway_DWork.bitsForTID2.is_FAIL_jzu3 ==
               MX_Gateway_IN_ACTIVE_i3z5) {
      // During 'ACTIVE': '<S621>:70'
      if (MX_Gateway_DWork.temporalCounter_i2_ps23 >=
          CONSTANT_DATA->ICON_FLASH_RATE) {
        // Transition: '<S621>:67'
        MX_Gateway_DWork.bitsForTID2.is_FAIL_jzu3 = MX_Gateway_IN_INACTIVE_iuhba;
        MX_Gateway_DWork.temporalCounter_i2_ps23 = 0U;

        // Entry 'INACTIVE': '<S621>:69'
        ind_Unlock = ((int32_T)INACTIVE != 0);
      }
    } else {
      // During 'INACTIVE': '<S621>:69'
      if (MX_Gateway_DWork.temporalCounter_i2_ps23 >=
          CONSTANT_DATA->ICON_FLASH_RATE) {
        // Transition: '<S621>:68'
        MX_Gateway_DWork.bitsForTID2.is_FAIL_jzu3 = MX_Gateway_IN_ACTIVE_i3z5;
        MX_Gateway_DWork.temporalCounter_i2_ps23 = 0U;

        // Entry 'ACTIVE': '<S621>:70'
        ind_Unlock = ((int32_T)ACTIVE != 0);
      }
    }
    break;

   default:
    // During 'INACTIVE': '<S621>:63'
    if (eeMirror.passwordLock == INACTIVE) {
      // Transition: '<S621>:57'
      MX_Gateway_DWork.bitsForTID2.is_UNLOCK = MX_Gateway_IN_ACTIVE_i3z5;

      // Entry 'ACTIVE': '<S621>:64'
      ind_Unlock = ((int32_T)ACTIVE != 0);
    } else {
      if ((MX_Gateway_B.RateTransition65 == FAIL) ||
          (MX_Gateway_B.RateTransition66 == KS_UNLOCK_MACHINE) ||
          (MX_Gateway_B.RateTransition66 == KS_CHANGE)) {
        // Transition: '<S621>:60'
        MX_Gateway_DWork.bitsForTID2.is_UNLOCK = MX_Gateway_IN_FAIL;

        // Entry Internal 'FAIL': '<S621>:65'
        // Transition: '<S621>:66'
        MX_Gateway_DWork.bitsForTID2.is_FAIL_jzu3 = MX_Gateway_IN_ACTIVE_i3z5;
        MX_Gateway_DWork.temporalCounter_i2_ps23 = 0U;

        // Entry 'ACTIVE': '<S621>:70'
        ind_Unlock = ((int32_T)ACTIVE != 0);
      }
    }
    break;
  }

  // End of Chart: '<S597>/Keyless_Ind'
}

// Output and update for atomic system: '<S27>/mod_AuxIcon'
void MX_Gateway_mod_AuxIcon(void)
{
  boolean_T aVarTruthTableCondition_1;
  boolean_T aVarTruthTableCondition_2;

  // Truth Table: '<S598>/Truth_Table'
  // Truth Table Function 'MX_Gtwy_Control/PanelInterface/mod_AuxIcon/Truth_Table': '<S622>:1' 
  //  Aux is active
  // Condition '#1': '<S622>:1:10'
  aVarTruthTableCondition_1 = ((int32_T)MX_Gateway_B.RateTransition38_fzvf != 0);

  //  EMEA Controls
  // Condition '#2': '<S622>:1:14'
  aVarTruthTableCondition_2 = (CONSTANT_DATA->AUX_FUNCTION == AUX_EMEA_CONTROLS);

  //  Right mode is Aux1
  // Condition '#3': '<S622>:1:18'
  if (aVarTruthTableCondition_1 && (!aVarTruthTableCondition_2)) {
    // Decision 'D1': '<S622>:1:20'
    //  Turn on icon.
    // Action '1': '<S622>:1:32'
    icon_Aux = 1U;
  } else if (aVarTruthTableCondition_1 && aVarTruthTableCondition_2 &&
             (MX_Gateway_B.RateTransition55 == MODE_RIGHT_AUX1)) {
    // Decision 'D2': '<S622>:1:22'
    //  Turn on icon.
    // Action '1': '<S622>:1:32'
    icon_Aux = 1U;
  } else {
    // Decision 'D3': '<S622>:1:24'
    //  Default
    //  Turn off icon.
    // Action '2': '<S622>:1:38'
    icon_Aux = 0U;
  }

  // End of Truth Table: '<S598>/Truth_Table'
}

// System initialize for atomic system: '<S27>/mod_BatteryIcon'
void MX_Gateway_mod_BatteryIcon_Init(void)
{
  // Chart: '<S599>/BatteryIcon'
  // Entry: MX_Gtwy_Control/PanelInterface/mod_BatteryIcon/BatteryIcon
  // Entry Internal: MX_Gtwy_Control/PanelInterface/mod_BatteryIcon/BatteryIcon
  // Transition: '<S623>:5'
  MX_Gateway_DWork.bitsForTID2.is_c84_MX_Gateway = MX_Gateway_IN_INACTIVE_dgzx;

  // Entry 'INACTIVE': '<S623>:1'
  icon_Battery = INACTIVE;
}

// Output and update for atomic system: '<S27>/mod_BatteryIcon'
void MX_Gateway_mod_BatteryIcon(void)
{
  // Chart: '<S599>/BatteryIcon'
  // Gateway: MX_Gtwy_Control/PanelInterface/mod_BatteryIcon/BatteryIcon
  // During: MX_Gtwy_Control/PanelInterface/mod_BatteryIcon/BatteryIcon
  switch (MX_Gateway_DWork.bitsForTID2.is_c84_MX_Gateway) {
   case MX_Gateway_IN_ACTIVE_ppnp:
    icon_Battery = ACTIVE;

    // During 'ACTIVE': '<S623>:2'
    if (state_InfoPrimary != DISPLAY_BATTERY_VOLTAGE) {
      // Transition: '<S623>:6'
      MX_Gateway_DWork.bitsForTID2.is_c84_MX_Gateway =
        MX_Gateway_IN_INACTIVE_dgzx;

      // Entry 'INACTIVE': '<S623>:1'
      icon_Battery = INACTIVE;
    } else {
      if ((state_Alternator != NORMAL) || (state_VBattery != NORMAL)) {
        // Transition: '<S623>:7'
        MX_Gateway_DWork.bitsForTID2.is_c84_MX_Gateway =
          MX_Gateway_IN_ERROR_lt5m;

        // Entry 'ERROR': '<S623>:3'
        icon_Battery = ERROR_FLASH;
      }
    }
    break;

   case MX_Gateway_IN_ERROR_lt5m:
    icon_Battery = ERROR_FLASH;

    // During 'ERROR': '<S623>:3'
    if ((state_Alternator == NORMAL) && (state_VBattery == NORMAL)) {
      // Transition: '<S623>:9'
      MX_Gateway_DWork.bitsForTID2.is_c84_MX_Gateway =
        MX_Gateway_IN_INACTIVE_dgzx;

      // Entry 'INACTIVE': '<S623>:1'
      icon_Battery = INACTIVE;
    }
    break;

   default:
    icon_Battery = INACTIVE;

    // During 'INACTIVE': '<S623>:1'
    if ((state_Alternator != NORMAL) || (state_VBattery != NORMAL)) {
      // Transition: '<S623>:8'
      MX_Gateway_DWork.bitsForTID2.is_c84_MX_Gateway = MX_Gateway_IN_ERROR_lt5m;

      // Entry 'ERROR': '<S623>:3'
      icon_Battery = ERROR_FLASH;
    } else {
      if (state_InfoPrimary == DISPLAY_BATTERY_VOLTAGE) {
        // Transition: '<S623>:4'
        MX_Gateway_DWork.bitsForTID2.is_c84_MX_Gateway =
          MX_Gateway_IN_ACTIVE_ppnp;

        // Entry 'ACTIVE': '<S623>:2'
        icon_Battery = ACTIVE;
      }
    }
    break;
  }

  // End of Chart: '<S599>/BatteryIcon'
}

// System initialize for atomic system: '<S27>/mod_ECTIcon'
void MX_Gateway_mod_ECTIcon_Init(void)
{
  // Chart: '<S600>/WarningIcon'
  // Entry: MX_Gtwy_Control/PanelInterface/mod_ECTIcon/WarningIcon
  // Entry Internal: MX_Gtwy_Control/PanelInterface/mod_ECTIcon/WarningIcon
  // Transition: '<S624>:4'
  MX_Gateway_DWork.bitsForTID2.is_c85_MX_Gateway = MX_Gateway_IN_INACTIVE_lbx3;

  // Entry 'INACTIVE': '<S624>:1'
  icon_ECT = INACTIVE;
}

// Output and update for atomic system: '<S27>/mod_ECTIcon'
void MX_Gateway_mod_ECTIcon(void)
{
  // Chart: '<S600>/WarningIcon'
  // Gateway: MX_Gtwy_Control/PanelInterface/mod_ECTIcon/WarningIcon
  // During: MX_Gtwy_Control/PanelInterface/mod_ECTIcon/WarningIcon
  switch (MX_Gateway_DWork.bitsForTID2.is_c85_MX_Gateway) {
   case MX_Gateway_IN_ACTIVE_mhfl:
    icon_ECT = ACTIVE;

    // During 'ACTIVE': '<S624>:2'
    if ((state_ECT == NORMAL) || (state_ECT == COLD)) {
      // Transition: '<S624>:6'
      MX_Gateway_DWork.bitsForTID2.is_c85_MX_Gateway =
        MX_Gateway_IN_INACTIVE_lbx3;

      // Entry 'INACTIVE': '<S624>:1'
      icon_ECT = INACTIVE;
    } else {
      if ((state_ECT == EXTREMELY_HIGH) || (state_ECT == PRE_SHUTDOWN) ||
          (state_ECT == SHUTDOWN)) {
        // Transition: '<S624>:8'
        MX_Gateway_DWork.bitsForTID2.is_c85_MX_Gateway =
          MX_Gateway_IN_ERROR_nuaf;

        // Entry 'ERROR': '<S624>:3'
        icon_ECT = ERROR_FLASH;
      }
    }
    break;

   case MX_Gateway_IN_ERROR_nuaf:
    icon_ECT = ERROR_FLASH;

    // During 'ERROR': '<S624>:3'
    if ((state_ECT == HIGH) || (state_ECT == NORMAL) || (state_ECT == COLD)) {
      // Transition: '<S624>:9'
      MX_Gateway_DWork.bitsForTID2.is_c85_MX_Gateway =
        MX_Gateway_IN_INACTIVE_lbx3;

      // Entry 'INACTIVE': '<S624>:1'
      icon_ECT = INACTIVE;
    }
    break;

   default:
    icon_ECT = INACTIVE;

    // During 'INACTIVE': '<S624>:1'
    if ((state_ECT == EXTREMELY_HIGH) || (state_ECT == PRE_SHUTDOWN) ||
        (state_ECT == SHUTDOWN)) {
      // Transition: '<S624>:7'
      MX_Gateway_DWork.bitsForTID2.is_c85_MX_Gateway = MX_Gateway_IN_ERROR_nuaf;

      // Entry 'ERROR': '<S624>:3'
      icon_ECT = ERROR_FLASH;
    } else {
      if ((state_ECT == HIGH) || (state_ECT == OORH) || (state_ECT == OORL)) {
        // Transition: '<S624>:5'
        MX_Gateway_DWork.bitsForTID2.is_c85_MX_Gateway =
          MX_Gateway_IN_ACTIVE_mhfl;

        // Entry 'ACTIVE': '<S624>:2'
        icon_ECT = ACTIVE;
      }
    }
    break;
  }

  // End of Chart: '<S600>/WarningIcon'
}

// System initialize for atomic system: '<S27>/mod_EngineIcon'
void MX_Gateway_mod_EngineIcon_Init(void)
{
  // Chart: '<S601>/EngineIcon'
  // Entry: MX_Gtwy_Control/PanelInterface/mod_EngineIcon/EngineIcon
  // Entry Internal: MX_Gtwy_Control/PanelInterface/mod_EngineIcon/EngineIcon
  // Transition: '<S625>:51'
  MX_Gateway_DWork.bitsForTID2.is_c86_MX_Gateway = MX_Gateway_IN_SOLID;

  // Entry Internal 'SOLID': '<S625>:50'
  // Transition: '<S625>:4'
  MX_Gateway_DWork.bitsForTID2.is_SOLID_dhzh = MX_Gateway_IN_INACTIVE_ilsp;

  // Entry 'INACTIVE': '<S625>:1'
  icon_Engine = INACTIVE;
}

// Output and update for atomic system: '<S27>/mod_EngineIcon'
void MX_Gateway_mod_EngineIcon(void)
{
  // Chart: '<S601>/EngineIcon'
  // Gateway: MX_Gtwy_Control/PanelInterface/mod_EngineIcon/EngineIcon
  // During: MX_Gtwy_Control/PanelInterface/mod_EngineIcon/EngineIcon
  if (MX_Gateway_DWork.bitsForTID2.is_c86_MX_Gateway == MX_Gateway_IN_ERROR_imwc)
  {
    icon_Engine = ERROR_FLASH;

    // During 'ERROR': '<S625>:3'
    if (((state_EOP == NORMAL) || (state_EOP == LOW)) &&
        (MX_Gateway_B.RateTransition60_bzmo == NORMAL) &&
        (MX_Gateway_B.RateTransition62_d25a == NORMAL) &&
        (MX_Gateway_B.RateTransition61_lxrm == NORMAL) &&
        (MX_Gateway_B.RateTransition14_nep3 != FAILURE) &&
        (MX_Gateway_B.RateTransition56_kjuw != NO_COMMUNICATION) && ((int32_T)
         ((int32_T)MX_Gateway_B.RateTransition15_jnsm & (int32_T)
          RED_STOP_LAMP_STATUS_MASK) != (int32_T)RED_STOP_LAMP_STATUS_ACTIVE) &&
        ((int32_T)((int32_T)MX_Gateway_B.RateTransition15_jnsm & (int32_T)
                   PROTECT_LAMP_FLASH_MASK) != (int32_T)
         PROTECT_LAMP_FLASH_ACTIVE) && (MX_Gateway_B.RateTransition36 !=
         SHUTDOWN) && (state_FuelTemp != SHUTDOWN)) {
      // Transition: '<S625>:9'
      MX_Gateway_DWork.bitsForTID2.is_c86_MX_Gateway = MX_Gateway_IN_SOLID;

      // Entry Internal 'SOLID': '<S625>:50'
      // Transition: '<S625>:4'
      MX_Gateway_DWork.bitsForTID2.is_SOLID_dhzh = MX_Gateway_IN_INACTIVE_ilsp;

      // Entry 'INACTIVE': '<S625>:1'
      icon_Engine = INACTIVE;
    }
  } else {
    // During 'SOLID': '<S625>:50'
    if ((state_EOP == EXTREMELY_LOW) || (state_EOP == SHUTDOWN) ||
        (MX_Gateway_B.RateTransition60_bzmo != NORMAL) ||
        (MX_Gateway_B.RateTransition62_d25a != NORMAL) ||
        (MX_Gateway_B.RateTransition61_lxrm != NORMAL) ||
        (MX_Gateway_B.RateTransition14_nep3 == FAILURE) ||
        (MX_Gateway_B.RateTransition56_kjuw == NO_COMMUNICATION) || ((int32_T)
         ((int32_T)MX_Gateway_B.RateTransition15_jnsm & (int32_T)
          RED_STOP_LAMP_STATUS_MASK) == (int32_T)RED_STOP_LAMP_STATUS_ACTIVE) ||
        ((int32_T)((int32_T)MX_Gateway_B.RateTransition15_jnsm & (int32_T)
                   PROTECT_LAMP_FLASH_MASK) == (int32_T)
         PROTECT_LAMP_FLASH_ACTIVE) || (MX_Gateway_B.RateTransition36 ==
         SHUTDOWN) || (state_FuelTemp == SHUTDOWN)) {
      // Transition: '<S625>:7'
      // Exit Internal 'SOLID': '<S625>:50'
      MX_Gateway_DWork.bitsForTID2.is_SOLID_dhzh =
        MX_Gate_IN_NO_ACTIVE_CHILD_nv1a;
      MX_Gateway_DWork.bitsForTID2.is_c86_MX_Gateway = MX_Gateway_IN_ERROR_imwc;

      // Entry 'ERROR': '<S625>:3'
      icon_Engine = ERROR_FLASH;
    } else if (MX_Gateway_DWork.bitsForTID2.is_SOLID_dhzh ==
               MX_Gateway_IN_ACTIVE_bkfs) {
      icon_Engine = ACTIVE;

      // During 'ACTIVE': '<S625>:2'
      if ((MX_Gateway_B.RateTransition59_dat2 == NORMAL) &&
          (MX_Gateway_B.RateTransition58 == NORMAL) && (state_EOP == NORMAL) &&
          ((state_ThrottlePrimary == NORMAL) || (state_ThrottlePrimary ==
            NON_FUNCTIONAL)) && ((int32_T)((int32_T)
            MX_Gateway_B.RateTransition15_jnsm & (int32_T)
            PROTECT_LAMP_STATUS_MASK) != (int32_T)PROTECT_LAMP_STATUS_ACTIVE) &&
          ((int32_T)((int32_T)MX_Gateway_B.RateTransition15_jnsm & (int32_T)
                     AMBER_LAMP_STATUS_MASK) != (int32_T)
           AMBER_LAMP_STATUS_ACTIVE) && (MX_Gateway_B.RateTransition36 !=
           UNRESPONSIVE) && ((state_FuelTemp == NORMAL) || (state_FuelTemp ==
            NON_FUNCTIONAL)) && ((icon_RPM != ERROR_FLASH) ||
           (eeMirror.deluxe_G5 != ACTIVE)) && ((state_GlowPlugOutput == NORMAL) ||
           (eeMirror.deluxe_G5 != ACTIVE)) && ((state_GlowPlugRelay == NORMAL) ||
           (eeMirror.deluxe_G5 != ACTIVE)) && (MX_Gateway_B.RateTransition67 ==
           NORMAL)) {
        // Transition: '<S625>:6'
        MX_Gateway_DWork.bitsForTID2.is_SOLID_dhzh = MX_Gateway_IN_INACTIVE_ilsp;

        // Entry 'INACTIVE': '<S625>:1'
        icon_Engine = INACTIVE;
      }
    } else {
      icon_Engine = INACTIVE;

      // During 'INACTIVE': '<S625>:1'
      if ((MX_Gateway_B.RateTransition59_dat2 != NORMAL) ||
          (MX_Gateway_B.RateTransition58 != NORMAL) || (state_EOP == LOW) ||
          (state_EOP == OORL) || (state_EOP == OORH) || ((state_ThrottlePrimary
            != NORMAL) && (state_ThrottlePrimary != NON_FUNCTIONAL)) ||
          ((int32_T)((int32_T)MX_Gateway_B.RateTransition15_jnsm & (int32_T)
                     PROTECT_LAMP_STATUS_MASK) == (int32_T)
           PROTECT_LAMP_STATUS_ACTIVE) || ((int32_T)((int32_T)
            MX_Gateway_B.RateTransition15_jnsm & (int32_T)AMBER_LAMP_STATUS_MASK)
           == (int32_T)AMBER_LAMP_STATUS_ACTIVE) ||
          (MX_Gateway_B.RateTransition36 == UNRESPONSIVE) || ((state_FuelTemp !=
            NORMAL) && (state_FuelTemp != NON_FUNCTIONAL)) || ((icon_RPM ==
            ERROR_FLASH) && (eeMirror.deluxe_G5 == ACTIVE)) ||
          ((state_GlowPlugOutput != NORMAL) && (eeMirror.deluxe_G5 == ACTIVE)) ||
          ((state_GlowPlugRelay != NORMAL) && (eeMirror.deluxe_G5 == ACTIVE)) ||
          (MX_Gateway_B.RateTransition67 != NORMAL)) {
        // Transition: '<S625>:5'
        MX_Gateway_DWork.bitsForTID2.is_SOLID_dhzh = MX_Gateway_IN_ACTIVE_bkfs;

        // Entry 'ACTIVE': '<S625>:2'
        icon_Engine = ACTIVE;
      }
    }
  }

  // End of Chart: '<S601>/EngineIcon'
}

// System initialize for atomic system: '<S27>/mod_FuelLevelIcon'
void MX_Gatew_mod_FuelLevelIcon_Init(void)
{
  // Chart: '<S602>/FuelLevel'
  // Entry: MX_Gtwy_Control/PanelInterface/mod_FuelLevelIcon/FuelLevel
  // Entry Internal: MX_Gtwy_Control/PanelInterface/mod_FuelLevelIcon/FuelLevel
  // Transition: '<S626>:3'
  MX_Gateway_DWork.bitsForTID2.is_c87_MX_Gateway = MX_Gateway_IN_INACTIVE_aifo;

  // Entry 'INACTIVE': '<S626>:1'
  icon_Fuel = ((int32_T)INACTIVE != 0);
}

// Output and update for atomic system: '<S27>/mod_FuelLevelIcon'
void MX_Gateway_mod_FuelLevelIcon(void)
{
  // Chart: '<S602>/FuelLevel'
  // Gateway: MX_Gtwy_Control/PanelInterface/mod_FuelLevelIcon/FuelLevel
  // During: MX_Gtwy_Control/PanelInterface/mod_FuelLevelIcon/FuelLevel
  if (MX_Gateway_DWork.bitsForTID2.is_c87_MX_Gateway ==
      MX_Gateway_IN_ACTIVE_ninr) {
    // During 'ACTIVE': '<S626>:2'
    if (state_FuelLevel == NORMAL) {
      // Transition: '<S626>:5'
      MX_Gateway_DWork.bitsForTID2.is_c87_MX_Gateway =
        MX_Gateway_IN_INACTIVE_aifo;

      // Entry 'INACTIVE': '<S626>:1'
      icon_Fuel = ((int32_T)INACTIVE != 0);
    }
  } else {
    // During 'INACTIVE': '<S626>:1'
    if (state_FuelLevel != NORMAL) {
      // Transition: '<S626>:4'
      MX_Gateway_DWork.bitsForTID2.is_c87_MX_Gateway = MX_Gateway_IN_ACTIVE_ninr;

      // Entry 'ACTIVE': '<S626>:2'
      icon_Fuel = ((int32_T)ACTIVE != 0);
    }
  }

  // End of Chart: '<S602>/FuelLevel'
}

// System initialize for atomic system: '<S27>/mod_GeneralWarningIcon'
void MX__mod_GeneralWarningIcon_Init(void)
{
  // SystemInitialize for Chart: '<S603>/WarningIcon'
  icon_General = 0U;

  // Chart: '<S603>/WarningIcon'
  // Entry: MX_Gtwy_Control/PanelInterface/mod_GeneralWarningIcon/WarningIcon
  // Entry Internal: MX_Gtwy_Control/PanelInterface/mod_GeneralWarningIcon/WarningIcon 
  // Transition: '<S627>:57'
  MX_Gateway_DWork.bitsForTID2.is_c88_MX_Gateway = MX_Gateway_IN_SOLID_cuaa;

  // Entry Internal 'SOLID': '<S627>:54'
  // Transition: '<S627>:4'
  MX_Gateway_DWork.bitsForTID2.is_SOLID = MX_Gateway_IN_INACTIVE_mgt2;
}

// Output and update for atomic system: '<S27>/mod_GeneralWarningIcon'
void MX_Gatew_mod_GeneralWarningIcon(void)
{
  // Chart: '<S603>/WarningIcon'
  // Gateway: MX_Gtwy_Control/PanelInterface/mod_GeneralWarningIcon/WarningIcon
  // During: MX_Gtwy_Control/PanelInterface/mod_GeneralWarningIcon/WarningIcon
  if (MX_Gateway_DWork.bitsForTID2.is_c88_MX_Gateway == MX_Gateway_IN_ERROR_bpuu)
  {
    // During 'ERROR': '<S627>:3'
    if ((MX_Gateway_B.RateTransition54 != MULTIPLE) && (state_LoadMoment ==
         NORMAL) && (MX_Gateway_B.RateTransition45_eg14 != NO_COMMUNICATION)) {
      // Transition: '<S627>:9'
      MX_Gateway_DWork.bitsForTID2.is_c88_MX_Gateway = MX_Gateway_IN_SOLID_cuaa;

      // Entry Internal 'SOLID': '<S627>:54'
      // Transition: '<S627>:4'
      MX_Gateway_DWork.bitsForTID2.is_SOLID = MX_Gateway_IN_INACTIVE_mgt2;
    }
  } else {
    // During 'SOLID': '<S627>:54'
    if ((MX_Gateway_B.RateTransition54 == MULTIPLE) || (state_LoadMoment !=
         NORMAL) || (MX_Gateway_B.RateTransition45_eg14 == NO_COMMUNICATION)) {
      // Transition: '<S627>:8'
      // Exit Internal 'SOLID': '<S627>:54'
      MX_Gateway_DWork.bitsForTID2.is_SOLID = MX_Gate_IN_NO_ACTIVE_CHILD_aqm0;
      MX_Gateway_DWork.bitsForTID2.is_c88_MX_Gateway = MX_Gateway_IN_ERROR_bpuu;

      // Entry 'ERROR': '<S627>:3'
      icon_General = ERROR_FLASH;
    } else if (MX_Gateway_DWork.bitsForTID2.is_SOLID ==
               MX_Gateway_IN_ACTIVE_lz1p) {
      // During 'ACTIVE': '<S627>:2'
      if ((MX_Gateway_B.RateTransition53_cphi == NORMAL) &&
          (MX_Gateway_B.RateTransition52_lf11 == NORMAL) &&
          (MX_Gateway_B.RateTransition28_gkpf == NORMAL) &&
          (MX_Gateway_B.RateTransition30_hltz == NORMAL) &&
          ((MX_Gateway_B.RateTransition27_egec == ACTIVE) ||
           (MX_Gateway_B.RateTransition27_egec == INACTIVE)) &&
          (state_SensorSupply1 == NORMAL) && (state_SensorSupply2 == NORMAL) &&
          (MX_Gateway_B.RateTransition43 != NO_COMMUNICATION) &&
          (MX_Gateway_B.RateTransition46_f0p4 == NORMAL) &&
          (MX_Gateway_B.RateTransition50_dmt4 == NORMAL) &&
          ((MX_Gateway_B.RateTransition9_eqf3 == ACTIVE) ||
           (MX_Gateway_B.RateTransition9_eqf3 == INACTIVE)) &&
          ((MX_Gateway_B.RateTransition10_gdiv == ACTIVE) ||
           (MX_Gateway_B.RateTransition10_gdiv == INACTIVE)) &&
          (MX_Gateway_B.RateTransition11_gpcw != OORL) &&
          (MX_Gateway_B.RateTransition11_gpcw != OORH) &&
          (MX_Gateway_B.RateTransition11_gpcw != NOT_IN_NEUTRAL) &&
          ((MX_Gateway_B.RateTransition6_b4bp == ACTIVE) ||
           (MX_Gateway_B.RateTransition6_b4bp == INACTIVE)) &&
          ((MX_Gateway_B.RateTransition13_i410 == ACTIVE) ||
           (MX_Gateway_B.RateTransition13_i410 == INACTIVE)) &&
          (MX_Gateway_B.RateTransition17_ptxy != OORL) &&
          (MX_Gateway_B.RateTransition17_ptxy != OORH) &&
          (MX_Gateway_B.RateTransition17_ptxy != NOT_IN_NEUTRAL) &&
          (MX_Gateway_B.RateTransition48_lpnr != OORL) &&
          (MX_Gateway_B.RateTransition48_lpnr != OORH) &&
          (MX_Gateway_B.RateTransition48_lpnr != NOT_IN_NEUTRAL) &&
          (MX_Gateway_B.RateTransition51_ey4f != OORL) &&
          (MX_Gateway_B.RateTransition51_ey4f != OORH) &&
          (MX_Gateway_B.RateTransition51_ey4f != NOT_IN_NEUTRAL) &&
          (MX_Gateway_B.RateTransition34_ka0s == NORMAL) && (state_HydExchange ==
           NORMAL) && (MX_Gateway_B.RateTransition12_ftpz != NO_COMMUNICATION) &&
          (MX_Gateway_B.RateTransition16_lryf != NO_COMMUNICATION) &&
          (MX_Gateway_B.RateTransition4_kxeu != NO_COMMUNICATION) &&
          (MX_Gateway_B.RateTransition44_nwoc != NO_COMMUNICATION) &&
          (MX_Gateway_B.RateTransition47_j5gh != NO_COMMUNICATION) &&
          (MX_Gateway_B.RateTransition39_oy3c == NORMAL) &&
          ((eeMirror.ee_ThrottleCalState == NORMAL) ||
           (CONSTANT_DATA->CAN_THROTTLE_FUNCTION == NON_FUNCTIONAL)) &&
          ((icon_Service != ERROR_FLASH) || (eeMirror.deluxe_G5 != ACTIVE))) {
        // Transition: '<S627>:6'
        MX_Gateway_DWork.bitsForTID2.is_SOLID = MX_Gateway_IN_INACTIVE_mgt2;
      }
    } else {
      // During 'INACTIVE': '<S627>:1'
      if ((MX_Gateway_B.RateTransition53_cphi != NORMAL) ||
          (MX_Gateway_B.RateTransition52_lf11 != NORMAL) ||
          (MX_Gateway_B.RateTransition28_gkpf != NORMAL) ||
          (MX_Gateway_B.RateTransition30_hltz != NORMAL) ||
          ((MX_Gateway_B.RateTransition27_egec != ACTIVE) &&
           (MX_Gateway_B.RateTransition27_egec != INACTIVE)) ||
          (state_SensorSupply1 != NORMAL) || (state_SensorSupply2 != NORMAL) ||
          (MX_Gateway_B.RateTransition46_f0p4 != NORMAL) ||
          (MX_Gateway_B.RateTransition43 == NO_COMMUNICATION) ||
          (MX_Gateway_B.RateTransition50_dmt4 != NORMAL) ||
          ((MX_Gateway_B.RateTransition9_eqf3 != ACTIVE) &&
           (MX_Gateway_B.RateTransition9_eqf3 != INACTIVE)) ||
          ((MX_Gateway_B.RateTransition10_gdiv != ACTIVE) &&
           (MX_Gateway_B.RateTransition10_gdiv != INACTIVE)) ||
          (MX_Gateway_B.RateTransition11_gpcw == OORL) ||
          (MX_Gateway_B.RateTransition11_gpcw == OORH) ||
          (MX_Gateway_B.RateTransition11_gpcw == NOT_IN_NEUTRAL) ||
          ((MX_Gateway_B.RateTransition6_b4bp != ACTIVE) &&
           (MX_Gateway_B.RateTransition6_b4bp != INACTIVE)) ||
          ((MX_Gateway_B.RateTransition13_i410 != ACTIVE) &&
           (MX_Gateway_B.RateTransition13_i410 != INACTIVE)) ||
          (MX_Gateway_B.RateTransition17_ptxy == OORL) ||
          (MX_Gateway_B.RateTransition17_ptxy == OORH) ||
          (MX_Gateway_B.RateTransition17_ptxy == NOT_IN_NEUTRAL) ||
          (MX_Gateway_B.RateTransition48_lpnr == OORL) ||
          (MX_Gateway_B.RateTransition48_lpnr == OORH) ||
          (MX_Gateway_B.RateTransition48_lpnr == NOT_IN_NEUTRAL) ||
          (MX_Gateway_B.RateTransition51_ey4f == OORL) ||
          (MX_Gateway_B.RateTransition51_ey4f == OORH) ||
          (MX_Gateway_B.RateTransition51_ey4f == NOT_IN_NEUTRAL) ||
          (MX_Gateway_B.RateTransition34_ka0s != NORMAL) || (state_HydExchange
           != NORMAL) || (MX_Gateway_B.RateTransition12_ftpz == NO_COMMUNICATION)
          || (MX_Gateway_B.RateTransition16_lryf == NO_COMMUNICATION) ||
          (MX_Gateway_B.RateTransition4_kxeu == NO_COMMUNICATION) ||
          (MX_Gateway_B.RateTransition44_nwoc == NO_COMMUNICATION) ||
          (MX_Gateway_B.RateTransition47_j5gh == NO_COMMUNICATION) ||
          (MX_Gateway_B.RateTransition39_oy3c != NORMAL) ||
          ((eeMirror.ee_ThrottleCalState != NORMAL) &&
           (CONSTANT_DATA->CAN_THROTTLE_FUNCTION != NON_FUNCTIONAL)) ||
          ((icon_Service == ERROR_FLASH) && (eeMirror.deluxe_G5 == ACTIVE))) {
        // Transition: '<S627>:5'
        MX_Gateway_DWork.bitsForTID2.is_SOLID = MX_Gateway_IN_ACTIVE_lz1p;

        // Entry 'ACTIVE': '<S627>:2'
        icon_General = ACTIVE;
      } else {
        icon_General = INACTIVE;
      }
    }
  }

  // End of Chart: '<S603>/WarningIcon'
}

// System initialize for atomic system: '<S27>/mod_GlowPlugIcon'
void MX_Gatewa_mod_GlowPlugIcon_Init(void)
{
  // Chart: '<S604>/GlowPlugIcon'
  // Entry: MX_Gtwy_Control/PanelInterface/mod_GlowPlugIcon/GlowPlugIcon
  // Entry Internal: MX_Gtwy_Control/PanelInterface/mod_GlowPlugIcon/GlowPlugIcon 
  // Transition: '<S628>:9'
  MX_Gateway_DWork.bitsForTID2.is_c89_MX_Gateway = MX_Gateway_IN_INACTIVE_ntul;

  // Entry 'INACTIVE': '<S628>:1'
  icon_GlowPlug = INACTIVE;
}

// Output and update for atomic system: '<S27>/mod_GlowPlugIcon'
void MX_Gateway_mod_GlowPlugIcon(void)
{
  // Chart: '<S604>/GlowPlugIcon'
  // Gateway: MX_Gtwy_Control/PanelInterface/mod_GlowPlugIcon/GlowPlugIcon
  // During: MX_Gtwy_Control/PanelInterface/mod_GlowPlugIcon/GlowPlugIcon
  switch (MX_Gateway_DWork.bitsForTID2.is_c89_MX_Gateway) {
   case MX_Gateway_IN_ACTIVE_obqu:
    icon_GlowPlug = ACTIVE;

    // During 'ACTIVE': '<S628>:2'
    if ((dout_GlowPlug == (int32_T)INACTIVE) &&
        ((MX_Gateway_B.RateTransition40_flay == INACTIVE) ||
         (MX_Gateway_B.RateTransition41_oacy == ENGINE_RUNNING))) {
      // Transition: '<S628>:5'
      MX_Gateway_DWork.bitsForTID2.is_c89_MX_Gateway =
        MX_Gateway_IN_INACTIVE_ntul;

      // Entry 'INACTIVE': '<S628>:1'
      icon_GlowPlug = INACTIVE;
    } else {
      if ((state_GlowPlugOutput != NORMAL) || (state_GlowPlugRelay != NORMAL)) {
        // Transition: '<S628>:8'
        MX_Gateway_DWork.bitsForTID2.is_c89_MX_Gateway =
          MX_Gateway_IN_ERROR_lmjx;

        // Entry 'ERROR': '<S628>:3'
        icon_GlowPlug = ERROR_FLASH;
      }
    }
    break;

   case MX_Gateway_IN_ERROR_lmjx:
    icon_GlowPlug = ERROR_FLASH;

    // During 'ERROR': '<S628>:3'
    if ((state_GlowPlugOutput == NORMAL) && (state_GlowPlugRelay == NORMAL)) {
      // Transition: '<S628>:7'
      MX_Gateway_DWork.bitsForTID2.is_c89_MX_Gateway =
        MX_Gateway_IN_INACTIVE_ntul;

      // Entry 'INACTIVE': '<S628>:1'
      icon_GlowPlug = INACTIVE;
    }
    break;

   default:
    icon_GlowPlug = INACTIVE;

    // During 'INACTIVE': '<S628>:1'
    if ((state_GlowPlugOutput != NORMAL) || (state_GlowPlugRelay != NORMAL)) {
      // Transition: '<S628>:6'
      MX_Gateway_DWork.bitsForTID2.is_c89_MX_Gateway = MX_Gateway_IN_ERROR_lmjx;

      // Entry 'ERROR': '<S628>:3'
      icon_GlowPlug = ERROR_FLASH;
    } else {
      if ((dout_GlowPlug == (int32_T)ACTIVE) ||
          ((MX_Gateway_B.RateTransition40_flay == ACTIVE) &&
           (MX_Gateway_B.RateTransition41_oacy != ENGINE_RUNNING))) {
        // Transition: '<S628>:4'
        MX_Gateway_DWork.bitsForTID2.is_c89_MX_Gateway =
          MX_Gateway_IN_ACTIVE_obqu;

        // Entry 'ACTIVE': '<S628>:2'
        icon_GlowPlug = ACTIVE;
      }
    }
    break;
  }

  // End of Chart: '<S604>/GlowPlugIcon'
}

// Output and update for atomic system: '<S27>/mod_HourMeterIcon'
void MX_Gateway_mod_HourMeterIcon(void)
{
  // Truth Table: '<S605>/Truth_Table'
  // Truth Table Function 'MX_Gtwy_Control/PanelInterface/mod_HourMeterIcon/Truth_Table': '<S629>:1' 
  //  Hourmeter
  // Condition '#1': '<S629>:1:13'
  //  Glow plugs
  // Condition '#2': '<S629>:1:17'
  //  Service Clock
  // Condition '#3': '<S629>:1:21'
  //  Job Clock 1
  // Condition '#4': '<S629>:1:25'
  //  Job Clock 2
  // Condition '#5': '<S629>:1:29'
  //  Service Clock is in alarm
  // Condition '#6': '<S629>:1:33'
  if ((int32_T)state_InfoPrimary == 0) {
    // Decision 'D1': '<S629>:1:35'
    //  Turn on icon
    // Action '1': '<S629>:1:55'
    icon_Hourmeter = 1U;
  } else if ((int32_T)state_InfoSecondary == 1) {
    // Decision 'D2': '<S629>:1:37'
    //  Turn on icon
    // Action '1': '<S629>:1:55'
    icon_Hourmeter = 1U;
  } else if ((int32_T)state_InfoPrimary == 4) {
    // Decision 'D3': '<S629>:1:39'
    //  Turn on icon
    // Action '1': '<S629>:1:55'
    icon_Hourmeter = 1U;
  } else if ((int32_T)state_InfoPrimary == 6) {
    // Decision 'D4': '<S629>:1:41'
    //  Turn on icon
    // Action '1': '<S629>:1:55'
    icon_Hourmeter = 1U;
  } else if ((int32_T)state_InfoPrimary == 7) {
    // Decision 'D5': '<S629>:1:43'
    //  Turn on icon
    // Action '1': '<S629>:1:55'
    icon_Hourmeter = 1U;
  } else if ((int32_T)state_InfoSecondary == 11) {
    // Decision 'D6': '<S629>:1:45'
    //  Flash Icon
    // Action '3': '<S629>:1:67'
    icon_Hourmeter = 2U;
  } else {
    // Decision 'D7': '<S629>:1:47'
    //  Default
    //  Turn off icon
    // Action '2': '<S629>:1:61'
    icon_Hourmeter = 0U;
  }

  // End of Truth Table: '<S605>/Truth_Table'
}

// System initialize for atomic system: '<S27>/mod_HydraulicIcon'
void MX_Gatew_mod_HydraulicIcon_Init(void)
{
  // Chart: '<S606>/HydraulicIcon'
  // Entry: MX_Gtwy_Control/PanelInterface/mod_HydraulicIcon/HydraulicIcon
  // Entry Internal: MX_Gtwy_Control/PanelInterface/mod_HydraulicIcon/HydraulicIcon 
  // Transition: '<S630>:4'
  MX_Gateway_DWork.bitsForTID2.is_c91_MX_Gateway = MX_Gateway_IN_INACTIVE_op2o;

  // Entry 'INACTIVE': '<S630>:1'
  icon_Hydraulic = INACTIVE;
}

// Output and update for atomic system: '<S27>/mod_HydraulicIcon'
void MX_Gateway_mod_HydraulicIcon(void)
{
  // Chart: '<S606>/HydraulicIcon'
  // Gateway: MX_Gtwy_Control/PanelInterface/mod_HydraulicIcon/HydraulicIcon
  // During: MX_Gtwy_Control/PanelInterface/mod_HydraulicIcon/HydraulicIcon
  switch (MX_Gateway_DWork.bitsForTID2.is_c91_MX_Gateway) {
   case MX_Gateway_IN_ACTIVE_igzq:
    icon_Hydraulic = ACTIVE;

    // During 'ACTIVE': '<S630>:2'
    if ((state_HOT == NORMAL) || (state_HOT == COLD)) {
      // Transition: '<S630>:6'
      MX_Gateway_DWork.bitsForTID2.is_c91_MX_Gateway =
        MX_Gateway_IN_INACTIVE_op2o;

      // Entry 'INACTIVE': '<S630>:1'
      icon_Hydraulic = INACTIVE;
    } else {
      if ((state_HOT == EXTREMELY_HIGH) || (state_HOT == SHUTDOWN)) {
        // Transition: '<S630>:8'
        MX_Gateway_DWork.bitsForTID2.is_c91_MX_Gateway =
          MX_Gateway_IN_ERROR_l5g0;

        // Entry 'ERROR': '<S630>:3'
        icon_Hydraulic = ERROR_FLASH;
      }
    }
    break;

   case MX_Gateway_IN_ERROR_l5g0:
    icon_Hydraulic = ERROR_FLASH;

    // During 'ERROR': '<S630>:3'
    if ((state_HOT == NORMAL) || (state_HOT == HIGH) || (state_HOT == COLD)) {
      // Transition: '<S630>:9'
      MX_Gateway_DWork.bitsForTID2.is_c91_MX_Gateway =
        MX_Gateway_IN_INACTIVE_op2o;

      // Entry 'INACTIVE': '<S630>:1'
      icon_Hydraulic = INACTIVE;
    }
    break;

   default:
    icon_Hydraulic = INACTIVE;

    // During 'INACTIVE': '<S630>:1'
    if ((state_HOT == EXTREMELY_HIGH) || (state_HOT == SHUTDOWN)) {
      // Transition: '<S630>:7'
      MX_Gateway_DWork.bitsForTID2.is_c91_MX_Gateway = MX_Gateway_IN_ERROR_l5g0;

      // Entry 'ERROR': '<S630>:3'
      icon_Hydraulic = ERROR_FLASH;
    } else {
      if ((state_HOT == HIGH) || (state_HOT == OORL) || (state_HOT == OORH)) {
        // Transition: '<S630>:5'
        MX_Gateway_DWork.bitsForTID2.is_c91_MX_Gateway =
          MX_Gateway_IN_ACTIVE_igzq;

        // Entry 'ACTIVE': '<S630>:2'
        icon_Hydraulic = ACTIVE;
      }
    }
    break;
  }

  // End of Chart: '<S606>/HydraulicIcon'
}

// Output and update for atomic system: '<S27>/mod_JobClock1Icon'
void MX_Gateway_mod_JobClock1Icon(void)
{
  // Truth Table: '<S607>/Truth_Table'
  // Truth Table Function 'MX_Gtwy_Control/PanelInterface/mod_JobClock1Icon/Truth_Table': '<S631>:1' 
  //  Job clock 1 is active
  // Condition '#1': '<S631>:1:8'
  if ((int32_T)state_InfoPrimary == 6) {
    // Decision 'D1': '<S631>:1:10'
    //  Turn on icon.
    // Action '1': '<S631>:1:20'
    icon_JobClock1 = 1U;
  } else {
    // Decision 'D2': '<S631>:1:12'
    //  Default
    //  Turn off icon.
    // Action '2': '<S631>:1:26'
    icon_JobClock1 = 0U;
  }

  // End of Truth Table: '<S607>/Truth_Table'
}

// Output and update for atomic system: '<S27>/mod_JobClock2Icon'
void MX_Gateway_mod_JobClock2Icon(void)
{
  // Truth Table: '<S608>/Truth_Table'
  // Truth Table Function 'MX_Gtwy_Control/PanelInterface/mod_JobClock2Icon/Truth_Table': '<S632>:1' 
  //  Job clock 2 is active
  // Condition '#1': '<S632>:1:8'
  if ((int32_T)state_InfoPrimary == 7) {
    // Decision 'D1': '<S632>:1:10'
    //  Turn on icon.
    // Action '1': '<S632>:1:20'
    icon_JobClock2 = 1U;
  } else {
    // Decision 'D2': '<S632>:1:12'
    //  Default
    //  Turn off icon.
    // Action '2': '<S632>:1:26'
    icon_JobClock2 = 0U;
  }

  // End of Truth Table: '<S608>/Truth_Table'
}

// System initialize for atomic system: '<S27>/mod_LockoutIcon'
void MX_Gateway_mod_LockoutIcon_Init(void)
{
  // SystemInitialize for Chart: '<S609>/LockoutIcons'
  MX_Gateway_DWork.bitsForTID2.is_active_c95_MX_Gateway = 0U;
  MX_Gateway_DWork.bitsForTID2.is_c95_MX_Gateway =
    MX_Gate_IN_NO_ACTIVE_CHILD_jrfm;
  icon_Lockout = 0U;
}

// Output and update for atomic system: '<S27>/mod_LockoutIcon'
void MX_Gateway_mod_LockoutIcon(void)
{
  // Chart: '<S609>/LockoutIcons'
  // Gateway: MX_Gtwy_Control/PanelInterface/mod_LockoutIcon/LockoutIcons
  // During: MX_Gtwy_Control/PanelInterface/mod_LockoutIcon/LockoutIcons
  if ((uint32_T)MX_Gateway_DWork.bitsForTID2.is_active_c95_MX_Gateway == 0U) {
    // Entry: MX_Gtwy_Control/PanelInterface/mod_LockoutIcon/LockoutIcons
    MX_Gateway_DWork.bitsForTID2.is_active_c95_MX_Gateway = 1U;

    // Entry Internal: MX_Gtwy_Control/PanelInterface/mod_LockoutIcon/LockoutIcons 
    // Transition: '<S633>:4'
    MX_Gateway_DWork.bitsForTID2.is_c95_MX_Gateway = MX_Gateway_IN_INACTIVE_fdmy;

    // Entry 'INACTIVE': '<S633>:1'
    icon_Lockout = INACTIVE;
  } else {
    switch (MX_Gateway_DWork.bitsForTID2.is_c95_MX_Gateway) {
     case MX_Gateway_IN_ACTIVE_kxp1:
      icon_Lockout = ACTIVE;

      // During 'ACTIVE': '<S633>:2'
      if (MX_Gateway_B.RateTransition7_kfld == ACTIVE) {
        // Transition: '<S633>:6'
        MX_Gateway_DWork.bitsForTID2.is_c95_MX_Gateway =
          MX_Gateway_IN_INACTIVE_fdmy;

        // Entry 'INACTIVE': '<S633>:1'
        icon_Lockout = INACTIVE;
      } else {
        if ((MX_Gateway_B.RateTransition2_htgo == OORH) ||
            (MX_Gateway_B.RateTransition2_htgo == OORL) ||
            (MX_Gateway_B.RateTransition3_p0dx == FAILURE) ||
            (MX_Gateway_B.RateTransition7_kfld == SHORT_TO_BATTERY) ||
            (MX_Gateway_B.RateTransition7_kfld == SHORT_TO_GROUND) ||
            (MX_Gateway_B.RateTransition7_kfld == OPEN_CIRCUIT) ||
            (MX_Gateway_B.RateTransition7_kfld == OVERCURRENT) ||
            (MX_Gateway_B.RateTransition37_hv2o == SHORT_TO_BATTERY) ||
            (MX_Gateway_B.RateTransition37_hv2o == SHORT_TO_GROUND) ||
            (MX_Gateway_B.RateTransition37_hv2o == OPEN_CIRCUIT) ||
            (MX_Gateway_B.RateTransition37_hv2o == OVERCURRENT)) {
          // Transition: '<S633>:8'
          MX_Gateway_DWork.bitsForTID2.is_c95_MX_Gateway =
            MX_Gateway_IN_ERROR_hdaa;

          // Entry 'ERROR': '<S633>:3'
          icon_Lockout = ERROR_FLASH;
        }
      }
      break;

     case MX_Gateway_IN_ERROR_hdaa:
      icon_Lockout = ERROR_FLASH;

      // During 'ERROR': '<S633>:3'
      if ((MX_Gateway_B.RateTransition2_htgo != OORH) &&
          (MX_Gateway_B.RateTransition2_htgo != OORL) &&
          (MX_Gateway_B.RateTransition3_p0dx != FAILURE) &&
          (MX_Gateway_B.RateTransition7_kfld != SHORT_TO_BATTERY) &&
          (MX_Gateway_B.RateTransition7_kfld != SHORT_TO_GROUND) &&
          (MX_Gateway_B.RateTransition7_kfld != OPEN_CIRCUIT) &&
          (MX_Gateway_B.RateTransition7_kfld != OVERCURRENT) &&
          (MX_Gateway_B.RateTransition37_hv2o != SHORT_TO_BATTERY) &&
          (MX_Gateway_B.RateTransition37_hv2o != SHORT_TO_GROUND) &&
          (MX_Gateway_B.RateTransition37_hv2o != OPEN_CIRCUIT) &&
          (MX_Gateway_B.RateTransition37_hv2o != OVERCURRENT)) {
        // Transition: '<S633>:9'
        MX_Gateway_DWork.bitsForTID2.is_c95_MX_Gateway =
          MX_Gateway_IN_INACTIVE_fdmy;

        // Entry 'INACTIVE': '<S633>:1'
        icon_Lockout = INACTIVE;
      }
      break;

     default:
      icon_Lockout = INACTIVE;

      // During 'INACTIVE': '<S633>:1'
      if ((MX_Gateway_B.RateTransition2_htgo == OORH) ||
          (MX_Gateway_B.RateTransition2_htgo == OORL) ||
          (MX_Gateway_B.RateTransition3_p0dx == FAILURE) ||
          (MX_Gateway_B.RateTransition7_kfld == SHORT_TO_BATTERY) ||
          (MX_Gateway_B.RateTransition7_kfld == SHORT_TO_GROUND) ||
          (MX_Gateway_B.RateTransition7_kfld == OPEN_CIRCUIT) ||
          (MX_Gateway_B.RateTransition7_kfld == OVERCURRENT) ||
          (MX_Gateway_B.RateTransition37_hv2o == SHORT_TO_BATTERY) ||
          (MX_Gateway_B.RateTransition37_hv2o == SHORT_TO_GROUND) ||
          (MX_Gateway_B.RateTransition37_hv2o == OPEN_CIRCUIT) ||
          (MX_Gateway_B.RateTransition37_hv2o == OVERCURRENT)) {
        // Transition: '<S633>:7'
        MX_Gateway_DWork.bitsForTID2.is_c95_MX_Gateway =
          MX_Gateway_IN_ERROR_hdaa;

        // Entry 'ERROR': '<S633>:3'
        icon_Lockout = ERROR_FLASH;
      } else {
        if (MX_Gateway_B.RateTransition7_kfld == INACTIVE) {
          // Transition: '<S633>:5'
          MX_Gateway_DWork.bitsForTID2.is_c95_MX_Gateway =
            MX_Gateway_IN_ACTIVE_kxp1;

          // Entry 'ACTIVE': '<S633>:2'
          icon_Lockout = ACTIVE;
        }
      }
      break;
    }
  }

  // End of Chart: '<S609>/LockoutIcons'
}

// System initialize for atomic system: '<S27>/mod_RPMIcon'
void MX_Gateway_mod_RPMIcon_Init(void)
{
  // Chart: '<S610>/RPM_ICON'
  // Entry: MX_Gtwy_Control/PanelInterface/mod_RPMIcon/RPM_ICON
  // Entry Internal: MX_Gtwy_Control/PanelInterface/mod_RPMIcon/RPM_ICON
  // Transition: '<S634>:9'
  MX_Gateway_DWork.bitsForTID2.is_c94_MX_Gateway = MX_Gateway_IN_INACTIVE_kbzf;

  // Entry 'INACTIVE': '<S634>:1'
  icon_RPM = INACTIVE;
}

// Output and update for atomic system: '<S27>/mod_RPMIcon'
void MX_Gateway_mod_RPMIcon(void)
{
  // Chart: '<S610>/RPM_ICON'
  // Gateway: MX_Gtwy_Control/PanelInterface/mod_RPMIcon/RPM_ICON
  // During: MX_Gtwy_Control/PanelInterface/mod_RPMIcon/RPM_ICON
  switch (MX_Gateway_DWork.bitsForTID2.is_c94_MX_Gateway) {
   case MX_Gateway_IN_ACTIVE_mdep:
    icon_RPM = ACTIVE;

    // During 'ACTIVE': '<S634>:2'
    if (state_InfoPrimary != DISPLAY_ENGINE_RPM) {
      // Transition: '<S634>:8'
      MX_Gateway_DWork.bitsForTID2.is_c94_MX_Gateway =
        MX_Gateway_IN_INACTIVE_kbzf;

      // Entry 'INACTIVE': '<S634>:1'
      icon_RPM = INACTIVE;
    } else {
      if (MX_Gateway_B.RateTransition1_na4t != NORMAL) {
        // Transition: '<S634>:7'
        MX_Gateway_DWork.bitsForTID2.is_c94_MX_Gateway =
          MX_Gateway_IN_ERROR_aiwx;

        // Entry 'ERROR': '<S634>:3'
        icon_RPM = ERROR_FLASH;
      }
    }
    break;

   case MX_Gateway_IN_ERROR_aiwx:
    icon_RPM = ERROR_FLASH;

    // During 'ERROR': '<S634>:3'
    if (MX_Gateway_B.RateTransition1_na4t == NORMAL) {
      // Transition: '<S634>:5'
      MX_Gateway_DWork.bitsForTID2.is_c94_MX_Gateway =
        MX_Gateway_IN_INACTIVE_kbzf;

      // Entry 'INACTIVE': '<S634>:1'
      icon_RPM = INACTIVE;
    }
    break;

   default:
    icon_RPM = INACTIVE;

    // During 'INACTIVE': '<S634>:1'
    if (MX_Gateway_B.RateTransition1_na4t != NORMAL) {
      // Transition: '<S634>:6'
      MX_Gateway_DWork.bitsForTID2.is_c94_MX_Gateway = MX_Gateway_IN_ERROR_aiwx;

      // Entry 'ERROR': '<S634>:3'
      icon_RPM = ERROR_FLASH;
    } else {
      if (state_InfoPrimary == DISPLAY_ENGINE_RPM) {
        // Transition: '<S634>:4'
        MX_Gateway_DWork.bitsForTID2.is_c94_MX_Gateway =
          MX_Gateway_IN_ACTIVE_mdep;

        // Entry 'ACTIVE': '<S634>:2'
        icon_RPM = ACTIVE;
      }
    }
    break;
  }

  // End of Chart: '<S610>/RPM_ICON'
}

// System initialize for atomic system: '<S27>/mod_SeatBeltIcon'
void MX_Gatewa_mod_SeatBeltIcon_Init(void)
{
  // Chart: '<S611>/Chart'
  // Entry: MX_Gtwy_Control/PanelInterface/mod_SeatBeltIcon/Chart
  // Entry Internal: MX_Gtwy_Control/PanelInterface/mod_SeatBeltIcon/Chart
  // Transition: '<S635>:3'
  MX_Gateway_DWork.bitsForTID2.is_c96_MX_Gateway = MX_Gateway_IN_ACTIVE_pqjc;

  // Entry 'ACTIVE': '<S635>:1'
  icon_Seatbelt = ACTIVE;
  MX_Gateway_DWork.debounceCount_hxaf = 0U;
}

// Output and update for atomic system: '<S27>/mod_SeatBeltIcon'
void MX_Gateway_mod_SeatBeltIcon(void)
{
  // Chart: '<S611>/Chart'
  // Gateway: MX_Gtwy_Control/PanelInterface/mod_SeatBeltIcon/Chart
  // During: MX_Gtwy_Control/PanelInterface/mod_SeatBeltIcon/Chart
  if (MX_Gateway_DWork.bitsForTID2.is_c96_MX_Gateway ==
      MX_Gateway_IN_ACTIVE_pqjc) {
    icon_Seatbelt = ACTIVE;

    // During 'ACTIVE': '<S635>:1'
    if ((int32_T)MX_Gateway_DWork.debounceCount_hxaf >= 450) {
      // Transition: '<S635>:4'
      MX_Gateway_DWork.bitsForTID2.is_c96_MX_Gateway =
        MX_Gateway_IN_INACTIVE_ipmx;

      // Entry 'INACTIVE': '<S635>:2'
      icon_Seatbelt = INACTIVE;
    } else {
      MX_Gateway_DWork.debounceCount_hxaf = (uint16_T)(int32_T)((int32_T)
        MX_Gateway_DWork.debounceCount_hxaf + 1);
    }
  } else {
    icon_Seatbelt = INACTIVE;

    // During 'INACTIVE': '<S635>:2'
  }

  // End of Chart: '<S611>/Chart'
}

// Output and update for atomic system: '<S27>/mod_ServiceClockIcon'
void MX_Gateway_mod_ServiceClockIcon(void)
{
  boolean_T b;

  // Truth Table: '<S612>/Truth_Table'
  // Truth Table Function 'MX_Gtwy_Control/PanelInterface/mod_ServiceClockIcon/Truth_Table': '<S636>:1' 
  //  Error Codes are active
  // Condition '#1': '<S636>:1:14'
  // Condition '#2': '<S636>:1:17'
  //  Air Filter Plugged
  // Condition '#3': '<S636>:1:21'
  //  Filter not connected
  // Condition '#4': '<S636>:1:25'
  // Condition '#5': '<S636>:1:28'
  //  Service Clock is in alarm
  if (((int32_T)state_InfoSecondary == 11) && (eeMirror.deluxe_G5 != ACTIVE) &&
      (CONSTANT_DATA->DELUXE_GEN5_5_FUNCTION == NON_FUNCTIONAL)) {
    // Condition '#6': '<S636>:1:32'
    b = true;
  } else {
    b = false;
  }

  //  Service Clock is active
  // Condition '#7': '<S636>:1:36'
  if ((int32_T)state_InfoPrimary == 4) {
    // Decision 'D1': '<S636>:1:38'
    //  Turn on icon.
    // Action '1': '<S636>:1:60'
    icon_Service = 1U;
  } else if (MX_Gateway_B.RateTransition32_bo2v == PLUGGED) {
    // Decision 'D2': '<S636>:1:40'
    //  Flash Icon
    // Action '3': '<S636>:1:72'
    icon_Service = 2U;
  } else if (state_HCFilter1 == PLUGGED) {
    // Decision 'D3': '<S636>:1:42'
    //  Flash Icon
    // Action '3': '<S636>:1:72'
    icon_Service = 2U;
  } else if ((int32_T)state_InfoPrimary == 5) {
    // Decision 'D4': '<S636>:1:44'
    //  Turn on icon.
    // Action '1': '<S636>:1:60'
    icon_Service = 1U;
  } else if (state_HCFilter1 == NOT_CONNECTED) {
    // Decision 'D5': '<S636>:1:46'
    //  Flash Icon
    // Action '3': '<S636>:1:72'
    icon_Service = 2U;
  } else if (MX_Gateway_B.RateTransition32_bo2v == NOT_CONNECTED) {
    // Decision 'D6': '<S636>:1:48'
    //  Flash Icon
    // Action '3': '<S636>:1:72'
    icon_Service = 2U;
  } else if (b) {
    //  Flash Icon
    // Action '3': '<S636>:1:72'
    icon_Service = 2U;
  } else {
    //  Default
    //  Turn off icon.
    // Action '2': '<S636>:1:66'
    icon_Service = 0U;
  }

  // End of Truth Table: '<S612>/Truth_Table'
}

// System initialize for atomic system: '<S27>/mod_TwoSpeedIcon'
void MX_Gatewa_mod_TwoSpeedIcon_Init(void)
{
  // Chart: '<S613>/RabbitIcon'
  // Entry: MX_Gtwy_Control/PanelInterface/mod_TwoSpeedIcon/RabbitIcon
  // Entry Internal: MX_Gtwy_Control/PanelInterface/mod_TwoSpeedIcon/RabbitIcon
  // Transition: '<S637>:4'
  MX_Gateway_DWork.bitsForTID2.is_c49_MX_Gateway = MX_Gateway_IN_INACTIVE_digz;

  // Entry 'INACTIVE': '<S637>:1'
  icon_Rabbit = INACTIVE;
}

// Output and update for atomic system: '<S27>/mod_TwoSpeedIcon'
void MX_Gateway_mod_TwoSpeedIcon(void)
{
  // Chart: '<S613>/RabbitIcon'
  // Gateway: MX_Gtwy_Control/PanelInterface/mod_TwoSpeedIcon/RabbitIcon
  // During: MX_Gtwy_Control/PanelInterface/mod_TwoSpeedIcon/RabbitIcon
  switch (MX_Gateway_DWork.bitsForTID2.is_c49_MX_Gateway) {
   case MX_Gateway_IN_ACTIVE_hjng:
    icon_Rabbit = ACTIVE;

    // During 'ACTIVE': '<S637>:2'
    if (MX_Gateway_B.RateTransition42_loar == INACTIVE) {
      // Transition: '<S637>:6'
      MX_Gateway_DWork.bitsForTID2.is_c49_MX_Gateway =
        MX_Gateway_IN_INACTIVE_digz;

      // Entry 'INACTIVE': '<S637>:1'
      icon_Rabbit = INACTIVE;
    } else {
      if ((MX_Gateway_B.RateTransition8_iebw == SHORT_TO_GROUND) ||
          (MX_Gateway_B.RateTransition8_iebw == SHORT_TO_BATTERY) ||
          (MX_Gateway_B.RateTransition8_iebw == OPEN_CIRCUIT)) {
        // Transition: '<S637>:8'
        MX_Gateway_DWork.bitsForTID2.is_c49_MX_Gateway =
          MX_Gateway_IN_ERROR_a5ft;

        // Entry 'ERROR': '<S637>:3'
        icon_Rabbit = ERROR_FLASH;
      }
    }
    break;

   case MX_Gateway_IN_ERROR_a5ft:
    icon_Rabbit = ERROR_FLASH;

    // During 'ERROR': '<S637>:3'
    if ((MX_Gateway_B.RateTransition8_iebw != SHORT_TO_GROUND) &&
        (MX_Gateway_B.RateTransition8_iebw != SHORT_TO_BATTERY) &&
        (MX_Gateway_B.RateTransition8_iebw != OPEN_CIRCUIT)) {
      // Transition: '<S637>:9'
      MX_Gateway_DWork.bitsForTID2.is_c49_MX_Gateway =
        MX_Gateway_IN_INACTIVE_digz;

      // Entry 'INACTIVE': '<S637>:1'
      icon_Rabbit = INACTIVE;
    }
    break;

   default:
    icon_Rabbit = INACTIVE;

    // During 'INACTIVE': '<S637>:1'
    if ((MX_Gateway_B.RateTransition8_iebw == SHORT_TO_GROUND) ||
        (MX_Gateway_B.RateTransition8_iebw == SHORT_TO_BATTERY) ||
        (MX_Gateway_B.RateTransition8_iebw == OPEN_CIRCUIT)) {
      // Transition: '<S637>:7'
      MX_Gateway_DWork.bitsForTID2.is_c49_MX_Gateway = MX_Gateway_IN_ERROR_a5ft;

      // Entry 'ERROR': '<S637>:3'
      icon_Rabbit = ERROR_FLASH;
    } else {
      if (MX_Gateway_B.RateTransition42_loar == ACTIVE) {
        // Transition: '<S637>:5'
        MX_Gateway_DWork.bitsForTID2.is_c49_MX_Gateway =
          MX_Gateway_IN_ACTIVE_hjng;

        // Entry 'ACTIVE': '<S637>:2'
        icon_Rabbit = ACTIVE;
      }
    }
    break;
  }

  // End of Chart: '<S613>/RabbitIcon'
}

//
//  [EOF]


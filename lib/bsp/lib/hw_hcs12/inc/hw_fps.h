
// binary point scaling macros
#ifndef hw_fps_h
#define hw_fps_h

#include "stdint.h"

/* fixed point, binary scaling for 16 bit, signed variables */	 
#define Rnxx_INT16(num,x)  ((uint16_t)  (num) >> (x))
#define Rn24_INT16(num)   Rnxx_INT16(num,24)
#define Rn23_INT16(num)   Rnxx_INT16(num,23)
#define Rn22_INT16(num)   Rnxx_INT16(num,22)
#define Rn21_INT16(num)   Rnxx_INT16(num,21)
#define Rn20_INT16(num)   Rnxx_INT16(num,20)
#define Rn19_INT16(num)   Rnxx_INT16(num,19)
#define Rn18_INT16(num)   Rnxx_INT16(num,18)
#define Rn17_INT16(num)   Rnxx_INT16(num,17)
#define Rn16_INT16(num)   Rnxx_INT16(num,16)
#define Rn15_INT16(num)   Rnxx_INT16(num,15)
#define Rn14_INT16(num)   Rnxx_INT16(num,14)
#define Rn13_INT16(num)   Rnxx_INT16(num,13)
#define Rn12_INT16(num)   Rnxx_INT16(num,12)
#define Rn11_INT16(num)   Rnxx_INT16(num,11)
#define Rn10_INT16(num)   Rnxx_INT16(num,10)
#define Rn09_INT16(num)   Rnxx_INT16(num, 9)
#define Rn08_INT16(num)   Rnxx_INT16(num, 8)
#define Rn07_INT16(num)   Rnxx_INT16(num, 7)
#define Rn06_INT16(num)   Rnxx_INT16(num, 6)
#define Rn05_INT16(num)   Rnxx_INT16(num, 5)
#define Rn04_INT16(num)   Rnxx_INT16(num, 4)
#define Rn03_INT16(num)   Rnxx_INT16(num, 3)
#define Rn02_INT16(num)   Rnxx_INT16(num, 2)
#define Rn01_INT16(num)   Rnxx_INT16(num, 1)
#define Rpxx_INT16(num,x)  ((uint16_t)( (num) * (1uL << (x))))
#define Rp01_INT16(num)   Rpxx_INT16(num,1)
#define Rp02_INT16(num)   Rpxx_INT16(num,2)
#define Rp03_INT16(num)   Rpxx_INT16(num,3)
#define Rp04_INT16(num)   Rpxx_INT16(num,4)
#define Rp05_INT16(num)   Rpxx_INT16(num,5)
#define Rp06_INT16(num)   Rpxx_INT16(num,6)
#define Rp07_INT16(num)   Rpxx_INT16(num,7)
#define Rp08_INT16(num)   Rpxx_INT16(num,8)
#define Rp09_INT16(num)   Rpxx_INT16(num,9)
#define Rp10_INT16(num)   Rpxx_INT16(num,10)
#define Rp11_INT16(num)   Rpxx_INT16(num,11)
#define Rp12_INT16(num)   Rpxx_INT16(num,12)
#define Rp13_INT16(num)   Rpxx_INT16(num,13)
#define Rp14_INT16(num)   Rpxx_INT16(num,14)
#define Rp15_INT16(num)   Rpxx_INT16(num,15)
#define Rp16_INT16(num)   Rpxx_INT16(num,16)
#define Rp17_INT16(num)   Rpxx_INT16(num,17)
#define Rp18_INT16(num)   Rpxx_INT16(num,18)
#define Rp19_INT16(num)   Rpxx_INT16(num,19)
#define Rp20_INT16(num)   Rpxx_INT16(num,20)
#define Rp21_INT16(num)   Rpxx_INT16(num,21)
#define Rp22_INT16(num)   Rpxx_INT16(num,22)
#define Rp23_INT16(num)   Rpxx_INT16(num,23)
#define Rp24_INT16(num)   Rpxx_INT16(num,24)


/* fixed point, binary scaling for 16 bit, unsigned variables */   
#define Rnxx_UINT16(num,x)  ((uint16_t)  (num) >> (x))
#define Rn24_UINT16(num)   Rnxx_UINT16(num,24)
#define Rn23_UINT16(num)   Rnxx_UINT16(num,23)
#define Rn22_UINT16(num)   Rnxx_UINT16(num,22)
#define Rn21_UINT16(num)   Rnxx_UINT16(num,21)
#define Rn20_UINT16(num)   Rnxx_UINT16(num,20)
#define Rn19_UINT16(num)   Rnxx_UINT16(num,19)
#define Rn18_UINT16(num)   Rnxx_UINT16(num,18)
#define Rn17_UINT16(num)   Rnxx_UINT16(num,17)
#define Rn16_UINT16(num)   Rnxx_UINT16(num,16)
#define Rn15_UINT16(num)   Rnxx_UINT16(num,15)
#define Rn14_UINT16(num)   Rnxx_UINT16(num,14)
#define Rn13_UINT16(num)   Rnxx_UINT16(num,13)
#define Rn12_UINT16(num)   Rnxx_UINT16(num,12)
#define Rn11_UINT16(num)   Rnxx_UINT16(num,11)
#define Rn10_UINT16(num)   Rnxx_UINT16(num,10)
#define Rn09_UINT16(num)   Rnxx_UINT16(num, 9)
#define Rn08_UINT16(num)   Rnxx_UINT16(num, 8)
#define Rn07_UINT16(num)   Rnxx_UINT16(num, 7)
#define Rn06_UINT16(num)   Rnxx_UINT16(num, 6)
#define Rn05_UINT16(num)   Rnxx_UINT16(num, 5)
#define Rn04_UINT16(num)   Rnxx_UINT16(num, 4)
#define Rn03_UINT16(num)   Rnxx_UINT16(num, 3)
#define Rn02_UINT16(num)   Rnxx_UINT16(num, 2)
#define Rn01_UINT16(num)   Rnxx_UINT16(num, 1)
#define Rpxx_UINT16(num,x)  ((uint16_t)( (num) * (1uL << (x))))
#define Rp01_UINT16(num)   Rpxx_UINT16(num,1)
#define Rp02_UINT16(num)   Rpxx_UINT16(num,2)
#define Rp03_UINT16(num)   Rpxx_UINT16(num,3)
#define Rp04_UINT16(num)   Rpxx_UINT16(num,4)
#define Rp05_UINT16(num)   Rpxx_UINT16(num,5)
#define Rp06_UINT16(num)   Rpxx_UINT16(num,6)
#define Rp07_UINT16(num)   Rpxx_UINT16(num,7)
#define Rp08_UINT16(num)   Rpxx_UINT16(num,8)
#define Rp09_UINT16(num)   Rpxx_UINT16(num,9)
#define Rp10_UINT16(num)   Rpxx_UINT16(num,10)
#define Rp11_UINT16(num)   Rpxx_UINT16(num,11)
#define Rp12_UINT16(num)   Rpxx_UINT16(num,12)
#define Rp13_UINT16(num)   Rpxx_UINT16(num,13)
#define Rp14_UINT16(num)   Rpxx_UINT16(num,14)
#define Rp15_UINT16(num)   Rpxx_UINT16(num,15)
#define Rp16_UINT16(num)   Rpxx_UINT16(num,16)
#define Rp17_UINT16(num)   Rpxx_UINT16(num,17)
#define Rp18_UINT16(num)   Rpxx_UINT16(num,18)
#define Rp19_UINT16(num)   Rpxx_UINT16(num,19)
#define Rp20_UINT16(num)   Rpxx_UINT16(num,20)
#define Rp21_UINT16(num)   Rpxx_UINT16(num,21)
#define Rp22_UINT16(num)   Rpxx_UINT16(num,22)
#define Rp23_UINT16(num)   Rpxx_UINT16(num,23)
#define Rp24_UINT16(num)   Rpxx_UINT16(num,24)





/* fixed point, binary scaling for 32 bit, signed variables */   
#define Rnxx_INT32(num,x)  ((int32_t)  (num) >> (x))
#define Rn24_INT32(num)   Rnxx_INT32(num,24)
#define Rn23_INT32(num)   Rnxx_INT32(num,23)
#define Rn22_INT32(num)   Rnxx_INT32(num,22)
#define Rn21_INT32(num)   Rnxx_INT32(num,21)
#define Rn20_INT32(num)   Rnxx_INT32(num,20)
#define Rn19_INT32(num)   Rnxx_INT32(num,19)
#define Rn18_INT32(num)   Rnxx_INT32(num,18)
#define Rn17_INT32(num)   Rnxx_INT32(num,17)
#define Rn16_INT32(num)   Rnxx_INT32(num,16)
#define Rn15_INT32(num)   Rnxx_INT32(num,15)
#define Rn14_INT32(num)   Rnxx_INT32(num,14)
#define Rn13_INT32(num)   Rnxx_INT32(num,13)
#define Rn12_INT32(num)   Rnxx_INT32(num,12)
#define Rn11_INT32(num)   Rnxx_INT32(num,11)
#define Rn10_INT32(num)   Rnxx_INT32(num,10)
#define Rn09_INT32(num)   Rnxx_INT32(num, 9)
#define Rn08_INT32(num)   Rnxx_INT32(num, 8)
#define Rn07_INT32(num)   Rnxx_INT32(num, 7)
#define Rn06_INT32(num)   Rnxx_INT32(num, 6)
#define Rn05_INT32(num)   Rnxx_INT32(num, 5)
#define Rn04_INT32(num)   Rnxx_INT32(num, 4)
#define Rn03_INT32(num)   Rnxx_INT32(num, 3)
#define Rn02_INT32(num)   Rnxx_INT32(num, 2)
#define Rn01_INT32(num)   Rnxx_INT32(num, 1)
#define Rpxx_INT32(num,x)  ((int32_t)( (num) * (1uL << (x))))
#define Rp01_INT32(num)   Rpxx_INT32(num, 1)
#define Rp02_INT32(num)   Rpxx_INT32(num, 2)
#define Rp03_INT32(num)   Rpxx_INT32(num, 3)
#define Rp04_INT32(num)   Rpxx_INT32(num, 4)
#define Rp05_INT32(num)   Rpxx_INT32(num, 5)
#define Rp06_INT32(num)   Rpxx_INT32(num, 6)
#define Rp07_INT32(num)   Rpxx_INT32(num, 7)
#define Rp08_INT32(num)   Rpxx_INT32(num, 8)
#define Rp09_INT32(num)   Rpxx_INT32(num, 9)
#define Rp10_INT32(num)   Rpxx_INT32(num,10)
#define Rp11_INT32(num)   Rpxx_INT32(num,11)
#define Rp12_INT32(num)   Rpxx_INT32(num,12)
#define Rp13_INT32(num)   Rpxx_INT32(num,13)
#define Rp14_INT32(num)   Rpxx_INT32(num,14)
#define Rp15_INT32(num)   Rpxx_INT32(num,15)
#define Rp16_INT32(num)   Rpxx_INT32(num,16)
#define Rp17_INT32(num)   Rpxx_INT32(num,17)
#define Rp18_INT32(num)   Rpxx_INT32(num,18)
#define Rp19_INT32(num)   Rpxx_INT32(num,19)
#define Rp20_INT32(num)   Rpxx_INT32(num,20)
#define Rp21_INT32(num)   Rpxx_INT32(num,21)
#define Rp22_INT32(num)   Rpxx_INT32(num,22)
#define Rp23_INT32(num)   Rpxx_INT32(num,23)
#define Rp24_INT32(num)   Rpxx_INT32(num,24)


/* fixed point, binary scaling for 32 bit, unsigned variables */   
#define Rnxx_UINT32(num,x)  ((uint32_t)  (num) >> (x))
#define Rn32_UINT32(num)   Rnxx_UINT32(num,32)
#define Rn31_UINT32(num)   Rnxx_UINT32(num,31)
#define Rn30_UINT32(num)   Rnxx_UINT32(num,30)
#define Rn29_UINT32(num)   Rnxx_UINT32(num,29)
#define Rn28_UINT32(num)   Rnxx_UINT32(num,28)
#define Rn27_UINT32(num)   Rnxx_UINT32(num,27)
#define Rn26_UINT32(num)   Rnxx_UINT32(num,26)
#define Rn25_UINT32(num)   Rnxx_UINT32(num,25)
#define Rn24_UINT32(num)   Rnxx_UINT32(num,24)
#define Rn23_UINT32(num)   Rnxx_UINT32(num,23)
#define Rn22_UINT32(num)   Rnxx_UINT32(num,22)
#define Rn21_UINT32(num)   Rnxx_UINT32(num,21)
#define Rn20_UINT32(num)   Rnxx_UINT32(num,20)
#define Rn19_UINT32(num)   Rnxx_UINT32(num,19)
#define Rn18_UINT32(num)   Rnxx_UINT32(num,18)
#define Rn17_UINT32(num)   Rnxx_UINT32(num,17)
#define Rn16_UINT32(num)   Rnxx_UINT32(num,16)
#define Rn15_UINT32(num)   Rnxx_UINT32(num,15)
#define Rn14_UINT32(num)   Rnxx_UINT32(num,14)
#define Rn13_UINT32(num)   Rnxx_UINT32(num,13)
#define Rn12_UINT32(num)   Rnxx_UINT32(num,12)
#define Rn11_UINT32(num)   Rnxx_UINT32(num,11)
#define Rn10_UINT32(num)   Rnxx_UINT32(num,10)
#define Rn09_UINT32(num)   Rnxx_UINT32(num, 9)
#define Rn08_UINT32(num)   Rnxx_UINT32(num, 8)
#define Rn07_UINT32(num)   Rnxx_UINT32(num, 7)
#define Rn06_UINT32(num)   Rnxx_UINT32(num, 6)
#define Rn05_UINT32(num)   Rnxx_UINT32(num, 5)
#define Rn04_UINT32(num)   Rnxx_UINT32(num, 4)
#define Rn03_UINT32(num)   Rnxx_UINT32(num, 3)
#define Rn02_UINT32(num)   Rnxx_UINT32(num, 2)
#define Rn01_UINT32(num)   Rnxx_UINT32(num, 1)
#define Rpxx_UINT32(num,x)  ((uint32_t)((num) * (1uL << (x))))
#define Rp01_UINT32(num)   Rpxx_UINT32(num, 1)
#define Rp02_UINT32(num)   Rpxx_UINT32(num, 2)
#define Rp03_UINT32(num)   Rpxx_UINT32(num, 3)
#define Rp04_UINT32(num)   Rpxx_UINT32(num, 4)
#define Rp05_UINT32(num)   Rpxx_UINT32(num, 5)
#define Rp06_UINT32(num)   Rpxx_UINT32(num, 6)
#define Rp07_UINT32(num)   Rpxx_UINT32(num, 7)
#define Rp08_UINT32(num)   Rpxx_UINT32(num, 8)
#define Rp09_UINT32(num)   Rpxx_UINT32(num, 9)
#define Rp10_UINT32(num)   Rpxx_UINT32(num,10)
#define Rp11_UINT32(num)   Rpxx_UINT32(num,11)
#define Rp12_UINT32(num)   Rpxx_UINT32(num,12)
#define Rp13_UINT32(num)   Rpxx_UINT32(num,13)
#define Rp14_UINT32(num)   Rpxx_UINT32(num,14)
#define Rp15_UINT32(num)   Rpxx_UINT32(num,15)
#define Rp16_UINT32(num)   Rpxx_UINT32(num,16)
#define Rp17_UINT32(num)   Rpxx_UINT32(num,17)
#define Rp18_UINT32(num)   Rpxx_UINT32(num,18)
#define Rp19_UINT32(num)   Rpxx_UINT32(num,19)
#define Rp20_UINT32(num)   Rpxx_UINT32(num,20)
#define Rp21_UINT32(num)   Rpxx_UINT32(num,21)
#define Rp22_UINT32(num)   Rpxx_UINT32(num,22)
#define Rp23_UINT32(num)   Rpxx_UINT32(num,23)
#define Rp24_UINT32(num)   Rpxx_UINT32(num,24)
#define Rp25_UINT32(num)   Rpxx_UINT32(num,25)
#define Rp26_UINT32(num)   Rpxx_UINT32(num,26)
#define Rp27_UINT32(num)   Rpxx_UINT32(num,27)
#define Rp28_UINT32(num)   Rpxx_UINT32(num,28)
#define Rp29_UINT32(num)   Rpxx_UINT32(num,29)
#define Rp30_UINT32(num)   Rpxx_UINT32(num,30)
#define Rp31_UINT32(num)   Rpxx_UINT32(num,31)
#define Rp32_UINT32(num)   Rpxx_UINT32(num,32)


#endif
